function Isolate() {}
init();

var $ = Isolate.$isolateProperties;
Isolate.$defineClass("ExceptionImplementation", "Object", ["_lib3_msg"], {
 toString$0: function() {
  if (this._lib3_msg === (void 0)) {
    var t0 = 'Exception';
  } else {
    t0 = 'Exception: ' + $.stringToString(this._lib3_msg);
  }
  return t0;
 },
});

Isolate.$defineClass("FutureImpl", "Object", ["_lib3_exceptionHandlers", "_lib3_listeners", "_lib3_exceptionHandled", "_lib3_exception", "_lib3_value", "_lib3_isComplete"], {
 _lib3_setException$1: function(exception) {
  if (exception === (void 0)) {
    throw $.captureStackTrace($.IllegalArgumentException$1((void 0)));
  }
  if (this._lib3_isComplete === true) {
    throw $.captureStackTrace($.FutureAlreadyCompleteException$0());
  }
  this._lib3_exception = exception;
  this._lib3_complete$0();
 },
 _lib3_setValue$1: function(value) {
  if (this._lib3_isComplete === true) {
    throw $.captureStackTrace($.FutureAlreadyCompleteException$0());
  }
  this._lib3_value = value;
  this._lib3_complete$0();
 },
 _lib3_complete$0: function() {
  this._lib3_isComplete = true;
  if (this._lib3_exception !== (void 0)) {
    for (var t0 = $.iterator(this._lib3_exceptionHandlers); t0.hasNext$0() === true; ) {
      if ($.eqB(t0.next$0().$call$1(this._lib3_exception), true)) {
        this._lib3_exceptionHandled = true;
        break;
      }
    }
  }
  if (this.get$hasValue() === true) {
    for (var t1 = $.iterator(this._lib3_listeners); t1.hasNext$0() === true; ) {
      t1.next$0().$call$1(this.get$value());
    }
  } else {
    if (this._lib3_exceptionHandled !== true && $.gtB($.get$length(this._lib3_listeners), 0)) {
      throw $.captureStackTrace(this._lib3_exception);
    }
  }
 },
 handleException$1: function(onException) {
  if (this._lib3_exceptionHandled === true) {
    return;
  }
  if (this._lib3_isComplete === true) {
    if (!$.eqNullB(this._lib3_exception)) {
      this._lib3_exceptionHandled = onException.$call$1(this._lib3_exception);
    }
  } else {
    $.add$1(this._lib3_exceptionHandlers, onException);
  }
 },
 then$1: function(onComplete) {
  if (this.get$hasValue() === true) {
    onComplete.$call$1(this.get$value());
  } else {
    if (this.get$isComplete() !== true) {
      $.add$1(this._lib3_listeners, onComplete);
    } else {
      if (this._lib3_exceptionHandled !== true) {
        throw $.captureStackTrace(this._lib3_exception);
      }
    }
  }
 },
 get$hasValue: function() {
  return this.get$isComplete() === true && this._lib3_exception === (void 0);
 },
 get$isComplete: function() {
  return this._lib3_isComplete;
 },
 get$value: function() {
  if (this.get$isComplete() !== true) {
    throw $.captureStackTrace($.FutureNotCompleteException$0());
  }
  if (this._lib3_exception !== (void 0)) {
    throw $.captureStackTrace(this._lib3_exception);
  }
  return this._lib3_value;
 },
});

Isolate.$defineClass("CompleterImpl", "Object", ["_lib3_futureImpl"], {
 completeException$1: function(exception) {
  this._lib3_futureImpl._lib3_setException$1(exception);
 },
 complete$1: function(value) {
  this._lib3_futureImpl._lib3_setValue$1(value);
 },
 get$future: function() {
  return this._lib3_futureImpl;
 },
});

Isolate.$defineClass("HashMapImplementation", "Object", ["_lib3_numberOfDeleted", "_lib3_numberOfEntries", "_lib3_loadLimit", "_lib3_values", "_lib3_keys?"], {
 toString$0: function() {
  return $.mapToString(this);
 },
 containsKey$1: function(key) {
  return !$.eqB(this._lib3_probeForLookup$1(key), -1);
 },
 forEach$1: function(f) {
  var length$ = $.get$length(this._lib3_keys);
  if (typeof length$ !== 'number') return this.forEach$1$bailout(f, 1, length$);
  for (var i = 0; i < length$; i = i + 1) {
    var key = $.index(this._lib3_keys, i);
    if (key !== (void 0) && key !== $.CTC6) {
      f.$call$2(key, $.index(this._lib3_values, i));
    }
  }
 },
 forEach$1$bailout: function(f, state, env0) {
  switch (state) {
    case 1:
      length$ = env0;
      break;
  }
  switch (state) {
    case 0:
      var length$ = $.get$length(this._lib3_keys);
    case 1:
      state = 0;
      var i = 0;
      L0: while (true) {
        if (!$.ltB(i, length$)) break L0;
        var key = $.index(this._lib3_keys, i);
        if (key !== (void 0) && key !== $.CTC6) {
          f.$call$2(key, $.index(this._lib3_values, i));
        }
        i = i + 1;
      }
  }
 },
 get$length: function() {
  return this._lib3_numberOfEntries;
 },
 isEmpty$0: function() {
  return $.eq(this._lib3_numberOfEntries, 0);
 },
 operator$index$1: function(key) {
  var index = this._lib3_probeForLookup$1(key);
  if ($.ltB(index, 0)) {
    return;
  }
  return $.index(this._lib3_values, index);
 },
 operator$indexSet$2: function(key, value) {
  this._lib3_ensureCapacity$0();
  var index = this._lib3_probeForAdding$1(key);
  if ($.index(this._lib3_keys, index) === (void 0) || $.index(this._lib3_keys, index) === $.CTC6) {
    this._lib3_numberOfEntries = $.add(this._lib3_numberOfEntries, 1);
  }
  $.indexSet(this._lib3_keys, index, key);
  $.indexSet(this._lib3_values, index, value);
 },
 clear$0: function() {
  this._lib3_numberOfEntries = 0;
  this._lib3_numberOfDeleted = 0;
  var length$ = $.get$length(this._lib3_keys);
  if (typeof length$ !== 'number') return this.clear$0$bailout(1, length$);
  for (var i = 0; i < length$; i = i + 1) {
    $.indexSet(this._lib3_keys, i, (void 0));
    $.indexSet(this._lib3_values, i, (void 0));
  }
 },
 clear$0$bailout: function(state, env0) {
  switch (state) {
    case 1:
      length$ = env0;
      break;
  }
  switch (state) {
    case 0:
      this._lib3_numberOfEntries = 0;
      this._lib3_numberOfDeleted = 0;
      var length$ = $.get$length(this._lib3_keys);
    case 1:
      state = 0;
      var i = 0;
      L0: while (true) {
        if (!$.ltB(i, length$)) break L0;
        $.indexSet(this._lib3_keys, i, (void 0));
        $.indexSet(this._lib3_values, i, (void 0));
        i = i + 1;
      }
  }
 },
 _lib3_grow$1: function(newCapacity) {
  $.assert($._isPowerOfTwo(newCapacity));
  var capacity = $.get$length(this._lib3_keys);
  if (typeof capacity !== 'number') return this._lib3_grow$1$bailout(newCapacity, 1, capacity);
  this._lib3_loadLimit = $._computeLoadLimit(newCapacity);
  var oldKeys = this._lib3_keys;
  if (typeof oldKeys !== 'string' && (typeof oldKeys !== 'object'||oldKeys.constructor !== Array)) return this._lib3_grow$1$bailout(newCapacity, 2, capacity, oldKeys);
  var oldValues = this._lib3_values;
  if (typeof oldValues !== 'string' && (typeof oldValues !== 'object'||oldValues.constructor !== Array)) return this._lib3_grow$1$bailout(newCapacity, 3, capacity, oldKeys, oldValues);
  this._lib3_keys = $.List(newCapacity);
  var t0 = $.List(newCapacity);
  $.setRuntimeTypeInfo(t0, ({E: 'V'}));
  this._lib3_values = t0;
  for (var i = 0; i < capacity; i = i + 1) {
    var t1 = oldKeys.length;
    if (i < 0 || i >= t1) throw $.ioore(i);
    var t2 = oldKeys[i];
    if (t2 === (void 0) || t2 === $.CTC6) {
      continue;
    }
    var t3 = oldValues.length;
    if (i < 0 || i >= t3) throw $.ioore(i);
    var t4 = oldValues[i];
    var newIndex = this._lib3_probeForAdding$1(t2);
    $.indexSet(this._lib3_keys, newIndex, t2);
    $.indexSet(this._lib3_values, newIndex, t4);
  }
  this._lib3_numberOfDeleted = 0;
 },
 _lib3_grow$1$bailout: function(newCapacity, state, env0, env1, env2) {
  switch (state) {
    case 1:
      capacity = env0;
      break;
    case 2:
      capacity = env0;
      oldKeys = env1;
      break;
    case 3:
      capacity = env0;
      oldKeys = env1;
      oldValues = env2;
      break;
  }
  switch (state) {
    case 0:
      $.assert($._isPowerOfTwo(newCapacity));
      var capacity = $.get$length(this._lib3_keys);
    case 1:
      state = 0;
      this._lib3_loadLimit = $._computeLoadLimit(newCapacity);
      var oldKeys = this._lib3_keys;
    case 2:
      state = 0;
      var oldValues = this._lib3_values;
    case 3:
      state = 0;
      this._lib3_keys = $.List(newCapacity);
      var t0 = $.List(newCapacity);
      $.setRuntimeTypeInfo(t0, ({E: 'V'}));
      this._lib3_values = t0;
      var i = 0;
      L0: while (true) {
        if (!$.ltB(i, capacity)) break L0;
        c$0:{
          var key = $.index(oldKeys, i);
          if (key === (void 0) || key === $.CTC6) {
            break c$0;
          }
          var value = $.index(oldValues, i);
          var newIndex = this._lib3_probeForAdding$1(key);
          $.indexSet(this._lib3_keys, newIndex, key);
          $.indexSet(this._lib3_values, newIndex, value);
        }
        i = i + 1;
      }
      this._lib3_numberOfDeleted = 0;
  }
 },
 _lib3_ensureCapacity$0: function() {
  var newNumberOfEntries = $.add(this._lib3_numberOfEntries, 1);
  if ($.geB(newNumberOfEntries, this._lib3_loadLimit)) {
    this._lib3_grow$1($.mul($.get$length(this._lib3_keys), 2));
    return;
  }
  var numberOfFree = $.sub($.sub($.get$length(this._lib3_keys), newNumberOfEntries), this._lib3_numberOfDeleted);
  if ($.gtB(this._lib3_numberOfDeleted, numberOfFree)) {
    this._lib3_grow$1($.get$length(this._lib3_keys));
  }
 },
 _lib3_probeForLookup$1: function(key) {
  for (var hash = $._firstProbe($.hashCode(key), $.get$length(this._lib3_keys)), numberOfProbes = 1; true; hash = hash0, numberOfProbes = numberOfProbes0) {
    numberOfProbes0 = numberOfProbes;
    hash0 = hash;
    var existingKey = $.index(this._lib3_keys, hash);
    if (existingKey === (void 0)) {
      return -1;
    }
    if ($.eqB(existingKey, key)) {
      return hash;
    }
    var numberOfProbes1 = numberOfProbes + 1;
    var hash1 = $._nextProbe(hash, numberOfProbes, $.get$length(this._lib3_keys));
    numberOfProbes0 = numberOfProbes1;
    hash0 = hash1;
  }
 },
 _lib3_probeForAdding$1: function(key) {
  var hash = $._firstProbe($.hashCode(key), $.get$length(this._lib3_keys));
  if (hash !== (hash | 0)) return this._lib3_probeForAdding$1$bailout(key, 1, hash);
  for (var numberOfProbes = 1, hash0 = hash, insertionIndex = -1; true; numberOfProbes = numberOfProbes0, hash0 = hash1, insertionIndex = insertionIndex0) {
    numberOfProbes0 = numberOfProbes;
    hash1 = hash0;
    insertionIndex0 = insertionIndex;
    var existingKey = $.index(this._lib3_keys, hash0);
    if (existingKey === (void 0)) {
      if ($.ltB(insertionIndex, 0)) {
        return hash0;
      }
      return insertionIndex;
    } else {
      if ($.eqB(existingKey, key)) {
        return hash0;
      } else {
        insertionIndex0 = insertionIndex;
        if ($.ltB(insertionIndex, 0) && $.CTC6 === existingKey) {
          insertionIndex0 = hash0;
        }
        var numberOfProbes1 = numberOfProbes + 1;
      }
    }
    var hash2 = $._nextProbe(hash0, numberOfProbes, $.get$length(this._lib3_keys));
    numberOfProbes0 = numberOfProbes1;
    hash1 = hash2;
  }
 },
 _lib3_probeForAdding$1$bailout: function(key, state, env0) {
  switch (state) {
    case 1:
      hash = env0;
      break;
  }
  switch (state) {
    case 0:
      var hash = $._firstProbe($.hashCode(key), $.get$length(this._lib3_keys));
    case 1:
      state = 0;
      var numberOfProbes = 1;
      var hash0 = hash;
      var insertionIndex = -1;
      L0: while (true) {
        if (!true) break L0;
        var numberOfProbes0 = numberOfProbes;
        var hash1 = hash0;
        var insertionIndex0 = insertionIndex;
        var existingKey = $.index(this._lib3_keys, hash0);
        if (existingKey === (void 0)) {
          if ($.ltB(insertionIndex, 0)) {
            return hash0;
          }
          return insertionIndex;
        } else {
          if ($.eqB(existingKey, key)) {
            return hash0;
          } else {
            insertionIndex0 = insertionIndex;
            if ($.ltB(insertionIndex, 0) && $.CTC6 === existingKey) {
              insertionIndex0 = hash0;
            }
            var numberOfProbes1 = numberOfProbes + 1;
          }
        }
        var hash2 = $._nextProbe(hash0, numberOfProbes, $.get$length(this._lib3_keys));
        numberOfProbes0 = numberOfProbes1;
        hash1 = hash2;
        numberOfProbes = numberOfProbes0;
        hash0 = hash1;
        insertionIndex = insertionIndex0;
      }
  }
 },
 HashMapImplementation$0: function() {
  this._lib3_numberOfEntries = 0;
  this._lib3_numberOfDeleted = 0;
  this._lib3_loadLimit = $._computeLoadLimit(8);
  this._lib3_keys = $.List(8);
  var t0 = $.List(8);
  $.setRuntimeTypeInfo(t0, ({E: 'V'}));
  this._lib3_values = t0;
 },
 is$Map: function() { return true; },
});

Isolate.$defineClass("HashSetImplementation", "Object", ["_lib3_backingMap?"], {
 toString$0: function() {
  return $.collectionToString(this);
 },
 iterator$0: function() {
  var t0 = $.HashSetIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({E: 'E'}));
  return t0;
 },
 get$length: function() {
  return $.get$length(this._lib3_backingMap);
 },
 isEmpty$0: function() {
  return $.isEmpty(this._lib3_backingMap);
 },
 filter$1: function(f) {
  var t0 = ({});
  t0.f_1 = f;
  var result = $.HashSetImplementation$0();
  $.setRuntimeTypeInfo(result, ({E: 'E'}));
  t0.result_2 = result;
  $.forEach(this._lib3_backingMap, new $.Closure30(t0));
  return t0.result_2;
 },
 forEach$1: function(f) {
  var t0 = ({});
  t0.f_1 = f;
  $.forEach(this._lib3_backingMap, new $.Closure29(t0));
 },
 contains$1: function(value) {
  return this._lib3_backingMap.containsKey$1(value);
 },
 add$1: function(value) {
  $.indexSet(this._lib3_backingMap, value, value);
 },
 clear$0: function() {
  $.clear(this._lib3_backingMap);
 },
 HashSetImplementation$0: function() {
  this._lib3_backingMap = $.HashMapImplementation$0();
 },
 is$Collection: function() { return true; },
});

Isolate.$defineClass("HashSetIterator", "Object", ["_lib3_nextValidIndex", "_lib3_entries"], {
 _lib3_advance$0: function() {
  var length$ = $.get$length(this._lib3_entries);
  if (typeof length$ !== 'number') return this._lib3_advance$0$bailout(1, length$);
  var entry = (void 0);
  do {
    var t0 = $.add(this._lib3_nextValidIndex, 1);
    this._lib3_nextValidIndex = t0;
    if ($.geB(t0, length$)) {
      break;
    }
    entry = $.index(this._lib3_entries, this._lib3_nextValidIndex);
  } while (entry === (void 0) || entry === $.CTC6);
 },
 _lib3_advance$0$bailout: function(state, env0) {
  switch (state) {
    case 1:
      length$ = env0;
      break;
  }
  switch (state) {
    case 0:
      var length$ = $.get$length(this._lib3_entries);
    case 1:
      state = 0;
      var entry = (void 0);
      L0: while (true) {
        var t0 = $.add(this._lib3_nextValidIndex, 1);
        this._lib3_nextValidIndex = t0;
        if ($.geB(t0, length$)) {
          break;
        }
        entry = $.index(this._lib3_entries, this._lib3_nextValidIndex);
        if (!(entry === (void 0) || entry === $.CTC6)) break L0;
      }
  }
 },
 next$0: function() {
  if (this.hasNext$0() !== true) {
    throw $.captureStackTrace($.CTC2);
  }
  var res = $.index(this._lib3_entries, this._lib3_nextValidIndex);
  this._lib3_advance$0();
  return res;
 },
 hasNext$0: function() {
  if ($.geB(this._lib3_nextValidIndex, $.get$length(this._lib3_entries))) {
    return false;
  }
  if ($.index(this._lib3_entries, this._lib3_nextValidIndex) === $.CTC6) {
    this._lib3_advance$0();
  }
  return $.lt(this._lib3_nextValidIndex, $.get$length(this._lib3_entries));
 },
 HashSetIterator$1: function(set_) {
  this._lib3_advance$0();
 },
});

Isolate.$defineClass("_DeletedKeySentinel", "Object", [], {
});

Isolate.$defineClass("KeyValuePair", "Object", ["value=", "key?"], {
});

Isolate.$defineClass("LinkedHashMapImplementation", "Object", ["_lib3_map", "_lib3_list"], {
 toString$0: function() {
  return $.mapToString(this);
 },
 clear$0: function() {
  $.clear(this._lib3_map);
  $.clear(this._lib3_list);
 },
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
 },
 get$length: function() {
  return $.get$length(this._lib3_map);
 },
 containsKey$1: function(key) {
  return this._lib3_map.containsKey$1(key);
 },
 forEach$1: function(f) {
  var t0 = ({});
  t0.f_1 = f;
  $.forEach(this._lib3_list, new $.Closure14(t0));
 },
 operator$index$1: function(key) {
  var entry = $.index(this._lib3_map, key);
  if (entry === (void 0)) {
    return;
  }
  return entry.get$element().get$value();
 },
 operator$indexSet$2: function(key, value) {
  if (this._lib3_map.containsKey$1(key) === true) {
    $.index(this._lib3_map, key).get$element().set$value(value);
  } else {
    $.addLast(this._lib3_list, $.KeyValuePair$2(key, value));
    $.indexSet(this._lib3_map, key, this._lib3_list.lastEntry$0());
  }
 },
 LinkedHashMapImplementation$0: function() {
  this._lib3_map = $.HashMapImplementation$0();
  var t0 = $.DoubleLinkedQueue$0();
  $.setRuntimeTypeInfo(t0, ({E: 'KeyValuePair<K, V>'}));
  this._lib3_list = t0;
 },
 is$Map: function() { return true; },
});

Isolate.$defineClass("DoubleLinkedQueueEntry", "Object", ["_lib3_element?", "_lib3_next=", "_lib3_previous="], {
 get$element: function() {
  return this._lib3_element;
 },
 previousEntry$0: function() {
  return this._lib3_previous._lib3_asNonSentinelEntry$0();
 },
 _lib3_asNonSentinelEntry$0: function() {
  return this;
 },
 remove$0: function() {
  var t0 = this._lib3_next;
  this._lib3_previous.set$_lib3_next(t0);
  var t1 = this._lib3_previous;
  this._lib3_next.set$_lib3_previous(t1);
  this._lib3_next = (void 0);
  this._lib3_previous = (void 0);
  return this._lib3_element;
 },
 prepend$1: function(e) {
  var t0 = $.DoubleLinkedQueueEntry$1(e);
  $.setRuntimeTypeInfo(t0, ({E: 'E'}));
  t0._lib3_link$2(this._lib3_previous, this);
 },
 _lib3_link$2: function(p, n) {
  this._lib3_next = n;
  this._lib3_previous = p;
  p.set$_lib3_next(this);
  n.set$_lib3_previous(this);
 },
 DoubleLinkedQueueEntry$1: function(e) {
  this._lib3_element = e;
 },
});

Isolate.$defineClass("_DoubleLinkedQueueEntrySentinel", "DoubleLinkedQueueEntry", ["_lib3_element", "_lib3_next", "_lib3_previous"], {
 get$element: function() {
  throw $.captureStackTrace($.CTC5);
 },
 _lib3_asNonSentinelEntry$0: function() {
  return;
 },
 remove$0: function() {
  throw $.captureStackTrace($.CTC5);
 },
 _lib3_DoubleLinkedQueueEntrySentinel$0: function() {
  this._lib3_link$2(this, this);
 },
});

Isolate.$defineClass("DoubleLinkedQueue", "Object", ["_lib3_sentinel"], {
 toString$0: function() {
  return $.collectionToString(this);
 },
 iterator$0: function() {
  var t0 = $._lib3_DoubleLinkedQueueIterator$1(this._lib3_sentinel);
  $.setRuntimeTypeInfo(t0, ({E: 'E'}));
  return t0;
 },
 filter$1: function(f) {
  var other = $.DoubleLinkedQueue$0();
  $.setRuntimeTypeInfo(other, ({E: 'E'}));
  for (var entry = this._lib3_sentinel.get$_lib3_next(); entry !== this._lib3_sentinel; entry = entry0) {
    entry0 = entry;
    var nextEntry = entry.get$_lib3_next();
    if (f.$call$1(entry.get$_lib3_element()) === true) {
      other.addLast$1(entry.get$_lib3_element());
    }
    entry0 = nextEntry;
  }
  return other;
 },
 forEach$1: function(f) {
  for (var entry = this._lib3_sentinel.get$_lib3_next(); entry !== this._lib3_sentinel; entry = entry0) {
    entry0 = entry;
    var nextEntry = entry.get$_lib3_next();
    f.$call$1(entry.get$_lib3_element());
    entry0 = nextEntry;
  }
 },
 clear$0: function() {
  var t0 = this._lib3_sentinel;
  this._lib3_sentinel.set$_lib3_next(t0);
  var t1 = this._lib3_sentinel;
  this._lib3_sentinel.set$_lib3_previous(t1);
 },
 isEmpty$0: function() {
  return this._lib3_sentinel.get$_lib3_next() === this._lib3_sentinel;
 },
 get$length: function() {
  var t0 = ({});
  t0.counter_1 = 0;
  this.forEach$1(new $.Closure13(t0));
  return t0.counter_1;
 },
 lastEntry$0: function() {
  return this._lib3_sentinel.previousEntry$0();
 },
 last$0: function() {
  return this._lib3_sentinel.get$_lib3_previous().get$element();
 },
 first$0: function() {
  return this._lib3_sentinel.get$_lib3_next().get$element();
 },
 removeLast$0: function() {
  return this._lib3_sentinel.get$_lib3_previous().remove$0();
 },
 add$1: function(value) {
  this.addLast$1(value);
 },
 addLast$1: function(value) {
  this._lib3_sentinel.prepend$1(value);
 },
 DoubleLinkedQueue$0: function() {
  var t0 = $._lib3_DoubleLinkedQueueEntrySentinel$0();
  $.setRuntimeTypeInfo(t0, ({E: 'E'}));
  this._lib3_sentinel = t0;
 },
 is$Collection: function() { return true; },
});

Isolate.$defineClass("_DoubleLinkedQueueIterator", "Object", ["_lib3_currentEntry", "_lib3_sentinel"], {
 next$0: function() {
  if (this.hasNext$0() !== true) {
    throw $.captureStackTrace($.CTC2);
  }
  this._lib3_currentEntry = this._lib3_currentEntry.get$_lib3_next();
  return this._lib3_currentEntry.get$element();
 },
 hasNext$0: function() {
  return this._lib3_currentEntry.get$_lib3_next() !== this._lib3_sentinel;
 },
 _lib3_DoubleLinkedQueueIterator$1: function(_sentinel) {
  this._lib3_currentEntry = this._lib3_sentinel;
 },
});

Isolate.$defineClass("StringBufferImpl", "Object", ["_lib3_length", "_lib3_buffer"], {
 toString$0: function() {
  if ($.get$length(this._lib3_buffer) === 0) {
    return '';
  }
  if ($.get$length(this._lib3_buffer) === 1) {
    return $.index(this._lib3_buffer, 0);
  }
  var result = $.concatAll(this._lib3_buffer);
  $.clear(this._lib3_buffer);
  $.add$1(this._lib3_buffer, result);
  return result;
 },
 clear$0: function() {
  var t0 = $.List((void 0));
  $.setRuntimeTypeInfo(t0, ({E: 'String'}));
  this._lib3_buffer = t0;
  this._lib3_length = 0;
  return this;
 },
 add$1: function(obj) {
  var str = $.toString(obj);
  if (str === (void 0) || $.isEmpty(str) === true) {
    return this;
  }
  $.add$1(this._lib3_buffer, str);
  this._lib3_length = $.add(this._lib3_length, $.get$length(str));
  return this;
 },
 isEmpty$0: function() {
  return this._lib3_length === 0;
 },
 get$length: function() {
  return this._lib3_length;
 },
 StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
 },
});

Isolate.$defineClass("JSSyntaxRegExp", "Object", ["ignoreCase?", "multiLine?", "pattern?"], {
 allMatches$1: function(str) {
  $.checkString(str);
  return $._lib3_AllMatchesIterable$2(this, str);
 },
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
 },
 firstMatch$1: function(str) {
  var m = $.regExpExec(this, $.checkString(str));
  if (m === (void 0)) {
    return;
  }
  var matchStart = $.regExpMatchStart(m);
  var matchEnd = $.add(matchStart, $.get$length($.index(m, 0)));
  return $.MatchImplementation$5(this.pattern, str, matchStart, matchEnd, m);
 },
 JSSyntaxRegExp$_globalVersionOf$1: function(other) {
  $.regExpAttachGlobalNative(this);
 },
 is$JSSyntaxRegExp: true,
});

Isolate.$defineClass("MatchImplementation", "Object", ["_lib3_groups", "_lib3_end", "_lib3_start", "str", "pattern?"], {
 operator$index$1: function(index) {
  return this.group$1(index);
 },
 group$1: function(index) {
  return $.index(this._lib3_groups, index);
 },
});

Isolate.$defineClass("_AllMatchesIterable", "Object", ["_lib3_str", "_lib3_re"], {
 iterator$0: function() {
  return $._lib3_AllMatchesIterator$2(this._lib3_re, this._lib3_str);
 },
});

Isolate.$defineClass("_AllMatchesIterator", "Object", ["_lib3_done", "_lib3_next=", "_lib3_str", "_lib3_re"], {
 hasNext$0: function() {
  if (this._lib3_done === true) {
    return false;
  } else {
    if (!$.eqNullB(this._lib3_next)) {
      return true;
    }
  }
  this._lib3_next = this._lib3_re.firstMatch$1(this._lib3_str);
  if ($.eqNullB(this._lib3_next)) {
    this._lib3_done = true;
    return false;
  } else {
    return true;
  }
 },
 next$0: function() {
  if (this.hasNext$0() !== true) {
    throw $.captureStackTrace($.CTC2);
  }
  var next = this._lib3_next;
  this._lib3_next = (void 0);
  return next;
 },
});

Isolate.$defineClass("TimeZoneImplementation", "Object", ["isUtc?"], {
 operator$eq$1: function(other) {
  if (!((typeof other === 'object') && !!other.is$TimeZoneImplementation)) {
    return false;
  }
  return $.eq(this.isUtc, other.isUtc);
 },
 is$TimeZoneImplementation: true,
});

Isolate.$defineClass("DateImplementation", "Object", ["timeZone?", "value?"], {
 _lib3_asJs$0: function() {
  return $.lazyAsJsDate(this);
 },
 add$1: function(duration) {
  $.checkNull(duration);
  return $.DateImplementation$fromEpoch$2($.add(this.value, duration.get$inMilliseconds()), this.timeZone);
 },
 toString$0: function() {
  var t0 = new $.Closure10();
  var t1 = new $.Closure11();
  var t2 = new $.Closure12();
  var y = t0.$call$1(this.get$year());
  var m = t2.$call$1(this.get$month());
  var d = t2.$call$1(this.get$day());
  var h = t2.$call$1(this.get$hours());
  var min = t2.$call$1(this.get$minutes());
  var sec = t2.$call$1(this.get$seconds());
  var ms = t1.$call$1(this.get$milliseconds());
  if (this.timeZone.get$isUtc() === true) {
    return '' + $.stringToString(y) + '-' + $.stringToString(m) + '-' + $.stringToString(d) + ' ' + $.stringToString(h) + ':' + $.stringToString(min) + ':' + $.stringToString(sec) + '.' + $.stringToString(ms) + 'Z';
  } else {
    return '' + $.stringToString(y) + '-' + $.stringToString(m) + '-' + $.stringToString(d) + ' ' + $.stringToString(h) + ':' + $.stringToString(min) + ':' + $.stringToString(sec) + '.' + $.stringToString(ms);
  }
 },
 isUtc$0: function() {
  return this.timeZone.get$isUtc();
 },
 get$isUtc: function() { return new $.Closure31(this); },
 get$milliseconds: function() {
  return $.getMilliseconds(this);
 },
 get$seconds: function() {
  return $.getSeconds(this);
 },
 get$minutes: function() {
  return $.getMinutes(this);
 },
 get$hours: function() {
  return $.getHours(this);
 },
 get$day: function() {
  return $.getDay(this);
 },
 get$month: function() {
  return $.getMonth(this);
 },
 get$year: function() {
  return $.getYear(this);
 },
 operator$eq$1: function(other) {
  if (!((typeof other === 'object') && !!other.is$DateImplementation)) {
    return false;
  }
  return $.eqB(this.value, other.value) && $.eqB(this.timeZone, other.timeZone);
 },
 DateImplementation$now$0: function() {
  this._lib3_asJs$0();
 },
 is$DateImplementation: true,
});

Isolate.$defineClass("ListIterator", "Object", ["list", "i"], {
 next$0: function() {
  if (this.hasNext$0() !== true) {
    throw $.captureStackTrace($.NoMoreElementsException$0());
  }
  var value = (this.list[this.i]);
  this.i = $.add(this.i, 1);
  return value;
 },
 hasNext$0: function() {
  return $.lt(this.i, (this.list.length));
 },
});

Isolate.$defineClass("Closure32", "Object", [], {
 toString$0: function() {
  return 'Closure';
 },
});

Isolate.$defineClass("MetaInfo", "Object", ["set?", "tags", "tag?"], {
});

Isolate.$defineClass("StringMatch", "Object", ["pattern?", "str", "_lib7_start"], {
 group$1: function(group_) {
  if (!$.eqB(group_, 0)) {
    throw $.captureStackTrace($.IndexOutOfRangeException$1(group_));
  }
  return this.pattern;
 },
 operator$index$1: function(g) {
  return this.group$1(g);
 },
});

Isolate.$defineClass("Object", "", [], {
 toString$0: function() {
  return $.objectToString(this);
 },
});

Isolate.$defineClass("IndexOutOfRangeException", "Object", ["_lib2_index"], {
 toString$0: function() {
  return 'IndexOutOfRangeException: ' + $.stringToString(this._lib2_index);
 },
});

Isolate.$defineClass("NoSuchMethodException", "Object", ["_lib2_existingArgumentNames", "_lib2_arguments", "_lib2_functionName", "_lib2_receiver"], {
 toString$0: function() {
  var sb = $.StringBufferImpl$1('');
  for (var i = 0; $.ltB(i, $.get$length(this._lib2_arguments)); i = i + 1) {
    if (i > 0) {
      sb.add$1(', ');
    }
    sb.add$1($.index(this._lib2_arguments, i));
  }
  if (this._lib2_existingArgumentNames === (void 0)) {
    return 'NoSuchMethodException : method not found: \'' + $.stringToString(this._lib2_functionName) + '\'\nReceiver: ' + $.stringToString(this._lib2_receiver) + '\nArguments: [' + $.stringToString(sb) + ']';
  } else {
    var actualParameters = sb.toString$0();
    var sb0 = $.StringBufferImpl$1('');
    for (var i0 = 0; $.ltB(i0, $.get$length(this._lib2_existingArgumentNames)); i0 = i0 + 1) {
      if (i0 > 0) {
        sb0.add$1(', ');
      }
      sb0.add$1($.index(this._lib2_existingArgumentNames, i0));
    }
    var formalParameters = sb0.toString$0();
    return 'NoSuchMethodException: incorrect number of arguments passed to method named \'' + $.stringToString(this._lib2_functionName) + '\'\nReceiver: ' + $.stringToString(this._lib2_receiver) + '\nTried calling: ' + $.stringToString(this._lib2_functionName) + '(' + $.stringToString(actualParameters) + ')\nFound: ' + $.stringToString(this._lib2_functionName) + '(' + $.stringToString(formalParameters) + ')';
  }
 },
});

Isolate.$defineClass("ObjectNotClosureException", "Object", [], {
 toString$0: function() {
  return 'Object is not closure';
 },
});

Isolate.$defineClass("IllegalArgumentException", "Object", ["_lib2_arg"], {
 toString$0: function() {
  return 'Illegal argument(s): ' + $.stringToString(this._lib2_arg);
 },
});

Isolate.$defineClass("StackOverflowException", "Object", [], {
 toString$0: function() {
  return 'Stack Overflow';
 },
});

Isolate.$defineClass("BadNumberFormatException", "Object", ["_lib2_s"], {
 toString$0: function() {
  return 'BadNumberFormatException: \'' + $.stringToString(this._lib2_s) + '\'';
 },
});

Isolate.$defineClass("NullPointerException", "Object", ["arguments", "functionName"], {
 get$exceptionName: function() {
  return 'NullPointerException';
 },
 toString$0: function() {
  if ($.eqNullB(this.functionName)) {
    return this.get$exceptionName();
  } else {
    return '' + $.stringToString(this.get$exceptionName()) + ' : method: \'' + $.stringToString(this.functionName) + '\'\nReceiver: null\nArguments: ' + $.stringToString(this.arguments);
  }
 },
});

Isolate.$defineClass("NoMoreElementsException", "Object", [], {
 toString$0: function() {
  return 'NoMoreElementsException';
 },
});

Isolate.$defineClass("EmptyQueueException", "Object", [], {
 toString$0: function() {
  return 'EmptyQueueException';
 },
});

Isolate.$defineClass("UnsupportedOperationException", "Object", ["_lib2_message"], {
 toString$0: function() {
  return 'UnsupportedOperationException: ' + $.stringToString(this._lib2_message);
 },
});

Isolate.$defineClass("IllegalJSRegExpException", "Object", ["_lib2_errmsg", "_lib2_pattern"], {
 toString$0: function() {
  return 'IllegalJSRegExpException: \'' + $.stringToString(this._lib2_pattern) + '\' \'' + $.stringToString(this._lib2_errmsg) + '\'';
 },
});

Isolate.$defineClass("FutureNotCompleteException", "Object", [], {
 toString$0: function() {
  return 'Exception: future has not been completed';
 },
});

Isolate.$defineClass("FutureAlreadyCompleteException", "Object", [], {
 toString$0: function() {
  return 'Exception: future already completed';
 },
});

Isolate.$defineClass("_AbstractWorkerEventsImpl", "_EventsImpl", ["_lib_ptr"], {
 get$error: function() {
  return this._lib_get$1('error');
 },
});

Isolate.$defineClass("_AudioContextEventsImpl", "_EventsImpl", ["_lib_ptr"], {
 get$complete: function() {
  return this._lib_get$1('complete');
 },
 complete$1: function(arg0) { return this.get$complete().$call$1(arg0); },
});

Isolate.$defineClass("_BatteryManagerEventsImpl", "_EventsImpl", ["_lib_ptr"], {
});

Isolate.$defineClass("_BodyElementEventsImpl", "_ElementEventsImpl", ["_lib_ptr"], {
 get$message: function() {
  return this._lib_get$1('message');
 },
 get$error: function() {
  return this._lib_get$1('error');
 },
});

Isolate.$defineClass("_DOMApplicationCacheEventsImpl", "_EventsImpl", ["_lib_ptr"], {
 get$error: function() {
  return this._lib_get$1('error');
 },
});

Isolate.$defineClass("_DedicatedWorkerContextEventsImpl", "_WorkerContextEventsImpl", ["_lib_ptr"], {
 get$message: function() {
  return this._lib_get$1('message');
 },
});

Isolate.$defineClass("_DeprecatedPeerConnectionEventsImpl", "_EventsImpl", ["_lib_ptr"], {
 get$open: function() {
  return this._lib_get$1('open');
 },
 open$2: function(arg0, arg1) { return this.get$open().$call$2(arg0, arg1); },
 open$3: function(arg0, arg1, arg2) { return this.get$open().$call$3(arg0, arg1, arg2); },
 get$message: function() {
  return this._lib_get$1('message');
 },
});

Isolate.$defineClass("_DocumentEventsImpl", "_ElementEventsImpl", ["_lib_ptr"], {
 get$search: function() {
  return this._lib_get$1('search');
 },
 search$1$ll: function(arg0) { return this.get$search().$call$1$ll(arg0); },
 get$error: function() {
  return this._lib_get$1('error');
 },
 get$click: function() {
  return this._lib_get$1('click');
 },
});

Isolate.$defineClass("FilteredElementList", "Object", ["_lib_childNodes", "_lib_node"], {
 last$0: function() {
  return $.last(this.get$_lib_filtered());
 },
 indexOf$2: function(element, start) {
  return $.indexOf$2(this.get$_lib_filtered(), element, start);
 },
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 getRange$2: function(start, rangeLength) {
  return $.getRange(this.get$_lib_filtered(), start, rangeLength);
 },
 iterator$0: function() {
  return $.iterator(this.get$_lib_filtered());
 },
 operator$index$1: function(index) {
  return $.index(this.get$_lib_filtered(), index);
 },
 get$length: function() {
  return $.get$length(this.get$_lib_filtered());
 },
 isEmpty$0: function() {
  return $.isEmpty(this.get$_lib_filtered());
 },
 filter$1: function(f) {
  return $.filter(this.get$_lib_filtered(), f);
 },
 removeLast$0: function() {
  var result = this.last$0();
  if (!$.eqNullB(result)) {
    result.remove$0();
  }
  return result;
 },
 clear$0: function() {
  $.clear(this._lib_childNodes);
 },
 removeRange$2: function(start, rangeLength) {
  $.forEach($.getRange(this.get$_lib_filtered(), start, rangeLength), new $.Closure28());
 },
 addLast$1: function(value) {
  this.add$1(value);
 },
 add$1: function(value) {
  $.add$1(this._lib_childNodes, value);
 },
 set$length: function(newLength) {
  var len = $.get$length(this);
  if ($.geB(newLength, len)) {
    return;
  } else {
    if ($.ltB(newLength, 0)) {
      throw $.captureStackTrace($.CTC9);
    }
  }
  this.removeRange$2($.sub(newLength, 1), $.sub(len, newLength));
 },
 operator$indexSet$2: function(index, value) {
  this.operator$index$1(index).replaceWith$1(value);
 },
 forEach$1: function(f) {
  $.forEach(this.get$_lib_filtered(), f);
 },
 get$first: function() {
  for (var t0 = $.iterator(this._lib_childNodes); t0.hasNext$0() === true; ) {
    var t1 = t0.next$0();
    if (typeof t1 === 'object' && t1.is$Element()) {
      return t1;
    }
  }
  return;
 },
 first$0: function() { return this.get$first().$call$0(); },
 get$_lib_filtered: function() {
  return $.List$from($.filter(this._lib_childNodes, new $.Closure26()));
 },
 is$List2: function() { return true; },
 is$Collection: function() { return true; },
});

Isolate.$defineClass("_ChildrenElementList", "Object", ["_lib_childElements", "_lib_element?"], {
 last$0: function() {
  return this._lib_element.get$$$dom_lastElementChild();
 },
 removeLast$0: function() {
  var result = this.last$0();
  if (!$.eqNullB(result)) {
    this._lib_element.$dom_removeChild$1(result);
  }
  return result;
 },
 clear$0: function() {
  this._lib_element.set$text('');
 },
 indexOf$2: function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 },
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 getRange$2: function(start, rangeLength) {
  return $._lib_FrozenElementList$_wrap$1($.getRange2(this, start, rangeLength, []));
 },
 iterator$0: function() {
  return $.iterator(this._lib_toList$0());
 },
 addLast$1: function(value) {
  return this.add$1(value);
 },
 add$1: function(value) {
  this._lib_element.$dom_appendChild$1(value);
  return value;
 },
 set$length: function(newLength) {
  throw $.captureStackTrace($.CTC8);
 },
 operator$indexSet$2: function(index, value) {
  this._lib_element.$dom_replaceChild$2(value, $.index(this._lib_childElements, index));
 },
 operator$index$1: function(index) {
  return $.index(this._lib_childElements, index);
 },
 get$length: function() {
  return $.get$length(this._lib_childElements);
 },
 isEmpty$0: function() {
  return $.eqNull(this._lib_element.get$$$dom_firstElementChild());
 },
 filter$1: function(f) {
  var t0 = ({});
  t0.f_1 = f;
  var output = [];
  this.forEach$1(new $.Closure27(t0, output));
  return $._lib_FrozenElementList$_wrap$1(output);
 },
 forEach$1: function(f) {
  for (var t0 = $.iterator(this._lib_childElements); t0.hasNext$0() === true; ) {
    f.$call$1(t0.next$0());
  }
 },
 get$first: function() {
  return this._lib_element.get$$$dom_firstElementChild();
 },
 first$0: function() { return this.get$first().$call$0(); },
 _lib_toList$0: function() {
  var output = $.List($.get$length(this._lib_childElements));
  var len = $.get$length(this._lib_childElements);
  if (typeof len !== 'number') return this._lib_toList$0$bailout(1, output, len);
  var i = 0;
  for (; i < len; i = i + 1) {
    var t0 = $.index(this._lib_childElements, i);
    var t1 = output.length;
    if (i < 0 || i >= t1) throw $.ioore(i);
    output[i] = t0;
  }
  return output;
 },
 _lib_toList$0$bailout: function(state, env0, env1) {
  switch (state) {
    case 1:
      output = env0;
      len = env1;
      break;
  }
  switch (state) {
    case 0:
      var output = $.List($.get$length(this._lib_childElements));
      var len = $.get$length(this._lib_childElements);
    case 1:
      state = 0;
      var i = 0;
      L0: while (true) {
        if (!$.ltB(i, len)) break L0;
        var t0 = $.index(this._lib_childElements, i);
        var t1 = output.length;
        if (i < 0 || i >= t1) throw $.ioore(i);
        output[i] = t0;
        i = i + 1;
      }
      return output;
  }
 },
 is$List2: function() { return true; },
 is$Collection: function() { return true; },
});

Isolate.$defineClass("_FrozenElementList", "Object", ["_lib_nodeList"], {
 last$0: function() {
  return $.last(this._lib_nodeList);
 },
 removeLast$0: function() {
  throw $.captureStackTrace($.CTC8);
 },
 clear$0: function() {
  throw $.captureStackTrace($.CTC8);
 },
 indexOf$2: function(element, start) {
  return $.indexOf$2(this._lib_nodeList, element, start);
 },
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 getRange$2: function(start, rangeLength) {
  return $._lib_FrozenElementList$_wrap$1($.getRange(this._lib_nodeList, start, rangeLength));
 },
 iterator$0: function() {
  return $._lib_FrozenElementListIterator$1(this);
 },
 addLast$1: function(value) {
  throw $.captureStackTrace($.CTC8);
 },
 add$1: function(value) {
  throw $.captureStackTrace($.CTC8);
 },
 set$length: function(newLength) {
  $.set$length(this._lib_nodeList, newLength);
 },
 operator$indexSet$2: function(index, value) {
  throw $.captureStackTrace($.CTC8);
 },
 operator$index$1: function(index) {
  return $.index(this._lib_nodeList, index);
 },
 get$length: function() {
  return $.get$length(this._lib_nodeList);
 },
 isEmpty$0: function() {
  return $.isEmpty(this._lib_nodeList);
 },
 filter$1: function(f) {
  var out = $._lib_ElementList$1([]);
  for (var t0 = this.iterator$0(); t0.hasNext$0() === true; ) {
    var t1 = t0.next$0();
    if (f.$call$1(t1) === true) {
      out.add$1(t1);
    }
  }
  return out;
 },
 forEach$1: function(f) {
  for (var t0 = this.iterator$0(); t0.hasNext$0() === true; ) {
    f.$call$1(t0.next$0());
  }
 },
 get$first: function() {
  return $.index(this._lib_nodeList, 0);
 },
 first$0: function() { return this.get$first().$call$0(); },
 is$List2: function() { return true; },
 is$Collection: function() { return true; },
});

Isolate.$defineClass("_FrozenElementListIterator", "Object", ["_lib_index", "_lib_list"], {
 hasNext$0: function() {
  return $.lt(this._lib_index, $.get$length(this._lib_list));
 },
 next$0: function() {
  if (this.hasNext$0() !== true) {
    throw $.captureStackTrace($.CTC2);
  }
  var t0 = this._lib_list;
  var t1 = this._lib_index;
  this._lib_index = $.add(t1, 1);
  return $.index(t0, t1);
 },
});

Isolate.$defineClass("_ElementList", "_ListWrapper", ["_lib_list"], {
 getRange$2: function(start, rangeLength) {
  return $._lib_ElementList$1($._ListWrapper.prototype.getRange$2.call(this, start, rangeLength));
 },
 filter$1: function(f) {
  return $._lib_ElementList$1($._ListWrapper.prototype.filter$1.call(this, f));
 },
 is$List2: function() { return true; },
 is$Collection: function() { return true; },
});

Isolate.$defineClass("_ElementEventsImpl", "_EventsImpl", ["_lib_ptr"], {
 get$search: function() {
  return this._lib_get$1('search');
 },
 search$1$ll: function(arg0) { return this.get$search().$call$1$ll(arg0); },
 get$error: function() {
  return this._lib_get$1('error');
 },
 get$click: function() {
  return this._lib_get$1('click');
 },
});

Isolate.$defineClass("_EventSourceEventsImpl", "_EventsImpl", ["_lib_ptr"], {
 get$open: function() {
  return this._lib_get$1('open');
 },
 open$2: function(arg0, arg1) { return this.get$open().$call$2(arg0, arg1); },
 open$3: function(arg0, arg1, arg2) { return this.get$open().$call$3(arg0, arg1, arg2); },
 get$message: function() {
  return this._lib_get$1('message');
 },
 get$error: function() {
  return this._lib_get$1('error');
 },
});

Isolate.$defineClass("_EventsImpl", "Object", ["_lib_ptr"], {
 _lib_get$1: function(type) {
  return $._lib_EventListenerListImpl$2(this._lib_ptr, type);
 },
 operator$index$1: function(type) {
  return this._lib_get$1($.toLowerCase(type));
 },
});

Isolate.$defineClass("_EventListenerListImpl", "Object", ["_lib_type", "_lib_ptr"], {
 _lib_add$2: function(listener, useCapture) {
  this._lib_ptr.$dom_addEventListener$3(this._lib_type, listener, useCapture);
 },
 add$2: function(listener, useCapture) {
  this._lib_add$2(listener, useCapture);
  return this;
 },
 add$1: function(listener) {
  return this.add$2(listener,false)
},
});

Isolate.$defineClass("_FileReaderEventsImpl", "_EventsImpl", ["_lib_ptr"], {
 get$loadEnd: function() {
  return this._lib_get$1('loadend');
 },
 get$error: function() {
  return this._lib_get$1('error');
 },
});

Isolate.$defineClass("_FileWriterEventsImpl", "_EventsImpl", ["_lib_ptr"], {
 get$error: function() {
  return this._lib_get$1('error');
 },
});

Isolate.$defineClass("_FrameSetElementEventsImpl", "_ElementEventsImpl", ["_lib_ptr"], {
 get$message: function() {
  return this._lib_get$1('message');
 },
 get$error: function() {
  return this._lib_get$1('error');
 },
});

Isolate.$defineClass("_IDBDatabaseEventsImpl", "_EventsImpl", ["_lib_ptr"], {
 get$error: function() {
  return this._lib_get$1('error');
 },
});

Isolate.$defineClass("_IDBRequestEventsImpl", "_EventsImpl", ["_lib_ptr"], {
 get$error: function() {
  return this._lib_get$1('error');
 },
});

Isolate.$defineClass("_IDBTransactionEventsImpl", "_EventsImpl", ["_lib_ptr"], {
 get$error: function() {
  return this._lib_get$1('error');
 },
 get$complete: function() {
  return this._lib_get$1('complete');
 },
 complete$1: function(arg0) { return this.get$complete().$call$1(arg0); },
});

Isolate.$defineClass("_IDBVersionChangeRequestEventsImpl", "_IDBRequestEventsImpl", ["_lib_ptr"], {
});

Isolate.$defineClass("_InputElementEventsImpl", "_ElementEventsImpl", ["_lib_ptr"], {
});

Isolate.$defineClass("_JavaScriptAudioNodeEventsImpl", "_EventsImpl", ["_lib_ptr"], {
});

Isolate.$defineClass("_MediaElementEventsImpl", "_ElementEventsImpl", ["_lib_ptr"], {
});

Isolate.$defineClass("_MediaStreamEventsImpl", "_EventsImpl", ["_lib_ptr"], {
});

Isolate.$defineClass("_MessagePortEventsImpl", "_EventsImpl", ["_lib_ptr"], {
 get$message: function() {
  return this._lib_get$1('message');
 },
});

Isolate.$defineClass("_ChildNodeListLazy", "Object", ["_lib_this"], {
 operator$index$1: function(index) {
  return $.index(this._lib_this.get$$$dom_childNodes(), index);
 },
 get$length: function() {
  return $.get$length(this._lib_this.get$$$dom_childNodes());
 },
 getRange$2: function(start, rangeLength) {
  return $._lib_NodeListWrapper$1($.getRange2(this, start, rangeLength, []));
 },
 indexOf$2: function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 },
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
 },
 filter$1: function(f) {
  return $._lib_NodeListWrapper$1($.filter3(this, [], f));
 },
 forEach$1: function(f) {
  return $.forEach3(this, f);
 },
 iterator$0: function() {
  return $.iterator(this._lib_this.get$$$dom_childNodes());
 },
 operator$indexSet$2: function(index, value) {
  this._lib_this.$dom_replaceChild$2(value, this.operator$index$1(index));
 },
 clear$0: function() {
  this._lib_this.set$text('');
 },
 removeLast$0: function() {
  var result = this.last$0();
  if (!$.eqNullB(result)) {
    this._lib_this.$dom_removeChild$1(result);
  }
  return result;
 },
 addLast$1: function(value) {
  this._lib_this.$dom_appendChild$1(value);
 },
 add$1: function(value) {
  this._lib_this.$dom_appendChild$1(value);
 },
 last$0: function() {
  return this._this.lastChild;;
 },
 get$first: function() {
  return this._this.firstChild;;
 },
 first$0: function() { return this.get$first().$call$0(); },
 is$List2: function() { return true; },
 is$Collection: function() { return true; },
});

Isolate.$defineClass("_ListWrapper", "Object", [], {
 get$first: function() {
  return $.index(this._lib_list, 0);
 },
 first$0: function() { return this.get$first().$call$0(); },
 getRange$2: function(start, rangeLength) {
  return $.getRange(this._lib_list, start, rangeLength);
 },
 last$0: function() {
  return $.last(this._lib_list);
 },
 removeLast$0: function() {
  return $.removeLast(this._lib_list);
 },
 clear$0: function() {
  return $.clear(this._lib_list);
 },
 indexOf$2: function(element, start) {
  return $.indexOf$2(this._lib_list, element, start);
 },
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 addLast$1: function(value) {
  return $.addLast(this._lib_list, value);
 },
 add$1: function(value) {
  return $.add$1(this._lib_list, value);
 },
 set$length: function(newLength) {
  $.set$length(this._lib_list, newLength);
 },
 operator$indexSet$2: function(index, value) {
  $.indexSet(this._lib_list, index, value);
 },
 operator$index$1: function(index) {
  return $.index(this._lib_list, index);
 },
 get$length: function() {
  return $.get$length(this._lib_list);
 },
 isEmpty$0: function() {
  return $.isEmpty(this._lib_list);
 },
 filter$1: function(f) {
  return $.filter(this._lib_list, f);
 },
 forEach$1: function(f) {
  return $.forEach(this._lib_list, f);
 },
 iterator$0: function() {
  return $.iterator(this._lib_list);
 },
 is$List2: function() { return true; },
 is$Collection: function() { return true; },
});

Isolate.$defineClass("_NodeListWrapper", "_ListWrapper", ["_lib_list"], {
 getRange$2: function(start, rangeLength) {
  return $._lib_NodeListWrapper$1($.getRange(this._lib_list, start, rangeLength));
 },
 filter$1: function(f) {
  return $._lib_NodeListWrapper$1($.filter(this._lib_list, f));
 },
 is$List2: function() { return true; },
 is$Collection: function() { return true; },
});

Isolate.$defineClass("_NotificationEventsImpl", "_EventsImpl", ["_lib_ptr"], {
 get$error: function() {
  return this._lib_get$1('error');
 },
 get$close: function() {
  return this._lib_get$1('close');
 },
 close$0: function() { return this.get$close().$call$0(); },
 get$click: function() {
  return this._lib_get$1('click');
 },
});

Isolate.$defineClass("_PeerConnection00EventsImpl", "_EventsImpl", ["_lib_ptr"], {
 get$open: function() {
  return this._lib_get$1('open');
 },
 open$2: function(arg0, arg1) { return this.get$open().$call$2(arg0, arg1); },
 open$3: function(arg0, arg1, arg2) { return this.get$open().$call$3(arg0, arg1, arg2); },
});

Isolate.$defineClass("_SVGElementInstanceEventsImpl", "_EventsImpl", ["_lib_ptr"], {
 get$search: function() {
  return this._lib_get$1('search');
 },
 search$1$ll: function(arg0) { return this.get$search().$call$1$ll(arg0); },
 get$error: function() {
  return this._lib_get$1('error');
 },
 get$click: function() {
  return this._lib_get$1('click');
 },
});

Isolate.$defineClass("_SharedWorkerContextEventsImpl", "_WorkerContextEventsImpl", ["_lib_ptr"], {
});

Isolate.$defineClass("_SpeechRecognitionEventsImpl", "_EventsImpl", ["_lib_ptr"], {
 get$error: function() {
  return this._lib_get$1('error');
 },
});

Isolate.$defineClass("_TextTrackEventsImpl", "_EventsImpl", ["_lib_ptr"], {
});

Isolate.$defineClass("_TextTrackCueEventsImpl", "_EventsImpl", ["_lib_ptr"], {
});

Isolate.$defineClass("_TextTrackListEventsImpl", "_EventsImpl", ["_lib_ptr"], {
});

Isolate.$defineClass("_WebSocketEventsImpl", "_EventsImpl", ["_lib_ptr"], {
 get$open: function() {
  return this._lib_get$1('open');
 },
 open$2: function(arg0, arg1) { return this.get$open().$call$2(arg0, arg1); },
 open$3: function(arg0, arg1, arg2) { return this.get$open().$call$3(arg0, arg1, arg2); },
 get$message: function() {
  return this._lib_get$1('message');
 },
 get$error: function() {
  return this._lib_get$1('error');
 },
 get$close: function() {
  return this._lib_get$1('close');
 },
 close$0: function() { return this.get$close().$call$0(); },
});

Isolate.$defineClass("_WindowEventsImpl", "_EventsImpl", ["_lib_ptr"], {
 get$search: function() {
  return this._lib_get$1('search');
 },
 search$1$ll: function(arg0) { return this.get$search().$call$1$ll(arg0); },
 get$message: function() {
  return this._lib_get$1('message');
 },
 get$error: function() {
  return this._lib_get$1('error');
 },
 get$click: function() {
  return this._lib_get$1('click');
 },
});

Isolate.$defineClass("_WorkerEventsImpl", "_AbstractWorkerEventsImpl", ["_lib_ptr"], {
 get$message: function() {
  return this._lib_get$1('message');
 },
});

Isolate.$defineClass("_WorkerContextEventsImpl", "_EventsImpl", ["_lib_ptr"], {
 get$error: function() {
  return this._lib_get$1('error');
 },
});

Isolate.$defineClass("_XMLHttpRequestEventsImpl", "_EventsImpl", ["_lib_ptr"], {
 get$loadEnd: function() {
  return this._lib_get$1('loadend');
 },
 get$error: function() {
  return this._lib_get$1('error');
 },
});

Isolate.$defineClass("_XMLHttpRequestUploadEventsImpl", "_EventsImpl", ["_lib_ptr"], {
 get$loadEnd: function() {
  return this._lib_get$1('loadend');
 },
 get$error: function() {
  return this._lib_get$1('error');
 },
});

Isolate.$defineClass("_FixedSizeListIterator", "_VariableSizeListIterator", ["_lib_length", "_lib_pos", "_lib_array"], {
 hasNext$0: function() {
  return $.gt(this._lib_length, this._lib_pos);
 },
});

Isolate.$defineClass("_VariableSizeListIterator", "Object", [], {
 next$0: function() {
  if (this.hasNext$0() !== true) {
    throw $.captureStackTrace($.CTC2);
  }
  var t0 = this._lib_array;
  var t1 = this._lib_pos;
  this._lib_pos = $.add(t1, 1);
  return $.index(t0, t1);
 },
 hasNext$0: function() {
  return $.gt($.get$length(this._lib_array), this._lib_pos);
 },
});

Isolate.$defineClass("Foursquare", "Object", [], {
 multi$2: function(requests, method) {
  var pathsAndQueries = [];
  for (var t0 = $.iterator(requests); t0.hasNext$0() === true; ) {
    $.add$1(pathsAndQueries, t0.next$0()._lib5_getPathAndQuery$1(true));
  }
  return $.Request$3(method, 'multi', $.makeLiteralMap(['requests', $.join(pathsAndQueries, ',')]));
 },
 multi$1: function(requests) {
  return this.multi$2(requests,'GET')
},
 get$checkins: function() {
  return $.Checkins$0();
 },
 get$venues: function() {
  return $.Venues$0();
 },
 get$users: function() {
  return $.Users$0();
 },
 set$accessToken: function(value) {
  $._accessToken = value;
  return value;
 },
 login$1: function(redirectUri) {
  var t0 = ({});
  t0.c_1 = $.CompleterImpl$0();
  var f = $.login('https://foursquare.com/oauth2/authenticate', $._clientId, redirectUri, (void 0), ' ', 600, 800);
  f.handleException$1(new $.Closure7(t0));
  f.then$1(new $.Closure8(this, t0));
  return t0.c_1.get$future();
 },
 Foursquare$1: function(clientId) {
  $._clientId = clientId;
 },
});

Isolate.$defineClass("Request", "Object", ["_lib5_params", "_lib5_path", "_lib5_method"], {
 execute$0: function() {
  var t0 = ({});
  var uri = $.Uri$fromString$1('' + $.stringToString('https://api.foursquare.com/v2') + $.stringToString(this._lib5_getPathAndQuery$0()));
  var c = $.CompleterImpl$0();
  $.setRuntimeTypeInfo(c, ({T: 'Map'}));
  t0.c_1 = c;
  var innerF = $.HttpRequest$3(this._lib5_method, uri, (void 0)).execute$0();
  innerF.handleException$1(new $.Closure20(t0));
  innerF.then$1(new $.Closure21(t0));
  return t0.c_1.get$future();
 },
 _lib5_toParamsString$1: function(p) {
  var t0 = ({});
  if ($.eqNullB(p)) {
    return '';
  }
  t0.parts_1 = [];
  $.forEach(p, new $.Closure18(t0));
  return $.add('?', $.join(t0.parts_1, '&'));
 },
 _lib5_getPathAndQuery$1: function(multi) {
  if (multi !== true) {
    if ($.eqNullB(this._lib5_params)) {
      this._lib5_params = $.makeLiteralMap([]);
    }
    $.indexSet(this._lib5_params, 'v', $._version);
    if (!$.eqNullB($._accessToken)) {
      $.indexSet(this._lib5_params, 'oauth_token', $._accessToken);
    } else {
      $.indexSet(this._lib5_params, 'client_id', $._clientId);
      $.indexSet(this._lib5_params, 'client_secret', $._clientSecret);
    }
  }
  return '/' + $.stringToString(this._lib5_path) + $.stringToString(this._lib5_toParamsString$1(this._lib5_params));
 },
 _lib5_getPathAndQuery$0: function() {
  return this._lib5_getPathAndQuery$1(false)
},
});

Isolate.$defineClass("Users", "Object", ["endpoint"], {
 checkins$6: function(userId, limit, offset, afterTimestamp, beforeTimestamp, additional) {
  var params = $._combine($.makeLiteralMap(['limit', limit, 'offset', offset, 'afterTimestamp', afterTimestamp, 'beforeTimestamp', beforeTimestamp]), additional);
  return $.Request$3('GET', '' + $.stringToString(this.endpoint) + '/' + $.stringToString(userId) + '/checkins', params);
 },
 get$checkins: function() { return new $.Closure36(this); },
 get$2: function(userId, additional) {
  return $.Request$3('GET', '' + $.stringToString(this.endpoint) + '/' + $.stringToString(userId), additional);
 },
 get$0: function() {
  return this.get$2('self',(void 0))
},
});

Isolate.$defineClass("Venues", "Object", ["endpoint"], {
 search$16: function(ll, near, llAcc, alt, altAcc, query, limit, intent, radius, sw, ne, categoryId, url, providerId, linkedId, additional) {
  var params = $._combine($.makeLiteralMap(['ll', ll, 'near', near, 'llAcc', llAcc, 'alt', alt, 'altAcc', altAcc, 'query', query, 'limit', limit, 'intent', intent, 'radius', radius, 'sw', sw, 'ne', ne, 'categoryId', categoryId, 'url', url, 'providerId', providerId, 'linkedId', linkedId]), additional);
  return $.Request$3('GET', '' + $.stringToString(this.endpoint) + '/search', params);
 },
 search$1$ll: function(ll) {
  return this.search$16(ll,(void 0),(void 0),(void 0),(void 0),(void 0),(void 0),(void 0),(void 0),(void 0),(void 0),(void 0),(void 0),(void 0),(void 0),(void 0))
},
 add$14: function(address, crossStreet, city, state, zip, phone, twitter, ll, primaryCategoryId, description, url, ignoreDuplicates, ignoreDuplicatesKey, additional) {
  var params = $._combine($.makeLiteralMap(['address', address, 'crossStreet', crossStreet, 'city', city, 'state', state, 'zip', zip, 'phone', phone, 'twitter', twitter, 'll', ll, 'primaryCategoryId', primaryCategoryId, 'description', description, 'url', url, 'ignoreDuplicates', ignoreDuplicates, 'ignoreDuplicatesKey', ignoreDuplicatesKey]), additional);
  return $.Request$3('POST', '' + $.stringToString(this.endpoint) + '/add', params);
 },
 add$1: function(address) {
  return this.add$14(address,(void 0),(void 0),(void 0),(void 0),(void 0),(void 0),(void 0),(void 0),(void 0),(void 0),(void 0),(void 0),(void 0))
},
 add$2: function(address,crossStreet) {
  return this.add$14(address,crossStreet,(void 0),(void 0),(void 0),(void 0),(void 0),(void 0),(void 0),(void 0),(void 0),(void 0),(void 0),(void 0))
},
});

Isolate.$defineClass("Checkins", "Object", ["endpoint"], {
 recent$4: function(ll, limit, afterTimestamp, additional) {
  var params = $._combine($.makeLiteralMap(['ll', ll, 'limit', limit, 'afterTimestamp', afterTimestamp]), additional);
  return $.Request$3('GET', '' + $.stringToString(this.endpoint) + '/recent', params);
 },
 recent$1$limit: function(limit) {
  return this.recent$4((void 0),limit,(void 0),(void 0))
},
});

Isolate.$defineClass("_JsonParser", "Object", ["position", "length?", "json"], {
 _lib6_error$1: function(message) {
  throw $.captureStackTrace(message);
 },
 _lib6_token$0: function() {
  for (; true; ) {
    if ($.geB(this.position, $.get$length(this))) {
      return;
    }
    var char$ = $.charCodeAt(this.json, this.position);
    var token = $.index($.tokens, char$);
    if (token === 32) {
      this.position = $.add(this.position, 1);
      continue;
    }
    if (token === (void 0)) {
      return 0;
    }
    return token;
  }
 },
 _lib6_nextChar$0: function() {
  this.position = $.add(this.position, 1);
  if ($.geB(this.position, $.get$length(this))) {
    return 0;
  }
  return $.charCodeAt(this.json, this.position);
 },
 _lib6_char$0: function() {
  if ($.geB(this.position, $.get$length(this))) {
    this._lib6_error$1('Unexpected end of JSON stream');
  }
  return $.charCodeAt(this.json, this.position);
 },
 _lib6_isToken$1: function(tokenKind) {
  return $.eq(this._lib6_token$0(), tokenKind);
 },
 _lib6_isDigit$1: function(char$) {
  return $.geB(char$, 48) && $.leB(char$, 57);
 },
 _lib6_parseNumber$0: function() {
  if (this._lib6_isToken$1(45) !== true) {
    this._lib6_error$1('Expected number literal');
  }
  var startPos = this.position;
  var char$ = this._lib6_char$0();
  var char0 = char$;
  if (char$ === 45) {
    char0 = this._lib6_nextChar$0();
  }
  if (char0 === 48) {
    var char1 = this._lib6_nextChar$0();
  } else {
    if (this._lib6_isDigit$1(char0) === true) {
      for (var char2 = this._lib6_nextChar$0(); this._lib6_isDigit$1(char2) === true; char2 = char3) {
        char3 = char2;
        char3 = this._lib6_nextChar$0();
      }
      char1 = char2;
    } else {
      this._lib6_error$1('Expected digit when parsing number');
      char1 = char0;
    }
  }
  var char4 = char1;
  var isInt = true;
  if (char1 === 46) {
    var char5 = this._lib6_nextChar$0();
    if (this._lib6_isDigit$1(char5) === true) {
      for (var char6 = this._lib6_nextChar$0(); this._lib6_isDigit$1(char6) === true; char6 = char7) {
        char7 = char6;
        char7 = this._lib6_nextChar$0();
      }
      char4 = char6;
      isInt = false;
    } else {
      this._lib6_error$1('Expected digit following comma');
      char4 = char5;
      isInt = true;
    }
  }
  var isInt0 = isInt;
  if (char4 === 101 || char4 === 69) {
    var char8 = this._lib6_nextChar$0();
    var char9 = char8;
    if (char8 === 45 || char8 === 43) {
      char9 = this._lib6_nextChar$0();
    }
    if (this._lib6_isDigit$1(char9) === true) {
      for (var char10 = this._lib6_nextChar$0(); this._lib6_isDigit$1(char10) === true; char10 = char11) {
        char11 = char10;
        char11 = this._lib6_nextChar$0();
      }
      isInt0 = false;
    } else {
      this._lib6_error$1('Expected digit following \'e\' or \'E\'');
      isInt0 = isInt;
    }
  }
  var number = $.substring$2(this.json, startPos, this.position);
  if (isInt0) {
    return $.parseInt(number);
  } else {
    return $.parseDouble(number);
  }
 },
 _lib6_parseString$0: function() {
  if (this._lib6_isToken$1(34) !== true) {
    this._lib6_error$1('Expected string literal');
  }
  this.position = $.add(this.position, 1);
  var charCodes = $.List((void 0));
  $.setRuntimeTypeInfo(charCodes, ({E: 'int'}));
  for (; true; ) {
    var c = this._lib6_char$0();
    if ($.eqB(c, 34)) {
      this.position = $.add(this.position, 1);
      break;
    }
    if ($.eqB(c, 92)) {
      this.position = $.add(this.position, 1);
      if ($.eqB(this.position, $.get$length(this))) {
        this._lib6_error$1('\\ at the end of input');
      }
      $1:{
        var t0 = this._lib6_char$0();
        if (34 === t0) {
          var c = 34;
          break $1;
        } else {
          if (92 === t0) {
            var c = 92;
            break $1;
          } else {
            if (47 === t0) {
              var c = 47;
              break $1;
            } else {
              if (98 === t0) {
                var c = 8;
                break $1;
              } else {
                if (110 === t0) {
                  var c = 10;
                  break $1;
                } else {
                  if (114 === t0) {
                    var c = 13;
                    break $1;
                  } else {
                    if (102 === t0) {
                      var c = 12;
                      break $1;
                    } else {
                      if (116 === t0) {
                        var c = 9;
                        break $1;
                      } else {
                        if (117 === t0) {
                          if ($.gtB($.add(this.position, 5), $.get$length(this))) {
                            this._lib6_error$1('Invalid unicode esacape sequence');
                          }
                          var codeString = $.substring$2(this.json, $.add(this.position, 1), $.add(this.position, 5));
                          try {
                            var c = $.parseInt('0x' + $.stringToString(codeString));
                          }catch (t1) {
                            $.unwrapException(t1);
                            this._lib6_error$1('Invalid unicode esacape sequence');
                          }
                          this.position = $.add(this.position, 4);
                          break $1;
                        } else {
                          this._lib6_error$1('Invalid esacape sequence in string literal');
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    charCodes.push(c);
    this.position = $.add(this.position, 1);
  }
  return $.String$fromCharCodes(charCodes);
 },
 _lib6_parseList$0: function() {
  var list = [];
  this.position = $.add(this.position, 1);
  if (this._lib6_isToken$1(93) !== true) {
    for (; true; ) {
      $.add$1(list, this._lib6_parseValue$0());
      if (this._lib6_isToken$1(44) !== true) {
        break;
      }
      this.position = $.add(this.position, 1);
    }
    if (this._lib6_isToken$1(93) !== true) {
      this._lib6_error$1('Expected \']\' at end of list');
    }
  }
  this.position = $.add(this.position, 1);
  return list;
 },
 _lib6_parseObject$0: function() {
  var object = $.makeLiteralMap([]);
  if (typeof object !== 'object'||object.constructor !== Array||!!object.immutable$list) return this._lib6_parseObject$0$bailout(1, object);
  this.position = $.add(this.position, 1);
  if (this._lib6_isToken$1(125) !== true) {
    for (; true; ) {
      var key = this._lib6_parseString$0();
      if (this._lib6_isToken$1(58) !== true) {
        this._lib6_error$1('Expected \':\' when parsing object');
      }
      this.position = $.add(this.position, 1);
      var t0 = this._lib6_parseValue$0();
      if (key !== (key | 0)) throw $.iae(key);
      var t1 = object.length;
      if (key < 0 || key >= t1) throw $.ioore(key);
      object[key] = t0;
      if (this._lib6_isToken$1(44) !== true) {
        break;
      }
      this.position = $.add(this.position, 1);
    }
    if (this._lib6_isToken$1(125) !== true) {
      this._lib6_error$1('Expected \'}\' at end of object');
    }
  }
  this.position = $.add(this.position, 1);
  return object;
 },
 _lib6_parseObject$0$bailout: function(state, env0) {
  switch (state) {
    case 1:
      object = env0;
      break;
  }
  switch (state) {
    case 0:
      var object = $.makeLiteralMap([]);
    case 1:
      state = 0;
      this.position = $.add(this.position, 1);
      if (this._lib6_isToken$1(125) !== true) {
        L0: while (true) {
          if (!true) break L0;
          var key = this._lib6_parseString$0();
          if (this._lib6_isToken$1(58) !== true) {
            this._lib6_error$1('Expected \':\' when parsing object');
          }
          this.position = $.add(this.position, 1);
          $.indexSet(object, key, this._lib6_parseValue$0());
          if (this._lib6_isToken$1(44) !== true) {
            break;
          }
          this.position = $.add(this.position, 1);
        }
        if (this._lib6_isToken$1(125) !== true) {
          this._lib6_error$1('Expected \'}\' at end of object');
        }
      }
      this.position = $.add(this.position, 1);
      return object;
  }
 },
 _lib6_expectKeyword$2: function(word, value) {
  for (var i = 0; $.ltB(i, $.get$length(word)); i = i + 1) {
    if (!$.eqB(this._lib6_char$0(), $.charCodeAt(word, i))) {
      this._lib6_error$1('Expected keyword \'' + $.stringToString(word) + '\'');
    }
    this.position = $.add(this.position, 1);
  }
  return value;
 },
 _lib6_parseValue$0: function() {
  var token = this._lib6_token$0();
  if (token === (void 0)) {
    this._lib6_error$1('Nothing to parse');
  }
  $0:{
    if (34 === token) {
      return this._lib6_parseString$0();
    } else {
      if (45 === token) {
        return this._lib6_parseNumber$0();
      } else {
        if (110 === token) {
          return this._lib6_expectKeyword$2('null', (void 0));
        } else {
          if (102 === token) {
            return this._lib6_expectKeyword$2('false', false);
          } else {
            if (116 === token) {
              return this._lib6_expectKeyword$2('true', true);
            } else {
              if (123 === token) {
                return this._lib6_parseObject$0();
              } else {
                if (91 === token) {
                  return this._lib6_parseList$0();
                } else {
                  this._lib6_error$1('Unexpected token');
                }
              }
            }
          }
        }
      }
    }
  }
 },
 _lib6_parseToplevel$0: function() {
  var result = this._lib6_parseValue$0();
  if (this._lib6_token$0() !== (void 0)) {
    this._lib6_error$1('Junk at the end of JSON input');
  }
  return result;
 },
 _lib6_JsonParser$_internal$1: function(json) {
  if ($.tokens !== (void 0)) {
    return;
  }
  var t0 = $.List(126);
  $.setRuntimeTypeInfo(t0, ({E: 'int'}));
  $.tokens = t0;
  $.indexSet($.tokens, 9, 32);
  $.indexSet($.tokens, 10, 32);
  $.indexSet($.tokens, 13, 32);
  $.indexSet($.tokens, 32, 32);
  $.indexSet($.tokens, 48, 45);
  $.indexSet($.tokens, 49, 45);
  $.indexSet($.tokens, 50, 45);
  $.indexSet($.tokens, 51, 45);
  $.indexSet($.tokens, 52, 45);
  $.indexSet($.tokens, 53, 45);
  $.indexSet($.tokens, 54, 45);
  $.indexSet($.tokens, 55, 45);
  $.indexSet($.tokens, 56, 45);
  $.indexSet($.tokens, 57, 45);
  $.indexSet($.tokens, 45, 45);
  $.indexSet($.tokens, 123, 123);
  $.indexSet($.tokens, 125, 125);
  $.indexSet($.tokens, 91, 91);
  $.indexSet($.tokens, 93, 93);
  $.indexSet($.tokens, 34, 34);
  $.indexSet($.tokens, 58, 58);
  $.indexSet($.tokens, 44, 44);
  $.indexSet($.tokens, 110, 110);
  $.indexSet($.tokens, 116, 116);
  $.indexSet($.tokens, 102, 102);
 },
});

Isolate.$defineClass("Uri", "Object", ["fragment", "query", "path", "port", "domain", "userInfo", "scheme"], {
 toString$0: function() {
  var sb = $.StringBufferImpl$1('');
  $._addIfNonEmpty(sb, this.scheme, this.scheme, ':');
  if (this.hasAuthority$0() === true || $.eqB(this.scheme, 'file')) {
    sb.add$1('//');
    $._addIfNonEmpty(sb, this.userInfo, this.userInfo, '@');
    if (this.domain === (void 0)) {
      var t0 = 'null';
    } else {
      t0 = this.domain;
    }
    sb.add$1(t0);
    if (!$.eqB(this.port, 0)) {
      sb.add$1(':');
      sb.add$1($.toString(this.port));
    }
  }
  if (this.path === (void 0)) {
    var t1 = 'null';
  } else {
    t1 = this.path;
  }
  sb.add$1(t1);
  $._addIfNonEmpty(sb, this.query, '?', this.query);
  $._addIfNonEmpty(sb, this.fragment, '#', this.fragment);
  return sb.toString$0();
 },
 hasAuthority$0: function() {
  var t0 = $.eqB(this.userInfo, '');
  var t1 = !t0;
  if (t0) {
    t1 = !$.eqB(this.domain, '');
  }
  return t1 || !$.eqB(this.port, 0);
 },
 query$1: function(arg0) { return this.query.$call$1(arg0); },
});

Isolate.$defineClass("HttpRequest", "Object", ["headers", "uri", "method"], {
 execute$1: function(body) {
  var t0 = ({});
  var completer = $.CompleterImpl$0();
  $.setRuntimeTypeInfo(completer, ({T: 'HttpResponse'}));
  t0.completer_3 = completer;
  t0.xhr_4 = $.XMLHttpRequest();
  t0.xhr_4.open$2(this.method, $.toString(this.uri));
  if (!$.eqNullB(this.headers)) {
    $.forEach(this.headers, new $.Closure22(t0));
  }
  $.add$1(t0.xhr_4.get$on().get$error(), new $.Closure23(t0));
  $.add$1(t0.xhr_4.get$on().get$loadEnd(), new $.Closure24(t0));
  t0.xhr_4.send$1(body);
  return t0.completer_3.get$future();
 },
 execute$0: function() {
  return this.execute$1((void 0))
},
});

Isolate.$defineClass("HttpResponse", "Object", ["headers", "body?"], {
});

Isolate.$defineClass("HttpException", "Object", ["code"], {
});

Isolate.$defineClass("AuthError", "Object", ["errorUri", "errorDescription", "error?"], {
});

Isolate.$defineClass("_TokenInfo", "Object", ["_lib4_expires?", "_lib4_accessToken?"], {
 asString$0: function() {
  return '' + $.stringToString(this._lib4_accessToken) + '=====' + $.stringToString(this._lib4_expires);
 },
 _lib4_TokenInfo$fromString$1: function(s) {
  var parts = $.split(s, '=====');
  this._lib4_accessToken = $.index(parts, 0);
  if ($.gtB($.get$length(parts), 1)) {
    var t0 = $.index(parts, 1);
  } else {
    t0 = (void 0);
  }
  this._lib4_expires = t0;
 },
});

Isolate.$defineClass("Closure", "Closure32", ["box_0"], {
 $call$1: function(_) {
  this.box_0.fsq_1.login$1($.REDIRECT_URI).then$1(new $.Closure6(this.box_0));
 },
});

Isolate.$defineClass("Closure6", "Closure32", ["box_0"], {
 $call$1: function(__) {
  this.box_0.e_2.remove$0();
  this.box_0.fsq_1.get$users().get$0().execute$0().then$1(new $.Closure15());
  $.Request$3('GET', 'updates/notifications', (void 0)).execute$0().then$1(new $.Closure16());
  this.box_0.fsq_1.multi$1([this.box_0.fsq_1.get$users().get$0(), this.box_0.fsq_1.get$venues().search$1$ll('40.7013,-73.7074'), this.box_0.fsq_1.get$checkins().recent$1$limit(3), $.Request$3('GET', 'updates/notifications', $.makeLiteralMap(['foo', 'bar']))]).execute$0().then$1(new $.Closure17());
 },
});

Isolate.$defineClass("Closure15", "Closure32", [], {
 $call$1: function(r1) {
  $.log('Hello ' + $.stringToString($.index($.index($.index(r1, 'response'), 'user'), 'firstName')));
 },
});

Isolate.$defineClass("Closure16", "Closure32", [], {
 $call$1: function(r2) {
  $.log('Notifications: ' + $.stringToString($.index($.index($.index(r2, 'response'), 'notifications'), 'count')));
 },
});

Isolate.$defineClass("Closure17", "Closure32", [], {
 $call$1: function(r3) {
  if ($.eqB($.get$length($.index($.index(r3, 'response'), 'responses')), 4)) {
    $.log('Multi request successful');
  }
 },
});

Isolate.$defineClass("Closure2", "Closure32", ["box_0"], {
 $call$2: function(k, v) {
  if (this.box_0.first_3 !== true) {
    $.add$1(this.box_0.result_1, ', ');
  }
  this.box_0.first_3 = false;
  $._emitObject(k, this.box_0.result_1, this.box_0.visiting_2);
  $.add$1(this.box_0.result_1, ': ');
  $._emitObject(v, this.box_0.result_1, this.box_0.visiting_2);
 },
});

Isolate.$defineClass("Closure3", "Closure32", ["box_0"], {
 $call$0: function() {
  return this.box_0.closure_1.$call$0();
 },
});

Isolate.$defineClass("Closure4", "Closure32", ["box_0"], {
 $call$0: function() {
  return this.box_0.closure_1.$call$1(this.box_0.arg1_2);
 },
});

Isolate.$defineClass("Closure5", "Closure32", ["box_0"], {
 $call$0: function() {
  return this.box_0.closure_1.$call$2(this.box_0.arg1_2, this.box_0.arg2_3);
 },
});

Isolate.$defineClass("Closure7", "Closure32", ["box_0"], {
 $call$1: function(e) {
  return this.box_0.c_1.completeException$1(e);
 },
});

Isolate.$defineClass("Closure8", "Closure32", ["this_2", "box_0"], {
 $call$1: function(token) {
  this.this_2.set$accessToken(token);
  this.box_0.c_1.complete$1((void 0));
 },
});

Isolate.$defineClass("Closure9", "Closure32", [], {
 $call$1: function(e) {
  $.finish(e.get$data());
 },
});

Isolate.$defineClass("Closure10", "Closure32", [], {
 $call$1: function(n) {
  var absN = $.abs(n);
  if ($.ltB(n, 0)) {
    var sign = '-';
  } else {
    sign = '';
  }
  if ($.geB(absN, 1000)) {
    return '' + $.stringToString(n);
  }
  if ($.geB(absN, 100)) {
    return '' + $.stringToString(sign) + '0' + $.stringToString(absN);
  }
  if ($.geB(absN, 10)) {
    return '' + $.stringToString(sign) + '00' + $.stringToString(absN);
  }
  if ($.geB(absN, 1)) {
    return '' + $.stringToString(sign) + '000' + $.stringToString(absN);
  }
  throw $.captureStackTrace($.IllegalArgumentException$1(n));
 },
});

Isolate.$defineClass("Closure11", "Closure32", [], {
 $call$1: function(n) {
  if ($.geB(n, 100)) {
    return '' + $.stringToString(n);
  }
  if ($.gtB(n, 10)) {
    return '0' + $.stringToString(n);
  }
  return '00' + $.stringToString(n);
 },
});

Isolate.$defineClass("Closure12", "Closure32", [], {
 $call$1: function(n) {
  if ($.geB(n, 10)) {
    return '' + $.stringToString(n);
  }
  return '0' + $.stringToString(n);
 },
});

Isolate.$defineClass("Closure13", "Closure32", ["box_0"], {
 $call$1: function(element) {
  var counter = $.add(this.box_0.counter_1, 1);
  this.box_0.counter_1 = counter;
 },
});

Isolate.$defineClass("Closure14", "Closure32", ["box_0"], {
 $call$1: function(entry) {
  this.box_0.f_1.$call$2(entry.get$key(), entry.get$value());
 },
});

Isolate.$defineClass("Closure18", "Closure32", ["box_0"], {
 $call$2: function(key, val) {
  if (!$.eqNullB(key) && !$.eqNullB(val)) {
    $.add$1(this.box_0.parts_1, '' + $.stringToString(key) + '=' + $.stringToString($.encodeURIComponent($.toString(val))));
  }
 },
});

Isolate.$defineClass("Closure19", "Closure32", ["box_0"], {
 $call$2: function(k, v) {
  var t0 = this.box_0.m_1;
  var t1 = $.toString(v);
  $.indexSet(t0, k, t1);
  return t1;
 },
});

Isolate.$defineClass("Closure20", "Closure32", ["box_0"], {
 $call$1: function(e) {
  return this.box_0.c_1.completeException$1(e);
 },
});

Isolate.$defineClass("Closure21", "Closure32", ["box_0"], {
 $call$1: function(r) {
  return this.box_0.c_1.complete$1($.parse(r.get$body()));
 },
});

Isolate.$defineClass("Closure22", "Closure32", ["box_2"], {
 $call$2: function(k, v) {
  return this.box_2.xhr_4.setRequestHeader$2(k, v);
 },
});

Isolate.$defineClass("Closure23", "Closure32", ["box_2"], {
 $call$1: function(e) {
  this.box_2.completer_3.completeException$1($.HttpException$1((void 0)));
 },
});

Isolate.$defineClass("Closure24", "Closure32", ["box_2"], {
 $call$1: function(e) {
  var t0 = ({});
  if ($.geB(this.box_2.xhr_4.get$status(), 400)) {
    this.box_2.completer_3.completeException$1($.HttpException$1(this.box_2.xhr_4.get$status()));
  } else {
    var headerParts = $.split(this.box_2.xhr_4.getAllResponseHeaders$0(), '\n');
    t0.responseHeaders_1 = $.makeLiteralMap([]);
    $.forEach(headerParts, new $.Closure25(t0));
    this.box_2.completer_3.complete$1($.HttpResponse$2(this.box_2.xhr_4.get$responseText(), t0.responseHeaders_1));
  }
 },
});

Isolate.$defineClass("Closure25", "Closure32", ["box_0"], {
 $call$1: function(hp) {
  var idx = $.indexOf$1(hp, ':');
  if ($.ltB(idx, 0)) {
    $.indexSet(this.box_0.responseHeaders_1, hp, (void 0));
  } else {
    var k = $.substring$2(hp, 0, idx);
    var v = $.substring$1(hp, $.add(idx, 2));
    $.indexSet(this.box_0.responseHeaders_1, k, v);
  }
 },
});

Isolate.$defineClass("Closure26", "Closure32", [], {
 $call$1: function(n) {
  return typeof n === 'object' && n.is$Element();
 },
});

Isolate.$defineClass("Closure27", "Closure32", ["box_0", "output_2"], {
 $call$1: function(element) {
  if (this.box_0.f_1.$call$1(element) === true) {
    $.add$1(this.output_2, element);
  }
 },
});

Isolate.$defineClass("Closure28", "Closure32", [], {
 $call$1: function(el) {
  return el.remove$0();
 },
});

Isolate.$defineClass("Closure29", "Closure32", ["box_0"], {
 $call$2: function(key, value) {
  this.box_0.f_1.$call$1(key);
 },
});

Isolate.$defineClass("Closure30", "Closure32", ["box_0"], {
 $call$2: function(key, value) {
  if (this.box_0.f_1.$call$1(key) === true) {
    $.add$1(this.box_0.result_2, key);
  }
 },
});

Isolate.$defineClass('Closure31', 'Closure32', function BoundClosure(self) { this.self = self; }, {
$call$0: function() {
  return this.self.isUtc$0();
},
});
Isolate.$defineClass('Closure33', 'Closure32', function BoundClosure(self) { this.self = self; }, {
$call$1: function(arg0) {
  return this.self.error$1(arg0);
},
});
Isolate.$defineClass('Closure34', 'Closure32', function BoundClosure(self) { this.self = self; }, {
$call$0: function() {
  return this.self.click$0();
},
});
Isolate.$defineClass('Closure35', 'Closure32', function BoundClosure(self) { this.self = self; }, {
$call$0: function() {
  return this.self.click$0();
},
});
Isolate.$defineClass('Closure36', 'Closure32', function BoundClosure(self) { this.self = self; }, {
$call$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
  return this.self.checkins$6(arg0, arg1, arg2, arg3, arg4, arg5);
},
$call$0: function() {
  return this.$call$6('self',(void 0),(void 0),(void 0),(void 0),(void 0))
},
$call$1: function(userId) {
  return this.$call$6(userId,(void 0),(void 0),(void 0),(void 0),(void 0))
},
$call$2: function(userId,limit) {
  return this.$call$6(userId,limit,(void 0),(void 0),(void 0),(void 0))
},
$call$3: function(userId,limit,offset) {
  return this.$call$6(userId,limit,offset,(void 0),(void 0),(void 0))
},
});
$._lib_ChildNodeListLazy$1 = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$._lib_AudioContextEventsImpl$1 = function(_ptr) {
  return new $._AudioContextEventsImpl(_ptr);
};

$.floor = function(receiver) {
  if (!(typeof receiver === 'number')) {
    return receiver.floor$0();
  }
  return Math.floor(receiver);
};

$.eqB = function(a, b) {
  return $.eq(a, b) === true;
};

$._containsRef = function(c, ref) {
  for (var t0 = $.iterator(c); t0.hasNext$0() === true; ) {
    if (t0.next$0() === ref) {
      return true;
    }
  }
  return false;
};

$._lib_NodeListWrapper$1 = function(list) {
  return new $._NodeListWrapper(list);
};

$.isJsArray = function(value) {
  return value !== (void 0) && (value.constructor === Array);
};

$._nextProbe = function(currentProbe, numberOfProbes, length$) {
  return $.and($.add(currentProbe, numberOfProbes), $.sub(length$, 1));
};

$._parseIntOrZero = function(val) {
  if (val !== (void 0) && !$.eqB(val, '')) {
    return $.parseInt(val);
  } else {
    return 0;
  }
};

$.Users$0 = function() {
  return new $.Users('users');
};

$.allMatches = function(receiver, str) {
  if (!(typeof receiver === 'string')) {
    return receiver.allMatches$1(str);
  }
  $.checkString(str);
  return $.allMatchesInStringUnchecked(receiver, str);
};

$.substringUnchecked = function(receiver, startIndex, endIndex) {
  return receiver.substring(startIndex, endIndex);
};

$.DateImplementation$now$0 = function() {
  var t0 = new $.DateImplementation($.TimeZoneImplementation$local$0(), $.dateNow());
  t0.DateImplementation$now$0();
  return t0;
};

$.get$length = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver) === true) {
    return receiver.length;
  } else {
    return receiver.get$length();
  }
};

$.HttpException$1 = function(code) {
  return new $.HttpException(code);
};

$.IllegalJSRegExpException$2 = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_errmsg, _pattern);
};

$.HttpResponse$2 = function(body, headers) {
  return new $.HttpResponse(headers, body);
};

$.FutureImpl$immediate = function(value) {
  var res = $.FutureImpl$0();
  res._lib3_setValue$1(value);
  return res;
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if ($.eqB(name$, 'Window')) {
    return 'DOMWindow';
  }
  if ($.eqB(name$, 'Document')) {
    if (!!obj.xmlVersion) {
      return 'Document';
    }
    return 'HTMLDocument';
  }
  if ($.eqB(name$, 'HTMLTableDataCellElement')) {
    return 'HTMLTableCellElement';
  }
  if ($.eqB(name$, 'HTMLTableHeaderCellElement')) {
    return 'HTMLTableCellElement';
  }
  if ($.eqB(name$, 'MSStyleCSSProperties')) {
    return 'CSSStyleDeclaration';
  }
  if ($.eqB(name$, 'CanvasPixelArray')) {
    return 'Uint8ClampedArray';
  }
  if ($.eqB(name$, 'HTMLPhraseElement')) {
    return 'HTMLElement';
  }
  return name$;
};

$.regExpMatchStart = function(m) {
  return m.index;
};

$.constructorNameFallback = function(obj) {
  var constructor$ = (obj.constructor);
  if ((typeof(constructor$)) === 'function') {
    var name$ = (constructor$.name);
    if ((typeof(name$)) === 'string' && $.isEmpty(name$) !== true && name$ !== 'Object') {
      return name$;
    }
  }
  var string = (Object.prototype.toString.call(obj));
  return $.substring$2(string, 8, string.length - 1);
};

$.clear = function(receiver) {
  if ($.isJsArray(receiver) !== true) {
    return receiver.clear$0();
  }
  $.set$length(receiver, 0);
};

$.NullPointerException$2 = function(functionName, arguments$) {
  return new $.NullPointerException(arguments$, functionName);
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    return $.truncate($.div(a, b));
  }
  return a.operator$tdiv$1(b);
};

$.JSSyntaxRegExp$_globalVersionOf$1 = function(other) {
  var t0 = other.get$pattern();
  var t1 = other.get$multiLine();
  var t2 = new $.JSSyntaxRegExp(other.get$ignoreCase(), t1, t0);
  t2.JSSyntaxRegExp$_globalVersionOf$1(other);
  return t2;
};

$.JSSyntaxRegExp$3 = function(pattern, multiLine, ignoreCase) {
  return new $.JSSyntaxRegExp(ignoreCase, multiLine, pattern);
};

$.typeNameInChrome = function(obj) {
  var name$ = (obj.constructor.name);
  if (name$ === 'Window') {
    return 'DOMWindow';
  }
  if (name$ === 'CanvasPixelArray') {
    return 'Uint8ClampedArray';
  }
  return name$;
};

$.shr = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    if ($.ltB(b, 0)) {
      throw $.captureStackTrace($.IllegalArgumentException$1(b));
    }
    return a >>> b;
  }
  return a.operator$shr$1(b);
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  if (typeof receiver !== 'string') return $.stringReplaceAllUnchecked$bailout(receiver, from, to,  0);
  if (typeof from === 'string') {
    if (from === '') {
      if (receiver === '') {
        return to;
      } else {
        var result = $.StringBufferImpl$1('');
        var length$ = receiver.length;
        result.add$1(to);
        for (var i = 0; i < length$; i = i + 1) {
          var t0 = receiver.length;
          if (i < 0 || i >= t0) throw $.ioore(i);
          result.add$1(receiver[i]);
          result.add$1(to);
        }
        return result.toString$0();
      }
    } else {
      return receiver.replace($.regExpMakeNative($.JSSyntaxRegExp$3((from.replace($.regExpMakeNative($.CTC4, true), "\\$&")), false, false), true), to);
    }
  } else {
    if (typeof from === 'object' && !!from.is$JSSyntaxRegExp) {
      return receiver.replace($.regExpMakeNative(from, true), to);
    } else {
      $.checkNull(from);
      throw $.captureStackTrace('StringImplementation.replaceAll(Pattern) UNIMPLEMENTED');
    }
  }
};

$.eqNull = function(a) {
  if (typeof a === "object") {
    if (!!a.operator$eq$1) {
      return a.operator$eq$1((void 0));
    } else {
      return false;
    }
  } else {
    return typeof a === "undefined";
  }
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    return (a & b) >>> 0;
  }
  return a.operator$and$1(b);
};

$.substring$2 = function(receiver, startIndex, endIndex) {
  if (!(typeof receiver === 'string')) {
    return receiver.substring$2(startIndex, endIndex);
  }
  $.checkNum(startIndex);
  var length$ = receiver.length;
  var endIndex0 = endIndex;
  if (endIndex === (void 0)) {
    endIndex0 = length$;
  }
  $.checkNum(endIndex0);
  if ($.ltB(startIndex, 0)) {
    throw $.captureStackTrace($.IndexOutOfRangeException$1(startIndex));
  }
  if ($.gtB(startIndex, endIndex0)) {
    throw $.captureStackTrace($.IndexOutOfRangeException$1(startIndex));
  }
  if ($.gtB(endIndex0, length$)) {
    throw $.captureStackTrace($.IndexOutOfRangeException$1(endIndex0));
  }
  return $.substringUnchecked(receiver, startIndex, endIndex0);
};

$.indexSet = function(a, index, value) {
  if ($.isJsArray(a) === true) {
    if (!((typeof index === 'number') && (index === (index | 0)))) {
      throw $.captureStackTrace($.IllegalArgumentException$1(index));
    }
    if (index < 0 || $.geB(index, $.get$length(a))) {
      throw $.captureStackTrace($.IndexOutOfRangeException$1(index));
    }
    $.checkMutable(a, 'indexed set');
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$._lib_DOMApplicationCacheEventsImpl$1 = function(_ptr) {
  return new $._DOMApplicationCacheEventsImpl(_ptr);
};

$.ExceptionImplementation$1 = function(msg) {
  return new $.ExceptionImplementation(msg);
};

$.StringMatch$3 = function(_start, str, pattern) {
  return new $.StringMatch(pattern, str, _start);
};

$.Venues$0 = function() {
  return new $.Venues('venues');
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  var t0 = ({});
  t0.arg2_3 = arg2;
  t0.arg1_2 = arg1;
  t0.closure_1 = closure;
  if ($.eqB(numberOfArguments, 0)) {
    return new $.Closure3(t0).$call$0();
  } else {
    if ($.eqB(numberOfArguments, 1)) {
      return new $.Closure4(t0).$call$0();
    } else {
      if ($.eqB(numberOfArguments, 2)) {
        return new $.Closure5(t0).$call$0();
      } else {
        throw $.captureStackTrace($.ExceptionImplementation$1('Unsupported number of arguments for wrapped closure'));
      }
    }
  }
};

$.last = function(receiver) {
  if ($.isJsArray(receiver) !== true) {
    return receiver.last$0();
  }
  return $.index(receiver, $.sub($.get$length(receiver), 1));
};

$.gt = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    return a > b;
  }
  return a.operator$gt$1(b);
};

$.String$fromCharCodes = function(charCodes) {
  return $.createFromCharCodes(charCodes);
};

$.assert = function(condition) {
};

$.filter = function(receiver, predicate) {
  if ($.isJsArray(receiver) !== true) {
    return receiver.filter$1(predicate);
  } else {
    return $.filter2(receiver, [], predicate);
  }
};

$.filter2 = function(source, destination, f) {
  for (var t0 = $.iterator(source); t0.hasNext$0() === true; ) {
    var t1 = t0.next$0();
    if (f.$call$1(t1) === true) {
      $.add$1(destination, t1);
    }
  }
  return destination;
};

$.filter3 = function(source, destination, f) {
  for (var t0 = $.iterator(source); t0.hasNext$0() === true; ) {
    var t1 = t0.next$0();
    if (f.$call$1(t1) === true) {
      $.add$1(destination, t1);
    }
  }
  return destination;
};

$.buildDynamicMetadata = function(inputTable) {
  if (typeof inputTable !== 'string' && (typeof inputTable !== 'object'||inputTable.constructor !== Array)) return $.buildDynamicMetadata$bailout(inputTable,  0);
  var result = [];
  for (var i = 0; i < inputTable.length; i = i + 1) {
    var t0 = inputTable.length;
    if (i < 0 || i >= t0) throw $.ioore(i);
    var tag = $.index(inputTable[i], 0);
    var t1 = inputTable.length;
    if (i < 0 || i >= t1) throw $.ioore(i);
    var tags = $.index(inputTable[i], 1);
    var set = $.HashSetImplementation$0();
    $.setRuntimeTypeInfo(set, ({E: 'String'}));
    var tagNames = $.split(tags, '|');
    if (typeof tagNames !== 'string' && (typeof tagNames !== 'object'||tagNames.constructor !== Array)) return $.buildDynamicMetadata$bailout(inputTable, 2, inputTable, result, tag, i, tags, set, tagNames);
    for (var j = 0; j < tagNames.length; j = j + 1) {
      var t2 = tagNames.length;
      if (j < 0 || j >= t2) throw $.ioore(j);
      set.add$1(tagNames[j]);
    }
    $.add$1(result, $.MetaInfo$3(tag, tags, set));
  }
  return result;
};

$.contains$1 = function(receiver, other) {
  if (!(typeof receiver === 'string')) {
    return receiver.contains$1(other);
  }
  return $.contains$2(receiver, other, 0);
};

$._lib_EventSourceEventsImpl$1 = function(_ptr) {
  return new $._EventSourceEventsImpl(_ptr);
};

$.mul = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    return a * b;
  }
  return a.operator$mul$1(b);
};

$.parseInt = function(str) {
  return $.parseInt2(str);
};

$._lib_NotificationEventsImpl$1 = function(_ptr) {
  return new $._NotificationEventsImpl(_ptr);
};

$.parseInt2 = function(str) {
  $.checkString(str);
  if (!(/^\s*[+-]?(?:0[xX][abcdefABCDEF0-9]+|\d+)\s*$/.test(str))) {
    throw $.captureStackTrace($.BadNumberFormatException$1(str));
  }
  var trimmed = $.trim(str);
  var base = 10;
  if ($.gtB($.get$length(trimmed), 2) && ($.eqB($.index(trimmed, 1), 'x') || $.eqB($.index(trimmed, 1), 'X')) || $.gtB($.get$length(trimmed), 3) && ($.eqB($.index(trimmed, 2), 'x') || $.eqB($.index(trimmed, 2), 'X'))) {
    base = 16;
  }
  var ret = (parseInt(trimmed, base));
  if ($.isNaN(ret) === true) {
    throw $.captureStackTrace($.BadNumberFormatException$1(str));
  }
  return ret;
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix === (void 0)) {
    if ($.isFirefox() === true) {
      $._cachedBrowserPrefix = '-moz-';
    } else {
      $._cachedBrowserPrefix = '-webkit-';
    }
  }
  return $._cachedBrowserPrefix;
};

$._addIfNonEmpty = function(sb, test, first, second) {
  if ('' !== test) {
    if (first === (void 0)) {
      var t0 = 'null';
    } else {
      t0 = first;
    }
    $.add$1(sb, t0);
    if (second === (void 0)) {
      var t1 = 'null';
    } else {
      t1 = second;
    }
    $.add$1(sb, t1);
  }
};

$._emitCollection = function(c, result, visiting) {
  $.add$1(visiting, c);
  var isList = typeof c === 'object' && (c.constructor === Array || c.is$List2());
  if (isList) {
    var t0 = '[';
  } else {
    t0 = '{';
  }
  $.add$1(result, t0);
  for (var t1 = $.iterator(c), first = true; t1.hasNext$0() === true; first = first0) {
    first0 = first;
    var t2 = t1.next$0();
    if (!first) {
      $.add$1(result, ', ');
    }
    $._emitObject(t2, result, visiting);
    first0 = false;
  }
  if (isList) {
    var t3 = ']';
  } else {
    t3 = '}';
  }
  $.add$1(result, t3);
  $.removeLast(visiting);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list)) {
    throw $.captureStackTrace($.UnsupportedOperationException$1(reason));
  }
};

$.toStringWrapper = function() {
  return $.toString((this.dartException));
};

$._lib_PeerConnection00EventsImpl$1 = function(_ptr) {
  return new $._PeerConnection00EventsImpl(_ptr);
};

$._lib_ElementList$1 = function(list) {
  return new $._ElementList(list);
};

$._lib_WorkerContextEventsImpl$1 = function(_ptr) {
  return new $._WorkerContextEventsImpl(_ptr);
};

$.or = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    return (a | b) >>> 0;
  }
  return a.operator$or$1(b);
};

$._lib_DocumentEventsImpl$1 = function(_ptr) {
  return new $._DocumentEventsImpl(_ptr);
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.getDay = function(receiver) {
  if (receiver.get$timeZone().get$isUtc() === true) {
    var t0 = ($.lazyAsJsDate(receiver).getUTCDate());
  } else {
    t0 = ($.lazyAsJsDate(receiver).getDate());
  }
  return t0;
};

$._lib_EventsImpl$1 = function(_ptr) {
  return new $._EventsImpl(_ptr);
};

$.HashSetImplementation$0 = function() {
  var t0 = new $.HashSetImplementation((void 0));
  t0.HashSetImplementation$0();
  return t0;
};

$.DateImplementation$fromEpoch$2 = function(value, timeZone) {
  return new $.DateImplementation(timeZone, value);
};

$._lib_IDBRequestEventsImpl$1 = function(_ptr) {
  return new $._IDBRequestEventsImpl(_ptr);
};

$.stringSplitUnchecked = function(receiver, pattern) {
  if (typeof pattern === 'string') {
    return receiver.split(pattern);
  } else {
    if (typeof pattern === 'object' && !!pattern.is$JSSyntaxRegExp) {
      return receiver.split($.regExpGetNative(pattern));
    } else {
      throw $.captureStackTrace('StringImplementation.split(Pattern) UNIMPLEMENTED');
    }
  }
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length)) {
    throw $.captureStackTrace($.UnsupportedOperationException$1(reason));
  }
};

$._lib_SpeechRecognitionEventsImpl$1 = function(_ptr) {
  return new $._SpeechRecognitionEventsImpl(_ptr);
};

$._lib_SVGElementInstanceEventsImpl$1 = function(_ptr) {
  return new $._SVGElementInstanceEventsImpl(_ptr);
};

$._lib6_JsonParser$_internal$1 = function(json) {
  var t0 = new $._JsonParser(0, $.get$length(json), json);
  t0._lib6_JsonParser$_internal$1(json);
  return t0;
};

$.add$1 = function(receiver, value) {
  if ($.isJsArray(receiver) === true) {
    $.checkGrowable(receiver, 'add');
    receiver.push(value);
    return;
  }
  return receiver.add$1(value);
};

$.DoubleLinkedQueueEntry$1 = function(e) {
  var t0 = new $.DoubleLinkedQueueEntry((void 0), (void 0), (void 0));
  t0.DoubleLinkedQueueEntry$1(e);
  return t0;
};

$.regExpExec = function(regExp, str) {
  var result = ($.regExpGetNative(regExp).exec(str));
  if (result === null) {
    return;
  }
  return result;
};

$.geB = function(a, b) {
  return $.ge(a, b) === true;
};

$.getMinutes = function(receiver) {
  if (receiver.get$timeZone().get$isUtc() === true) {
    var t0 = ($.lazyAsJsDate(receiver).getUTCMinutes());
  } else {
    t0 = ($.lazyAsJsDate(receiver).getMinutes());
  }
  return t0;
};

$.Request$3 = function(method, path, params) {
  return new $.Request(params, path, method);
};

$.getMonth = function(receiver) {
  if (receiver.get$timeZone().get$isUtc() === true) {
    var t0 = ($.lazyAsJsDate(receiver).getUTCMonth()) + 1;
  } else {
    t0 = ($.lazyAsJsDate(receiver).getMonth()) + 1;
  }
  return t0;
};

$.finish = function(hash) {
  if (!$.eqNullB($._authWindow) && $._authWindow.get$closed() !== true) {
    $._authWindow.close$0();
    $._authWindow = (void 0);
  }
  var values = $.makeLiteralMap([]);
  if (typeof values !== 'object'||values.constructor !== Array||!!values.immutable$list) return $.finish$bailout(hash, 1, values);
  for (var idx = 1; $.ltB(idx, $.sub($.get$length(hash), 1)); idx = idx0) {
    idx0 = idx;
    var nextEq = $.indexOf$2(hash, '=', idx);
    if ($.ltB(nextEq, 0)) {
      break;
    }
    var key = $.substring$2(hash, idx, nextEq);
    var nextAmp = $.indexOf$2(hash, '&', nextEq);
    if ($.ltB(nextAmp, 0)) {
      var nextAmp0 = $.get$length(hash);
    } else {
      nextAmp0 = nextAmp;
    }
    var val = $.substring$2(hash, $.add(nextEq, 1), nextAmp0);
    var idx1 = $.add(nextAmp0, 1);
    if (key !== (key | 0)) throw $.iae(key);
    var t0 = values.length;
    if (key < 0 || key >= t0) throw $.ioore(key);
    values[key] = val;
    idx0 = idx1;
  }
  throw $.iae('error');
  var t1 = values.length;
  if ('error' < 0 || 'error' >= t1) throw $.ioore('error');
  if (!$.eqNullB(values['error']) && !$.eqNullB($._lastCompleter)) {
    var t2 = $._lastCompleter;
    var t3 = values.length;
    if ('error' < 0 || 'error' >= t3) throw $.ioore('error');
    var t4 = values['error'];
    throw $.iae('error_description');
    var t5 = values.length;
    if ('error_description' < 0 || 'error_description' >= t5) throw $.ioore('error_description');
    var t6 = values['error_description'];
    throw $.iae('error_uri');
    var t7 = values.length;
    if ('error_uri' < 0 || 'error_uri' >= t7) throw $.ioore('error_uri');
    t2.completeException$1($.AuthError$3(t4, t6, values['error_uri']));
  } else {
    var info = $._lib4_TokenInfo$0();
    throw $.iae('access_token');
    var t8 = values.length;
    if ('access_token' < 0 || 'access_token' >= t8) throw $.ioore('access_token');
    info._lib4_accessToken = values['access_token'];
    throw $.iae('expires');
    var t9 = values.length;
    if ('expires' < 0 || 'expires' >= t9) throw $.ioore('expires');
    info._lib4_expires = values['expires'];
    $.window().get$localStorage().$dom_setItem$2($._lastReqKey, info.asString$0());
    var t10 = $._lastCompleter;
    var t11 = values.length;
    if ('access_token' < 0 || 'access_token' >= t11) throw $.ioore('access_token');
    t10.complete$1(values['access_token']);
  }
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  if (typeof other === 'string') {
    return $.indexOf$2(receiver, other, startIndex) !== -1;
  } else {
    if (typeof other === 'object' && !!other.is$JSSyntaxRegExp) {
      return other.hasMatch$1($.substring$1(receiver, startIndex));
    } else {
      return $.iterator($.allMatches(other, $.substring$1(receiver, startIndex))).hasNext$0();
    }
  }
};

$.ObjectNotClosureException$0 = function() {
  return new $.ObjectNotClosureException();
};

$.window = function() {
  return window;;
};

$.add = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    return a + b;
  } else {
    if (typeof a === 'string') {
      var b0 = $.toString(b);
      if (typeof b0 === 'string') {
        return a + b0;
      }
      $.checkNull(b0);
      throw $.captureStackTrace($.IllegalArgumentException$1(b0));
    }
  }
  return a.operator$add$1(b);
};

$.abs = function(receiver) {
  if (!(typeof receiver === 'number')) {
    return receiver.abs$0();
  }
  return Math.abs(receiver);
};

$._emptyIfNull = function(val) {
  if (!$.eqNullB(val)) {
    var t0 = val;
  } else {
    t0 = '';
  }
  return t0;
};

$.regExpAttachGlobalNative = function(regExp) {
  regExp._re = $.regExpMakeNative(regExp, true);
};

$.leB = function(a, b) {
  return $.le(a, b) === true;
};

$.AuthError$3 = function(error, errorDescription, errorUri) {
  return new $.AuthError(errorUri, errorDescription, error);
};

$._expiringSoon = function(info) {
  if ($.eqNullB(info.get$_lib4_expires()) || $.eqB(info.get$_lib4_expires(), 'null')) {
    return false;
  } else {
    $.window().get$console().log$1(info.get$_lib4_expires());
    $.window().get$console().log$1($.eq(info.get$_lib4_expires(), 'null'));
    if ($.eqNullB(info.get$_lib4_expires())) {
      var t0 = '0';
    } else {
      t0 = info.get$_lib4_expires();
    }
    return $.lt($.parseInt(t0), $.add($.DateImplementation$now$0().get$milliseconds(), 600000));
  }
};

$.regExpMakeNative = function(regExp, global) {
  var pattern = regExp.get$pattern();
  var multiLine = regExp.get$multiLine();
  var ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  var sb = $.StringBufferImpl$1('');
  if (multiLine === true) {
    $.add$1(sb, 'm');
  }
  if (ignoreCase === true) {
    $.add$1(sb, 'i');
  }
  if (global === true) {
    $.add$1(sb, 'g');
  }
  try {
    return new RegExp(pattern, $.toString(sb));
  }catch (t0) {
    var t1 = $.unwrapException(t0);
    var e = t1;
    throw $.captureStackTrace($.IllegalJSRegExpException$2(pattern, (String(e))));
  }
};

$.BadNumberFormatException$1 = function(_s) {
  return new $.BadNumberFormatException(_s);
};

$._lib_FrozenElementListIterator$1 = function(_list) {
  return new $._FrozenElementListIterator(0, _list);
};

$.mapToString = function(m) {
  var result = $.StringBufferImpl$1('');
  $._emitMap(m, result, $.List((void 0)));
  return result.toString$0();
};

$.lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0)) {
    receiver.date = new Date(receiver.get$value());
  }
  return receiver.date;
};

$._lib_XMLHttpRequestEventsImpl$1 = function(_ptr) {
  return new $._XMLHttpRequestEventsImpl(_ptr);
};

$._lib_JavaScriptAudioNodeEventsImpl$1 = function(_ptr) {
  return new $._JavaScriptAudioNodeEventsImpl(_ptr);
};

$._emitObject = function(o, result, visiting) {
  if (typeof o === 'object' && (o.constructor === Array || o.is$Collection())) {
    if ($._containsRef(visiting, o) === true) {
      if (typeof o === 'object' && (o.constructor === Array || o.is$List2())) {
        var t0 = '[...]';
      } else {
        t0 = '{...}';
      }
      $.add$1(result, t0);
    } else {
      $._emitCollection(o, result, visiting);
    }
  } else {
    if (typeof o === 'object' && o.is$Map()) {
      if ($._containsRef(visiting, o) === true) {
        $.add$1(result, '{...}');
      } else {
        $._emitMap(o, result, visiting);
      }
    } else {
      if ($.eqNullB(o)) {
        var t1 = 'null';
      } else {
        t1 = o;
      }
      $.add$1(result, t1);
    }
  }
};

$._emitMap = function(m, result, visiting) {
  var t0 = ({});
  t0.visiting_2 = visiting;
  t0.result_1 = result;
  $.add$1(t0.visiting_2, m);
  $.add$1(t0.result_1, '{');
  t0.first_3 = true;
  $.forEach(m, new $.Closure2(t0));
  $.add$1(t0.result_1, '}');
  $.removeLast(t0.visiting_2);
};

$.iterator = function(receiver) {
  if ($.isJsArray(receiver) === true) {
    return $.ListIterator$1(receiver);
  }
  return receiver.iterator$0();
};

$._lib_IDBDatabaseEventsImpl$1 = function(_ptr) {
  return new $._IDBDatabaseEventsImpl(_ptr);
};

$.isFirefox = function() {
  return $.contains$2($.userAgent(), 'Firefox', 0);
};

$.ge = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    return a >= b;
  }
  return a.operator$ge$1(b);
};

$._lib_TextTrackCueEventsImpl$1 = function(_ptr) {
  return new $._TextTrackCueEventsImpl(_ptr);
};

$.isEmpty = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver) === true) {
    return receiver.length === 0;
  }
  return receiver.isEmpty$0();
};

$.MatchImplementation$5 = function(pattern, str, _start, _end, _groups) {
  return new $.MatchImplementation(_groups, _end, _start, str, pattern);
};

$.UnsupportedOperationException$1 = function(_message) {
  return new $.UnsupportedOperationException(_message);
};

$.indexOf$2 = function(receiver, element, start) {
  if ($.isJsArray(receiver) === true) {
    if (!((typeof start === 'number') && (start === (start | 0)))) {
      throw $.captureStackTrace($.IllegalArgumentException$1(start));
    }
    return $.indexOf(receiver, element, start, (receiver.length));
  } else {
    if (typeof receiver === 'string') {
      $.checkNull(element);
      if (!((typeof start === 'number') && (start === (start | 0)))) {
        throw $.captureStackTrace($.IllegalArgumentException$1(start));
      }
      if (!(typeof element === 'string')) {
        throw $.captureStackTrace($.IllegalArgumentException$1(element));
      }
      if (start < 0) {
        return -1;
      }
      return receiver.indexOf(element, start);
    }
  }
  return receiver.indexOf$2(element, start);
};

$._lib_DedicatedWorkerContextEventsImpl$1 = function(_ptr) {
  return new $._DedicatedWorkerContextEventsImpl(_ptr);
};

$._lib_FileReaderEventsImpl$1 = function(_ptr) {
  return new $._FileReaderEventsImpl(_ptr);
};

$.encodeURI = function(text) {
  if (typeof text !== 'string' && (typeof text !== 'object'||text.constructor !== Array)) return $.encodeURI$bailout(text,  0);
  var encodedText = $.StringBufferImpl$1('');
  for (var i = 0; i < text.length; i = i0 + 1) {
    i0 = i;
    var t0 = text.length;
    if (i < 0 || i >= t0) throw $.ioore(i);
    if (!$.eqB('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.!~*\'()#;,/?:@&=+$'.indexOf(text[i]), -1)) {
      var t1 = text.length;
      if (i < 0 || i >= t1) throw $.ioore(i);
      encodedText.add$1(text[i]);
      i0 = i;
      continue;
    }
    var charCode = $.charCodeAt(text, i);
    var byteList = [];
    if ($.ltB(charCode, 128)) {
      $.add$1(byteList, charCode);
      i0 = i;
    } else {
      if ($.ltB(charCode, 2048)) {
        $.add$1(byteList, $.or($.shr(charCode, 6), 192));
        $.add$1(byteList, $.or($.and(charCode, 63), 128));
        i0 = i;
      } else {
        if ($.leB(55296, charCode) && $.ltB(charCode, 56320)) {
          var t2 = i + 1;
          if (text.length === t2) {
            var nextCharCode = 0;
          } else {
            nextCharCode = $.charCodeAt(text, t2);
          }
          if ($.leB(56320, nextCharCode) && $.ltB(nextCharCode, 57344)) {
            var charCode0 = $.add(charCode, 64);
            $.add$1(byteList, $.or($.and($.shr(charCode0, 8), 7), 240));
            $.add$1(byteList, $.or($.and($.shr(charCode0, 2), 63), 128));
            $.add$1(byteList, $.or($.or($.shl($.and(charCode0, 3), 4), $.and($.shr(nextCharCode, 6), 15)), 128));
            $.add$1(byteList, $.or($.and(nextCharCode, 63), 128));
          } else {
            throw $.captureStackTrace($.IllegalArgumentException$1('URI malformed: Orphaned low surrogate.'));
          }
          i0 = t2;
        } else {
          if ($.leB(56320, charCode) && $.ltB(charCode, 57344)) {
            throw $.captureStackTrace($.IllegalArgumentException$1('URI malformed: Orphaned high surrogate.'));
          } else {
            if ($.ltB(charCode, 65536)) {
              $.add$1(byteList, $.or($.shr(charCode, 12), 224));
              $.add$1(byteList, $.or($.and($.shr(charCode, 6), 63), 128));
              $.add$1(byteList, $.or($.and(charCode, 63), 128));
            }
          }
          i0 = i;
        }
      }
    }
    for (var j = 0; j < byteList.length; j = j + 1) {
      var t3 = encodedText.add$1('%');
      var t4 = byteList.length;
      if (j < 0 || j >= t4) throw $.ioore(j);
      var t5 = $.shr(byteList[j], 4);
      if (t5 !== (t5 | 0)) throw $.iae(t5);
      if (t5 < 0 || t5 >= 16) throw $.ioore(t5);
      var t6 = $.add$1(t3, '0123456789ABCDEF'[t5]);
      var t7 = byteList.length;
      if (j < 0 || j >= t7) throw $.ioore(j);
      var t8 = $.and(byteList[j], 15);
      if (t8 !== (t8 | 0)) throw $.iae(t8);
      if (t8 < 0 || t8 >= 16) throw $.ioore(t8);
      $.add$1(t6, '0123456789ABCDEF'[t8]);
    }
  }
  return encodedText.toString$0();
};

$.replaceAll = function(receiver, from, to) {
  if (!(typeof receiver === 'string')) {
    return receiver.replaceAll$2(from, to);
  }
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
};

$.NoMoreElementsException$0 = function() {
  return new $.NoMoreElementsException();
};

$.getYear = function(receiver) {
  if (receiver.get$timeZone().get$isUtc() === true) {
    var t0 = ($.lazyAsJsDate(receiver).getUTCFullYear());
  } else {
    t0 = ($.lazyAsJsDate(receiver).getFullYear());
  }
  return t0;
};

$.eqNullB = function(a) {
  return $.eqNull(a) === true;
};

$._lib_FrameSetElementEventsImpl$1 = function(_ptr) {
  return new $._FrameSetElementEventsImpl(_ptr);
};

$.Uri$fromString$1 = function(uri) {
  var t0 = $.CTC7.firstMatch$1(uri);
  var t1 = $._emptyIfNull($.index(t0, 1));
  var t2 = $._emptyIfNull($.index(t0, 2));
  var t3 = $._emptyIfNull($.index(t0, 3));
  var t4 = $._parseIntOrZero($.index(t0, 4));
  var t5 = $._emptyIfNull($.index(t0, 5));
  var t6 = $._emptyIfNull($.index(t0, 6));
  return new $.Uri($._emptyIfNull($.index(t0, 7)), t6, t5, t4, t3, t2, t1);
};

$.List$from = function(other) {
  var result = $.List((void 0));
  $.setRuntimeTypeInfo(result, ({E: 'E'}));
  var iterator = $.iterator(other);
  for (; iterator.hasNext$0() === true; ) {
    result.push(iterator.next$0());
  }
  return result;
};

$.newList = function(length$) {
  if (length$ === (void 0)) {
    return new Array();
  }
  var t0 = typeof length$ === 'number' && length$ === (length$ | 0);
  var t1 = !t0;
  if (t0) {
    t1 = length$ < 0;
  }
  if (t1) {
    throw $.captureStackTrace($.IllegalArgumentException$1(length$));
  }
  var result = (new Array(length$));
  result.fixed$length = true;
  return result;
};

$.main = function() {
  var t0 = ({});
  t0.fsq_1 = $.Foursquare$1($.CLIENT_ID);
  t0.e_2 = $.document().query$1('#click');
  $.add$1(t0.e_2.get$on().get$click(), new $.Closure(t0));
};

$._lib_AbstractWorkerEventsImpl$1 = function(_ptr) {
  return new $._AbstractWorkerEventsImpl(_ptr);
};

$.dateNow = function() {
  return Date.now();
};

$._computeLoadLimit = function(capacity) {
  return $.tdiv($.mul(capacity, 3), 4);
};

$.HashSetIterator$1 = function(set_) {
  var t0 = new $.HashSetIterator(-1, set_.get$_lib3_backingMap().get$_lib3_keys());
  t0.HashSetIterator$1(set_);
  return t0;
};

$.IllegalArgumentException$1 = function(arg) {
  return new $.IllegalArgumentException(arg);
};

$._lib_MediaElementEventsImpl$1 = function(_ptr) {
  return new $._MediaElementEventsImpl(_ptr);
};

$._lib_IDBTransactionEventsImpl$1 = function(_ptr) {
  return new $._IDBTransactionEventsImpl(_ptr);
};

$._lib_BodyElementEventsImpl$1 = function(_ptr) {
  return new $._BodyElementEventsImpl(_ptr);
};

$._lib3_AllMatchesIterator$2 = function(re, _str) {
  return new $._AllMatchesIterator(false, (void 0), _str, $.JSSyntaxRegExp$_globalVersionOf$1(re));
};

$.FutureImpl$0 = function() {
  var t0 = [];
  return new $.FutureImpl([], t0, false, (void 0), (void 0), false);
};

$.iae = function(argument) {
  throw $.captureStackTrace($.IllegalArgumentException$1(argument));
};

$.truncate = function(receiver) {
  if (!(typeof receiver === 'number')) {
    return receiver.truncate$0();
  }
  if (receiver < 0) {
    var t0 = $.ceil(receiver);
  } else {
    t0 = $.floor(receiver);
  }
  return t0;
};

$.addLast = function(receiver, value) {
  if ($.isJsArray(receiver) !== true) {
    return receiver.addLast$1(value);
  }
  $.checkGrowable(receiver, 'addLast');
  receiver.push(value);
};

$.isNaN = function(receiver) {
  if (typeof receiver === 'number') {
    return isNaN(receiver);
  } else {
    return receiver.isNegative$0();
  }
};

$.login = function(authUrl, clientId, redirectUri, scopes, scopeDelimiter, windowHeight, windowWidth) {
  if ($.addedCallback !== true) {
    $.addedCallback = true;
    $.window().get$on().get$message().add$2(new $.Closure9(), false);
  }
  $._lastReqKey = '' + $.stringToString(clientId) + '=====' + $.stringToString(scopes);
  var tokenStr = $.window().get$localStorage().$dom_getItem$1($._lastReqKey);
  if ($.eqNullB(tokenStr)) {
    var info = (void 0);
  } else {
    info = $._lib4_TokenInfo$fromString$1(tokenStr);
  }
  var t0 = $.CompleterImpl$0();
  $.setRuntimeTypeInfo(t0, ({T: 'String'}));
  $._lastCompleter = t0;
  if ($.eqNullB(info) || $.eqNullB(info.get$_lib4_expires()) || $._expiringSoon(info) === true) {
    if (!$.eqNullB($._authWindow) && $._authWindow.get$closed() !== true) {
      $._lastCompleter.completeException$1($.AuthError$3('Authentication in progress', (void 0), (void 0)));
    } else {
      var encodedClientId = $.encodeURIComponent(clientId);
      var encodedRedirectUri = $.encodeURIComponent(redirectUri);
      if ($.eqNullB(scopes)) {
        var scopesStr = '';
      } else {
        scopesStr = $.join(scopes, scopeDelimiter);
      }
      var url = '' + $.stringToString(authUrl) + '?client_id=' + $.stringToString(encodedClientId) + '&redirect_uri=' + ('' + $.stringToString(encodedRedirectUri) + '&response_type=token&scope=' + $.stringToString(scopesStr));
      $._authWindow = $.window().open$3(url, 'authWindow', 'width=' + $.stringToString(windowWidth) + ',height=' + $.stringToString(windowHeight));
    }
    return $._lastCompleter.get$future();
  } else {
    return $.FutureImpl$immediate(info.get$_lib4_accessToken());
  }
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result = $.List((void 0));
  $.setRuntimeTypeInfo(result, ({E: 'Match'}));
  var length$ = $.get$length(haystack);
  var patternLength = $.get$length(needle);
  if (patternLength !== (patternLength | 0)) return $.allMatchesInStringUnchecked$bailout(needle, haystack, 1, length$, result, patternLength);
  for (var startIndex = 0; true; startIndex = startIndex0) {
    startIndex0 = startIndex;
    var position = $.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1)) {
      break;
    }
    result.push($.StringMatch$3(position, haystack, needle));
    var endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$)) {
      break;
    } else {
      if ($.eqB(position, endIndex)) {
        startIndex0 = $.add(startIndex, 1);
      } else {
        startIndex0 = endIndex;
      }
    }
  }
  return result;
};

$._lib_ChildrenElementList$_wrap$1 = function(element) {
  return new $._ChildrenElementList(element.get$$$dom_children(), element);
};

$._lib3_AllMatchesIterable$2 = function(_re, _str) {
  return new $._AllMatchesIterable(_str, _re);
};

$._lib4_TokenInfo$fromString$1 = function(s) {
  var t0 = new $._TokenInfo((void 0), (void 0));
  t0._lib4_TokenInfo$fromString$1(s);
  return t0;
};

$.dynamicSetMetadata = function(inputTable) {
  var t0 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t0);
};

$.getMilliseconds = function(receiver) {
  if (receiver.get$timeZone().get$isUtc() === true) {
    var t0 = ($.lazyAsJsDate(receiver).getUTCMilliseconds());
  } else {
    t0 = ($.lazyAsJsDate(receiver).getMilliseconds());
  }
  return t0;
};

$.ListIterator$1 = function(list) {
  return new $.ListIterator(list, 0);
};

$.XMLHttpRequest = function() {
  return new XMLHttpRequest();;
};

$.checkNum = function(value) {
  if (!(typeof value === 'number')) {
    $.checkNull(value);
    throw $.captureStackTrace($.IllegalArgumentException$1(value));
  }
  return value;
};

$.FutureAlreadyCompleteException$0 = function() {
  return new $.FutureAlreadyCompleteException();
};

$._lib_WorkerEventsImpl$1 = function(_ptr) {
  return new $._WorkerEventsImpl(_ptr);
};

$.ltB = function(a, b) {
  return $.lt(a, b) === true;
};

$.HttpRequest$3 = function(method, uri, headers) {
  return new $.HttpRequest(headers, uri, method);
};

$.FilteredElementList$1 = function(node) {
  return new $.FilteredElementList(node.get$nodes(), node);
};

$.convertDartClosureToJS = function(closure) {
  if (closure === (void 0)) {
    return;
  }
  var function$ = (closure.$identity);
  if (!!function$) {
    return function$;
  }
  var function0 = (function() {
    return $.invokeClosure.$call$5(closure, $, arguments.length, arguments[0], arguments[1]);
  });
  closure.$identity = function0;
  return function0;
};

$.parse = function(json) {
  return $.parse2(json);
};

$._lib_FixedSizeListIterator$1 = function(array) {
  return new $._FixedSizeListIterator($.get$length(array), 0, array);
};

$.parse2 = function(json) {
  return $._lib6_JsonParser$_internal$1(json)._lib6_parseToplevel$0();
};

$.split = function(receiver, pattern) {
  if (!(typeof receiver === 'string')) {
    return receiver.split$1(pattern);
  }
  $.checkNull(pattern);
  return $.stringSplitUnchecked(receiver, pattern);
};

$._lib_FrozenElementList$_wrap$1 = function(_nodeList) {
  return new $._FrozenElementList(_nodeList);
};

$.encodeURIComponent = function(text) {
  return $.replaceAll($.replaceAll($.replaceAll($.replaceAll($.replaceAll($.replaceAll($.replaceAll($.replaceAll($.replaceAll($.replaceAll($.replaceAll($.encodeURI(text), '#', '%23'), ';', '%3B'), ',', '%2C'), '/', '%2F'), '?', '%3F'), ':', '%3A'), '@', '%40'), '&', '%26'), '=', '%3D'), '+', '%2B'), '$', '%24');
};

$.concatAll = function(strings) {
  $.checkNull(strings);
  for (var t0 = $.iterator(strings), result = ''; t0.hasNext$0() === true; result = result0) {
    result0 = result;
    var t1 = t0.next$0();
    $.checkNull(t1);
    if (!(typeof t1 === 'string')) {
      throw $.captureStackTrace($.IllegalArgumentException$1(t1));
    }
    result0 = result + t1;
  }
  return result;
};

$.userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._lib_InputElementEventsImpl$1 = function(_ptr) {
  return new $._InputElementEventsImpl(_ptr);
};

$.log = function(s) {
  var e = $.document().$dom_createElement$1('pre');
  e.set$text($.toString(s));
  $.add$1($.document().get$body().get$elements(), e);
};

$.getRange = function(receiver, start, length$) {
  if ($.isJsArray(receiver) !== true) {
    return receiver.getRange$2(start, length$);
  }
  if (0 === length$) {
    return [];
  }
  $.checkNull(start);
  $.checkNull(length$);
  if (!((typeof start === 'number') && (start === (start | 0)))) {
    throw $.captureStackTrace($.IllegalArgumentException$1(start));
  }
  if (!((typeof length$ === 'number') && (length$ === (length$ | 0)))) {
    throw $.captureStackTrace($.IllegalArgumentException$1(length$));
  }
  if (length$ < 0) {
    throw $.captureStackTrace($.IllegalArgumentException$1(length$));
  }
  if (start < 0) {
    throw $.captureStackTrace($.IndexOutOfRangeException$1(start));
  }
  var end = start + length$;
  if ($.gtB(end, $.get$length(receiver))) {
    throw $.captureStackTrace($.IndexOutOfRangeException$1(length$));
  }
  if ($.ltB(length$, 0)) {
    throw $.captureStackTrace($.IllegalArgumentException$1(length$));
  }
  return receiver.slice(start, end);
};

$.getRange2 = function(a, start, length$, accumulator) {
  if (typeof a !== 'string' && (typeof a !== 'object'||a.constructor !== Array)) return $.getRange2$bailout(a, start, length$, accumulator,  0);
  if (typeof start !== 'number') return $.getRange2$bailout(a, start, length$, accumulator,  0);
  if ($.ltB(length$, 0)) {
    throw $.captureStackTrace($.IllegalArgumentException$1('length'));
  }
  if (start < 0) {
    throw $.captureStackTrace($.IndexOutOfRangeException$1(start));
  }
  var end = $.add(start, length$);
  if (end > a.length) {
    throw $.captureStackTrace($.IndexOutOfRangeException$1(end));
  }
  for (var i = start; i < end; i = i + 1) {
    if (i !== (i | 0)) throw $.iae(i);
    var t0 = a.length;
    if (i < 0 || i >= t0) throw $.ioore(i);
    $.add$1(accumulator, a[i]);
  }
  return accumulator;
};

$._lib3_DoubleLinkedQueueIterator$1 = function(_sentinel) {
  var t0 = new $._DoubleLinkedQueueIterator((void 0), _sentinel);
  t0._lib3_DoubleLinkedQueueIterator$1(_sentinel);
  return t0;
};

$._lib_TextTrackListEventsImpl$1 = function(_ptr) {
  return new $._TextTrackListEventsImpl(_ptr);
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$._dynamicMetadata2 = function() {
  if ((typeof($dynamicMetadata)) === 'undefined') {
    var t0 = [];
    $._dynamicMetadata(t0);
  }
  return $dynamicMetadata;
};

$.LinkedHashMapImplementation$0 = function() {
  var t0 = new $.LinkedHashMapImplementation((void 0), (void 0));
  t0.LinkedHashMapImplementation$0();
  return t0;
};

$._lib_DeprecatedPeerConnectionEventsImpl$1 = function(_ptr) {
  return new $._DeprecatedPeerConnectionEventsImpl(_ptr);
};

$.regExpGetNative = function(regExp) {
  var r = (regExp._re);
  var r0 = r;
  if (r === (void 0)) {
    r0 = (regExp._re = $.regExpMakeNative(regExp, false));
  }
  return r0;
};

$.throwNoSuchMethod = function(obj, name$, arguments$) {
  throw $.captureStackTrace($.NoSuchMethodException$4(obj, name$, arguments$, (void 0)));
};

$.checkNull = function(object) {
  if (object === (void 0)) {
    throw $.captureStackTrace($.NullPointerException$2((void 0), $.CTC));
  }
  return object;
};

$.CompleterImpl$0 = function() {
  return new $.CompleterImpl($.FutureImpl$0());
};

$._lib_EventListenerListImpl$2 = function(_ptr, _type) {
  return new $._EventListenerListImpl(_type, _ptr);
};

$.getSeconds = function(receiver) {
  if (receiver.get$timeZone().get$isUtc() === true) {
    var t0 = ($.lazyAsJsDate(receiver).getUTCSeconds());
  } else {
    t0 = ($.lazyAsJsDate(receiver).getSeconds());
  }
  return t0;
};

$._lib_WindowEventsImpl$1 = function(_ptr) {
  return new $._WindowEventsImpl(_ptr);
};

$.DoubleLinkedQueue$0 = function() {
  var t0 = new $.DoubleLinkedQueue((void 0));
  t0.DoubleLinkedQueue$0();
  return t0;
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      return true;
    } else {
      $.checkNull(b);
      throw $.captureStackTrace($.IllegalArgumentException$1(b));
    }
  }
  return false;
};

$._lib3_DoubleLinkedQueueEntrySentinel$0 = function() {
  var t0 = new $._DoubleLinkedQueueEntrySentinel((void 0), (void 0), (void 0));
  t0.DoubleLinkedQueueEntry$1((void 0));
  t0._lib3_DoubleLinkedQueueEntrySentinel$0();
  return t0;
};

$.getHours = function(receiver) {
  if (receiver.get$timeZone().get$isUtc() === true) {
    var t0 = ($.lazyAsJsDate(receiver).getUTCHours());
  } else {
    t0 = ($.lazyAsJsDate(receiver).getHours());
  }
  return t0;
};

$.stringToString = function(value) {
  var res = $.toString(value);
  if (!(typeof res === 'string')) {
    throw $.captureStackTrace($.IllegalArgumentException$1(value));
  }
  return res;
};

$.toString = function(value) {
  if (typeof value == "object") {
    if ($.isJsArray(value) === true) {
      return $.collectionToString(value);
    } else {
      return value.toString$0();
    }
  }
  if (value === 0 && (1 / value) < 0) {
    return '-0.0';
  }
  if (value === (void 0)) {
    return 'null';
  }
  if (typeof value == "function") {
    return 'Closure';
  }
  return String(value);
};

$.contains$2 = function(receiver, other, startIndex) {
  if (!(typeof receiver === 'string')) {
    return receiver.contains$2(other, startIndex);
  }
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
};

$._lib4_TokenInfo$0 = function() {
  return new $._TokenInfo((void 0), (void 0));
};

$.IndexOutOfRangeException$1 = function(_index) {
  return new $.IndexOutOfRangeException(_index);
};

$._lib_TextTrackEventsImpl$1 = function(_ptr) {
  return new $._TextTrackEventsImpl(_ptr);
};

$.charCodeAt = function(receiver, index) {
  if (typeof receiver === 'string') {
    if (!(typeof index === 'number')) {
      throw $.captureStackTrace($.IllegalArgumentException$1(index));
    }
    if (index < 0) {
      throw $.captureStackTrace($.IndexOutOfRangeException$1(index));
    }
    if (index >= receiver.length) {
      throw $.captureStackTrace($.IndexOutOfRangeException$1(index));
    }
    return receiver.charCodeAt(index);
  } else {
    return receiver.charCodeAt$1(index);
  }
};

$._lib_BatteryManagerEventsImpl$1 = function(_ptr) {
  return new $._BatteryManagerEventsImpl(_ptr);
};

$._lib_WebSocketEventsImpl$1 = function(_ptr) {
  return new $._WebSocketEventsImpl(_ptr);
};

$.collectionToString = function(c) {
  var result = $.StringBufferImpl$1('');
  $._emitCollection(c, result, $.List((void 0)));
  return result.toString$0();
};

$.MetaInfo$3 = function(tag, tags, set) {
  return new $.MetaInfo(set, tags, tag);
};

$.KeyValuePair$2 = function(key, value) {
  return new $.KeyValuePair(value, key);
};

$._lib_MediaStreamEventsImpl$1 = function(_ptr) {
  return new $._MediaStreamEventsImpl(_ptr);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property,
      {value: value, enumerable: false, writable: false, configurable: true});;
};

$.dynamicFunction = function(name$) {
  var f = (Object.prototype[name$]);
  if (f !== (void 0) && (!!f.methods)) {
    return f.methods;
  }
  var methods = ({});
  var dartMethod = (Object.getPrototypeOf($.CTC11)[name$]);
  if (dartMethod !== (void 0)) {
    methods['Object'] = dartMethod;
  }
  var bind = (function() {return $.dynamicBind.$call$4(this, name$, methods, Array.prototype.slice.call(arguments));});
  bind.methods = methods;
  $.defineProperty((Object.prototype), name$, bind);
  return methods;
};

$.checkString = function(value) {
  if (!(typeof value === 'string')) {
    $.checkNull(value);
    throw $.captureStackTrace($.IllegalArgumentException$1(value));
  }
  return value;
};

$.div = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    return a / b;
  }
  return a.operator$div$1(b);
};

$.stringFromCharCodes = function(charCodes) {
  for (var t0 = $.iterator(charCodes); t0.hasNext$0() === true; ) {
    var t1 = t0.next$0();
    if (!((typeof t1 === 'number') && (t1 === (t1 | 0)))) {
      throw $.captureStackTrace($.IllegalArgumentException$1(t1));
    }
  }
  return String.fromCharCode.apply((void 0), charCodes);
};

$.objectToString = function(object) {
  var name$ = (object.constructor.name);
  if (name$ === (void 0)) {
    var name0 = (object.constructor.toString().match(/^\s*function\s*\$?(\S*)\s*\(/)[1]);
  } else {
    name0 = name$;
    if ($.charCodeAt(name$, 0) === 36) {
      name0 = $.substring$1(name$, 1);
    }
  }
  return 'Instance of \'' + $.stringToString(name0) + '\'';
};

$.indexOf2 = function(a, element, startIndex, endIndex) {
  if (typeof a !== 'string' && (typeof a !== 'object'||a.constructor !== Array)) return $.indexOf2$bailout(a, element, startIndex, endIndex,  0);
  if (typeof endIndex !== 'number') return $.indexOf2$bailout(a, element, startIndex, endIndex,  0);
  if ($.geB(startIndex, a.length)) {
    return -1;
  }
  var startIndex0 = startIndex;
  if ($.ltB(startIndex, 0)) {
    startIndex0 = 0;
  }
  if (typeof startIndex0 !== 'number') return $.indexOf2$bailout(a, element, startIndex, endIndex, 3, a, endIndex, startIndex0);
  for (var i = startIndex0; i < endIndex; i = i + 1) {
    if (i !== (i | 0)) throw $.iae(i);
    var t0 = a.length;
    if (i < 0 || i >= t0) throw $.ioore(i);
    if ($.eqB(a[i], element)) {
      return i;
    }
  }
  return -1;
};

$.removeLast = function(receiver) {
  if ($.isJsArray(receiver) === true) {
    $.checkGrowable(receiver, 'removeLast');
    if ($.get$length(receiver) === 0) {
      throw $.captureStackTrace($.IndexOutOfRangeException$1(-1));
    }
    return receiver.pop();
  }
  return receiver.removeLast$0();
};

$._firstProbe = function(hashCode, length$) {
  return $.and(hashCode, $.sub(length$, 1));
};

$.set$length = function(receiver, newLength) {
  if ($.isJsArray(receiver) === true) {
    $.checkNull(newLength);
    if (!((typeof newLength === 'number') && (newLength === (newLength | 0)))) {
      throw $.captureStackTrace($.IllegalArgumentException$1(newLength));
    }
    if (newLength < 0) {
      throw $.captureStackTrace($.IndexOutOfRangeException$1(newLength));
    }
    $.checkGrowable(receiver, 'set length');
    receiver.length = newLength;
  } else {
    receiver.set$length(newLength);
  }
  return newLength;
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if ($.eqB(name$, 'Window')) {
    return 'DOMWindow';
  }
  if ($.eqB(name$, 'Document')) {
    return 'HTMLDocument';
  }
  if ($.eqB(name$, 'XMLDocument')) {
    return 'Document';
  }
  if ($.eqB(name$, 'WorkerMessageEvent')) {
    return 'MessageEvent';
  }
  return name$;
};

$.ioore = function(index) {
  throw $.captureStackTrace($.IndexOutOfRangeException$1(index));
};

$._combine = function(first, second) {
  var t0 = ({});
  if ($.eqNullB(first) || $.isEmpty(first) === true) {
    return second;
  } else {
    if ($.eqNullB(second) || $.isEmpty(second) === true) {
      return first;
    }
  }
  t0.m_1 = $.makeLiteralMap([]);
  var set = new $.Closure19(t0);
  $.forEach(first, set);
  $.forEach(second, set);
  return t0.m_1;
};

$.hashCode = function(receiver) {
  if (typeof receiver === 'number') {
    return receiver & 0x1FFFFFFF;
  }
  if (!(typeof receiver === 'string')) {
    return receiver.hashCode$0();
  }
  var length$ = (receiver.length);
  for (var hash = 0, i = 0; i < length$; hash = hash0, i = i0) {
    hash0 = hash;
    var hash1 = (536870911 & hash + (receiver.charCodeAt(i))) >>> 0;
    var hash2 = (536870911 & hash1 + ((524287 & hash1) >>> 0 << 10)) >>> 0;
    hash0 = (hash2 ^ $.shr(hash2, 6)) >>> 0;
    var i0 = i + 1;
  }
  var hash3 = (536870911 & hash + ((67108863 & hash) >>> 0 << 3)) >>> 0;
  var hash4 = (hash3 ^ $.shr(hash3, 11)) >>> 0;
  return (536870911 & hash4 + ((16383 & hash4) >>> 0 << 15)) >>> 0;
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator = $.iterator(keyValuePairs);
  var result = $.LinkedHashMapImplementation$0();
  for (; iterator.hasNext$0() === true; ) {
    result.operator$indexSet$2(iterator.next$0(), iterator.next$0());
  }
  return result;
};

$.forEach = function(receiver, f) {
  if ($.isJsArray(receiver) !== true) {
    return receiver.forEach$1(f);
  } else {
    return $.forEach2(receiver, f);
  }
};

$.createFromCharCodes = function(charCodes) {
  $.checkNull(charCodes);
  var charCodes0 = charCodes;
  if ($.isJsArray(charCodes) !== true) {
    if (!((typeof charCodes === 'object') && (((charCodes.constructor === Array) || charCodes.is$List2())))) {
      throw $.captureStackTrace($.IllegalArgumentException$1(charCodes));
    }
    charCodes0 = $.List$from(charCodes);
  }
  return $.stringFromCharCodes(charCodes0);
};

$.startsWith = function(receiver, other) {
  if (!(typeof receiver === 'string')) {
    return receiver.startsWith$1(other);
  }
  $.checkString(other);
  var length$ = $.get$length(other);
  if ($.gtB(length$, receiver.length)) {
    return false;
  }
  return other == receiver.substring(0, length$);
};

$.forEach2 = function(iterable, f) {
  for (var t0 = $.iterator(iterable); t0.hasNext$0() === true; ) {
    f.$call$1(t0.next$0());
  }
};

$.le = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    return a <= b;
  }
  return a.operator$le$1(b);
};

$.toStringForNativeObject = function(obj) {
  return 'Instance of ' + $.stringToString($.getTypeNameOf(obj));
};

$.TimeZoneImplementation$local$0 = function() {
  return new $.TimeZoneImplementation(false);
};

$.trim = function(receiver) {
  if (!(typeof receiver === 'string')) {
    return receiver.trim$0();
  }
  return receiver.trim();
};

$.forEach3 = function(iterable, f) {
  for (var t0 = $.iterator(iterable); t0.hasNext$0() === true; ) {
    f.$call$1(t0.next$0());
  }
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag = $.getTypeNameOf(obj);
  var method = (methods[tag]);
  var method0 = method;
  if (method === (void 0) && $._dynamicMetadata2() !== (void 0)) {
    for (var method1 = method, i = 0; method0 = method1, $.ltB(i, $.get$length($._dynamicMetadata2())); method1 = method2, i = i0) {
      method2 = method1;
      var entry = $.index($._dynamicMetadata2(), i);
      method2 = method1;
      if ($.contains$1(entry.get$set(), tag) === true) {
        var method3 = (methods[entry.get$tag()]);
        if (method3 !== (void 0)) {
          method0 = method3;
          break;
        }
        method2 = method3;
      }
      var i0 = i + 1;
    }
  }
  var method4 = method0;
  if (method0 === (void 0)) {
    method4 = (methods['Object']);
  }
  var proto = (Object.getPrototypeOf(obj));
  var method5 = method4;
  if (method4 === (void 0)) {
    method5 = (function () {if (Object.getPrototypeOf(this) === proto) {$.throwNoSuchMethod.$call$3(this, name$, Array.prototype.slice.call(arguments));} else {return Object.prototype[name$].apply(this, arguments);}});
  }
  var nullCheckMethod = (function() {var res = method5.apply(this, Array.prototype.slice.call(arguments));return res === null ? (void 0) : res;});
  if (!proto.hasOwnProperty(name$)) {
    $.defineProperty(proto, name$, nullCheckMethod);
  }
  return nullCheckMethod.apply(obj, arguments$);
};

$._lib_MessagePortEventsImpl$1 = function(_ptr) {
  return new $._MessagePortEventsImpl(_ptr);
};

$.getFunctionForTypeNameOf = function() {
  if ((typeof(navigator)) !== 'object') {
    return $.typeNameInChrome;
  }
  var userAgent = (navigator.userAgent);
  if ($.contains$1(userAgent, $.CTC10) === true) {
    return $.typeNameInChrome;
  } else {
    if ($.contains$1(userAgent, 'Firefox') === true) {
      return $.typeNameInFirefox;
    } else {
      if ($.contains$1(userAgent, 'MSIE') === true) {
        return $.typeNameInIE;
      } else {
        return $.constructorNameFallback;
      }
    }
  }
};

$.index = function(a, index) {
  if (typeof a === 'string' || $.isJsArray(a) === true) {
    if (!((typeof index === 'number') && (index === (index | 0)))) {
      if (!(typeof index === 'number')) {
        throw $.captureStackTrace($.IllegalArgumentException$1(index));
      }
      if ($.truncate(index) !== index) {
        throw $.captureStackTrace($.IllegalArgumentException$1(index));
      }
    }
    if ($.ltB(index, 0) || $.geB(index, $.get$length(a))) {
      throw $.captureStackTrace($.IndexOutOfRangeException$1(index));
    }
    return a[index];
  }
  return a.operator$index$1(index);
};

$._lib_ElementEventsImpl$1 = function(_ptr) {
  return new $._ElementEventsImpl(_ptr);
};

$.toLowerCase = function(receiver) {
  if (!(typeof receiver === 'string')) {
    return receiver.toLowerCase$0();
  }
  return receiver.toLowerCase();
};

$.parseDouble = function(str) {
  return $.parseDouble2(str);
};

$.parseDouble2 = function(str) {
  $.checkString(str);
  var ret = (parseFloat(str));
  var ret0 = ret;
  if (ret === 0 && ($.startsWith(str, '0x') === true || $.startsWith(str, '0X') === true)) {
    ret0 = (parseInt(str));
  }
  if ($.isNaN(ret0) === true && !$.eqB(str, 'NaN') && !$.eqB(str, '-NaN')) {
    throw $.captureStackTrace($.BadNumberFormatException$1(str));
  }
  return ret0;
};

$.List = function(length$) {
  return $.newList(length$);
};

$._isPowerOfTwo = function(x) {
  return $.eq($.and(x, $.sub(x, 1)), 0);
};

$._lib_XMLHttpRequestUploadEventsImpl$1 = function(_ptr) {
  return new $._XMLHttpRequestUploadEventsImpl(_ptr);
};

$.Foursquare$1 = function(clientId) {
  var t0 = new $.Foursquare();
  t0.Foursquare$1(clientId);
  return t0;
};

$.captureStackTrace = function(ex) {
  var jsError = (new Error());
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.$call$0;
  return jsError;
};

$.indexOf$1 = function(receiver, element) {
  if ($.isJsArray(receiver) === true || typeof receiver === 'string') {
    return $.indexOf$2(receiver, element, 0);
  }
  return receiver.indexOf$1(element);
};

$.StackOverflowException$0 = function() {
  return new $.StackOverflowException();
};

$.StringBufferImpl$1 = function(content$) {
  var t0 = new $.StringBufferImpl((void 0), (void 0));
  t0.StringBufferImpl$1(content$);
  return t0;
};

$.HashMapImplementation$0 = function() {
  var t0 = new $.HashMapImplementation((void 0), (void 0), (void 0), (void 0), (void 0));
  t0.HashMapImplementation$0();
  return t0;
};

$.substring$1 = function(receiver, startIndex) {
  if (!(typeof receiver === 'string')) {
    return receiver.substring$1(startIndex);
  }
  return $.substring$2(receiver, startIndex, (void 0));
};

$.join = function(strings, separator) {
  return $.join2(strings, separator);
};

$.join2 = function(strings, separator) {
  if (typeof separator !== 'string') return $.join2$bailout(strings, separator,  0);
  $.checkNull(strings);
  $.checkNull(separator);
  for (var t0 = $.iterator(strings), result = '', first = true; t0.hasNext$0() === true; result = result0, first = first0) {
    result0 = result;
    first0 = first;
    var t1 = t0.next$0();
    $.checkNull(t1);
    if (!(typeof t1 === 'string')) {
      throw $.captureStackTrace($.IllegalArgumentException$1(t1));
    }
    var result1 = result;
    if (!first) {
      result1 = result + separator;
    }
    var result2 = result1 + t1;
    result0 = result2;
    first0 = false;
  }
  return result;
};

$.Checkins$0 = function() {
  return new $.Checkins('checkins');
};

$.eq = function(a, b) {
  if (typeof a === "object") {
    if (!!a.operator$eq$1) {
      return a.operator$eq$1(b);
    } else {
      return a === b;
    }
  }
  return a === b;
};

$._lib_SharedWorkerContextEventsImpl$1 = function(_ptr) {
  return new $._SharedWorkerContextEventsImpl(_ptr);
};

$._lib_IDBVersionChangeRequestEventsImpl$1 = function(_ptr) {
  return new $._IDBVersionChangeRequestEventsImpl(_ptr);
};

$.gtB = function(a, b) {
  return $.gt(a, b) === true;
};

$.setRuntimeTypeInfo = function(target, typeInfo) {
  if (target !== (void 0)) {
    target.builtin$typeInfo = typeInfo;
  }
};

$.indexOf = function(a, element, startIndex, endIndex) {
  if (typeof a !== 'string' && (typeof a !== 'object'||a.constructor !== Array)) return $.indexOf$bailout(a, element, startIndex, endIndex,  0);
  if (typeof endIndex !== 'number') return $.indexOf$bailout(a, element, startIndex, endIndex,  0);
  if ($.geB(startIndex, a.length)) {
    return -1;
  }
  var startIndex0 = startIndex;
  if ($.ltB(startIndex, 0)) {
    startIndex0 = 0;
  }
  if (typeof startIndex0 !== 'number') return $.indexOf$bailout(a, element, startIndex, endIndex, 3, a, endIndex, startIndex0);
  for (var i = startIndex0; i < endIndex; i = i + 1) {
    if (i !== (i | 0)) throw $.iae(i);
    var t0 = a.length;
    if (i < 0 || i >= t0) throw $.ioore(i);
    if ($.eqB(a[i], element)) {
      return i;
    }
  }
  return -1;
};

$.shl = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    if ($.ltB(b, 0)) {
      throw $.captureStackTrace($.IllegalArgumentException$1(b));
    }
    return (a << b) >>> 0;
  }
  return a.operator$shl$1(b);
};

$.document = function() {
  return document;;
};

$._lib_FileWriterEventsImpl$1 = function(_ptr) {
  return new $._FileWriterEventsImpl(_ptr);
};

$.FutureNotCompleteException$0 = function() {
  return new $.FutureNotCompleteException();
};

$.NoSuchMethodException$4 = function(_receiver, _functionName, _arguments, _existingArgumentNames) {
  return new $.NoSuchMethodException(_existingArgumentNames, _arguments, _functionName, _receiver);
};

$.lt = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    return a < b;
  }
  return a.operator$lt$1(b);
};

$.unwrapException = function(ex) {
  if ("dartException" in ex) {
    return ex.dartException;
  } else {
    if (ex instanceof TypeError) {
      var type = (ex.type);
      var name$ = $.index((ex.arguments), 0);
      if (type === 'property_not_function' || type === 'called_non_callable' || type === 'non_object_property_call' || type === 'non_object_property_load') {
        if (name$ !== (void 0) && $.startsWith(name$, '$call$') === true) {
          return $.ObjectNotClosureException$0();
        } else {
          return $.NullPointerException$2((void 0), $.CTC);
        }
      } else {
        if (type === 'undefined_method') {
          if (typeof name$ === 'string' && $.startsWith(name$, '$call$') === true) {
            return $.ObjectNotClosureException$0();
          } else {
            return $.NoSuchMethodException$4('', name$, [], (void 0));
          }
        }
      }
    } else {
      if (ex instanceof RangeError) {
        if ($.contains$1((ex.message), 'call stack') === true) {
          return $.StackOverflowException$0();
        }
      }
    }
  }
  return ex;
};

$.ceil = function(receiver) {
  if (!(typeof receiver === 'number')) {
    return receiver.ceil$0();
  }
  return Math.ceil(receiver);
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf === (void 0)) {
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  }
  return $._getTypeNameOf.$call$1(obj);
};

$.sub = function(a, b) {
  if ($.checkNumbers(a, b) === true) {
    return a - b;
  }
  return a.operator$sub$1(b);
};

$.encodeURI$bailout = function(text, state, env0) {
  switch (state) {
    case 1:
      t0 = env0;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      var encodedText = $.StringBufferImpl$1('');
      var i = 0;
      L0: while (true) {
        if (!$.ltB(i, $.get$length(text))) break L0;
        c$0:{
          var i0 = i;
          if (!$.eqB('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.!~*\'()#;,/?:@&=+$'.indexOf($.index(text, i)), -1)) {
            encodedText.add$1($.index(text, i));
            i0 = i;
            break c$0;
          }
          var charCode = $.charCodeAt(text, i);
          var byteList = [];
          if ($.ltB(charCode, 128)) {
            $.add$1(byteList, charCode);
            i0 = i;
          } else {
            if ($.ltB(charCode, 2048)) {
              $.add$1(byteList, $.or($.shr(charCode, 6), 192));
              $.add$1(byteList, $.or($.and(charCode, 63), 128));
              i0 = i;
            } else {
              if ($.leB(55296, charCode) && $.ltB(charCode, 56320)) {
                var t1 = i + 1;
                if ($.eqB($.get$length(text), t1)) {
                  var nextCharCode = 0;
                } else {
                  nextCharCode = $.charCodeAt(text, t1);
                }
                if ($.leB(56320, nextCharCode) && $.ltB(nextCharCode, 57344)) {
                  var charCode0 = $.add(charCode, 64);
                  $.add$1(byteList, $.or($.and($.shr(charCode0, 8), 7), 240));
                  $.add$1(byteList, $.or($.and($.shr(charCode0, 2), 63), 128));
                  $.add$1(byteList, $.or($.or($.shl($.and(charCode0, 3), 4), $.and($.shr(nextCharCode, 6), 15)), 128));
                  $.add$1(byteList, $.or($.and(nextCharCode, 63), 128));
                } else {
                  throw $.captureStackTrace($.IllegalArgumentException$1('URI malformed: Orphaned low surrogate.'));
                }
                i0 = t1;
              } else {
                if ($.leB(56320, charCode) && $.ltB(charCode, 57344)) {
                  throw $.captureStackTrace($.IllegalArgumentException$1('URI malformed: Orphaned high surrogate.'));
                } else {
                  if ($.ltB(charCode, 65536)) {
                    $.add$1(byteList, $.or($.shr(charCode, 12), 224));
                    $.add$1(byteList, $.or($.and($.shr(charCode, 6), 63), 128));
                    $.add$1(byteList, $.or($.and(charCode, 63), 128));
                  }
                }
                i0 = i;
              }
            }
          }
          var j = 0;
          L1: while (true) {
            if (!(j < byteList.length)) break L1;
            var t2 = encodedText.add$1('%');
            var t3 = byteList.length;
            if (j < 0 || j >= t3) throw $.ioore(j);
            var t4 = $.shr(byteList[j], 4);
            if (t4 !== (t4 | 0)) throw $.iae(t4);
            var t5 = '0123456789ABCDEF'.length;
            if (t4 < 0 || t4 >= t5) throw $.ioore(t4);
            var t6 = $.add$1(t2, '0123456789ABCDEF'[t4]);
            var t7 = byteList.length;
            if (j < 0 || j >= t7) throw $.ioore(j);
            var t8 = $.and(byteList[j], 15);
            if (t8 !== (t8 | 0)) throw $.iae(t8);
            var t9 = '0123456789ABCDEF'.length;
            if (t8 < 0 || t8 >= t9) throw $.ioore(t8);
            $.add$1(t6, '0123456789ABCDEF'[t8]);
            j = j + 1;
          }
        }
        i = i0 + 1;
      }
      return encodedText.toString$0();
  }
};

$.allMatchesInStringUnchecked$bailout = function(needle, haystack, state, env0, env1, env2) {
  switch (state) {
    case 1:
      length$ = env0;
      result = env1;
      patternLength = env2;
      break;
  }
  switch (state) {
    case 0:
      var result = $.List((void 0));
      $.setRuntimeTypeInfo(result, ({E: 'Match'}));
      var length$ = $.get$length(haystack);
      var patternLength = $.get$length(needle);
    case 1:
      state = 0;
      var startIndex = 0;
      L0: while (true) {
        if (!true) break L0;
        var startIndex0 = startIndex;
        var position = $.indexOf$2(haystack, needle, startIndex);
        if ($.eqB(position, -1)) {
          break;
        }
        result.push($.StringMatch$3(position, haystack, needle));
        var endIndex = $.add(position, patternLength);
        if ($.eqB(endIndex, length$)) {
          break;
        } else {
          if ($.eqB(position, endIndex)) {
            startIndex0 = $.add(startIndex, 1);
          } else {
            startIndex0 = endIndex;
          }
        }
        startIndex = startIndex0;
      }
      return result;
  }
};

$.getRange2$bailout = function(a, start, length$, accumulator, state, env0, env1) {
  switch (state) {
    case 1:
      t0 = env0;
      break;
    case 2:
      t0 = env0;
      i = env1;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
    case 2:
      state = 0;
      if ($.ltB(length$, 0)) {
        throw $.captureStackTrace($.IllegalArgumentException$1('length'));
      }
      if ($.ltB(start, 0)) {
        throw $.captureStackTrace($.IndexOutOfRangeException$1(start));
      }
      var end = $.add(start, length$);
      if ($.gtB(end, $.get$length(a))) {
        throw $.captureStackTrace($.IndexOutOfRangeException$1(end));
      }
      var i0 = start;
      L0: while (true) {
        if (!$.ltB(i0, end)) break L0;
        $.add$1(accumulator, $.index(a, i0));
        i0 = $.add(i0, 1);
      }
      return accumulator;
  }
};

$.stringReplaceAllUnchecked$bailout = function(receiver, from, to, state, env0) {
  switch (state) {
    case 1:
      t0 = env0;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      if (typeof from === 'string') {
        if (from === '') {
          if ($.eqB(receiver, '')) {
            return to;
          } else {
            var result = $.StringBufferImpl$1('');
            var length$ = $.get$length(receiver);
            result.add$1(to);
            var i = 0;
            L0: while (true) {
              if (!$.ltB(i, length$)) break L0;
              result.add$1($.index(receiver, i));
              result.add$1(to);
              i = i + 1;
            }
            return result.toString$0();
          }
        } else {
          return receiver.replace($.regExpMakeNative($.JSSyntaxRegExp$3((from.replace($.regExpMakeNative($.CTC4, true), "\\$&")), false, false), true), to);
        }
      } else {
        if (typeof from === 'object' && !!from.is$JSSyntaxRegExp) {
          return receiver.replace($.regExpMakeNative(from, true), to);
        } else {
          $.checkNull(from);
          throw $.captureStackTrace('StringImplementation.replaceAll(Pattern) UNIMPLEMENTED');
        }
      }
  }
};

$.finish$bailout = function(hash, state, env0) {
  switch (state) {
    case 1:
      values = env0;
      break;
  }
  switch (state) {
    case 0:
      if (!$.eqNullB($._authWindow) && $._authWindow.get$closed() !== true) {
        $._authWindow.close$0();
        $._authWindow = (void 0);
      }
      var values = $.makeLiteralMap([]);
    case 1:
      state = 0;
      var idx = 1;
      L0: while (true) {
        if (!$.ltB(idx, $.sub($.get$length(hash), 1))) break L0;
        var idx0 = idx;
        var nextEq = $.indexOf$2(hash, '=', idx);
        if ($.ltB(nextEq, 0)) {
          break;
        }
        var key = $.substring$2(hash, idx, nextEq);
        var nextAmp = $.indexOf$2(hash, '&', nextEq);
        if ($.ltB(nextAmp, 0)) {
          var nextAmp0 = $.get$length(hash);
        } else {
          nextAmp0 = nextAmp;
        }
        var val = $.substring$2(hash, $.add(nextEq, 1), nextAmp0);
        var idx1 = $.add(nextAmp0, 1);
        $.indexSet(values, key, val);
        idx0 = idx1;
        idx = idx0;
      }
      if (!$.eqNullB($.index(values, 'error')) && !$.eqNullB($._lastCompleter)) {
        $._lastCompleter.completeException$1($.AuthError$3($.index(values, 'error'), $.index(values, 'error_description'), $.index(values, 'error_uri')));
      } else {
        var info = $._lib4_TokenInfo$0();
        info._lib4_accessToken = $.index(values, 'access_token');
        info._lib4_expires = $.index(values, 'expires');
        $.window().get$localStorage().$dom_setItem$2($._lastReqKey, info.asString$0());
        $._lastCompleter.complete$1($.index(values, 'access_token'));
      }
  }
};

$.indexOf2$bailout = function(a, element, startIndex, endIndex, state, env0, env1, env2) {
  switch (state) {
    case 1:
      t0 = env0;
      break;
    case 2:
      t0 = env0;
      t1 = env1;
      break;
    case 3:
      t0 = env0;
      t1 = env1;
      startIndex0 = env2;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
    case 2:
      state = 0;
      if ($.geB(startIndex, $.get$length(a))) {
        return -1;
      }
      var startIndex0 = startIndex;
      if ($.ltB(startIndex, 0)) {
        startIndex0 = 0;
      }
    case 3:
      state = 0;
      var i = startIndex0;
      L0: while (true) {
        if (!$.ltB(i, endIndex)) break L0;
        if ($.eqB($.index(a, i), element)) {
          return i;
        }
        i = $.add(i, 1);
      }
      return -1;
  }
};

$.indexOf$bailout = function(a, element, startIndex, endIndex, state, env0, env1, env2) {
  switch (state) {
    case 1:
      t0 = env0;
      break;
    case 2:
      t0 = env0;
      t1 = env1;
      break;
    case 3:
      t0 = env0;
      t1 = env1;
      startIndex0 = env2;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
    case 2:
      state = 0;
      if ($.geB(startIndex, $.get$length(a))) {
        return -1;
      }
      var startIndex0 = startIndex;
      if ($.ltB(startIndex, 0)) {
        startIndex0 = 0;
      }
    case 3:
      state = 0;
      var i = startIndex0;
      L0: while (true) {
        if (!$.ltB(i, endIndex)) break L0;
        if ($.eqB($.index(a, i), element)) {
          return i;
        }
        i = $.add(i, 1);
      }
      return -1;
  }
};

$.join2$bailout = function(strings, separator, state, env0) {
  switch (state) {
    case 1:
      t0 = env0;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      $.checkNull(strings);
      $.checkNull(separator);
      var t1 = $.iterator(strings);
      var result = '';
      var first = true;
      L0: while (true) {
        if (!(t1.hasNext$0() === true)) break L0;
        var result0 = result;
        var first0 = first;
        var t2 = t1.next$0();
        $.checkNull(t2);
        if (!(typeof t2 === 'string')) {
          throw $.captureStackTrace($.IllegalArgumentException$1(t2));
        }
        var result1 = result;
        if (!first) {
          result1 = $.add(result, separator);
        }
        var result2 = result1 + t2;
        result0 = result2;
        first0 = false;
        result = result0;
        first = first0;
      }
      return result;
  }
};

$.buildDynamicMetadata$bailout = function(inputTable, state, env0, env1, env2, env3, env4, env5, env6) {
  switch (state) {
    case 1:
      t0 = env0;
      break;
    case 2:
      t0 = env0;
      result = env1;
      tag = env2;
      i = env3;
      tags = env4;
      set = env5;
      tagNames = env6;
      break;
  }
  switch (state) {
    case 0:
    case 1:
      state = 0;
      var result = [];
      var i = 0;
    case 2:
      L0: while (true) {
        switch (state) {
          case 0:
            if (!$.ltB(i, $.get$length(inputTable))) break L0;
            var tag = $.index($.index(inputTable, i), 0);
            var tags = $.index($.index(inputTable, i), 1);
            var set = $.HashSetImplementation$0();
            $.setRuntimeTypeInfo(set, ({E: 'String'}));
            var tagNames = $.split(tags, '|');
          case 2:
            state = 0;
            var j = 0;
            L1: while (true) {
              if (!$.ltB(j, $.get$length(tagNames))) break L1;
              set.add$1($.index(tagNames, j));
              j = j + 1;
            }
            $.add$1(result, $.MetaInfo$3(tag, tags, set));
            i = i + 1;
        }
      }
      return result;
  }
};

$.dynamicBind.$call$4 = $.dynamicBind;
$.throwNoSuchMethod.$call$3 = $.throwNoSuchMethod;
$.typeNameInIE.$call$1 = $.typeNameInIE;
$.typeNameInChrome.$call$1 = $.typeNameInChrome;
$.toStringWrapper.$call$0 = $.toStringWrapper;
$.invokeClosure.$call$5 = $.invokeClosure;
$.typeNameInFirefox.$call$1 = $.typeNameInFirefox;
$.constructorNameFallback.$call$1 = $.constructorNameFallback;
Isolate.$finishClasses();
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CTC = Isolate.makeConstantList([]);
$.CTC8 = new Isolate.$isolateProperties.UnsupportedOperationException('');
$.CTC9 = new Isolate.$isolateProperties.IllegalArgumentException('Invalid list length');
$.CTC3 = new Isolate.$isolateProperties.JSSyntaxRegExp(false, false, '^#[_a-zA-Z]\\w*$');
$.CTC6 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CTC7 = new Isolate.$isolateProperties.JSSyntaxRegExp(false, false, '^(?:([^:/?#.]+):)?(?://(?:([^/?#]*)@)?([\\w\\d\\-\\u0100-\\uffff.%]*)(?::([0-9]+))?)?([^?#]+)?(?:\\?([^#]*))?(?:#(.*))?$');
$.CTC10 = new Isolate.$isolateProperties.JSSyntaxRegExp(false, false, 'Chrome|DumpRenderTree');
$.CTC11 = new Isolate.$isolateProperties.Object();
$.CTC4 = new Isolate.$isolateProperties.JSSyntaxRegExp(false, false, '[-[\\]{}()*+?.,\\\\^$|#\\s]');
$.CTC2 = new Isolate.$isolateProperties.NoMoreElementsException();
$.CTC5 = new Isolate.$isolateProperties.EmptyQueueException();
$.CLIENT_ID = 'T0JY25PVRECQGBURYCFBC4NHWOQDFFFHA11YRHTQEGF5E00I';
$._version = '20120502';
$._authWindow = (void 0);
$._clientSecret = (void 0);
$.REDIRECT_URI = 'http://foursquare-dart.googlecode.com/git/oauthWindow.html';
$._cachedBrowserPrefix = (void 0);
$._lastReqKey = (void 0);
$.addedCallback = false;
$._lastCompleter = (void 0);
$._getTypeNameOf = (void 0);
$._clientId = (void 0);
$.tokens = (void 0);
$._accessToken = (void 0);
var $ = null;
Isolate.$finishClasses();
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
(function() {
$.defineProperty(Object.prototype, 'is$List2', function() { return false; });
$.defineProperty(Object.prototype, 'is$Map', function() { return false; });
$.defineProperty(Object.prototype, 'is$Element', function() { return false; });
$.defineProperty(Object.prototype, 'is$Collection', function() { return false; });
$.defineProperty(Object.prototype, 'toString$0', function() { return $.toStringForNativeObject(this); });
$.dynamicFunction('$dom_addEventListener$3').AbstractWorker = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').AbstractWorker = function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $._lib_AbstractWorkerEventsImpl$1(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
 };
$.dynamicFunction('toString$0').HTMLAnchorElement = function() {
  return this.toString();
 };
$.dynamicFunction('search$1$ll').HTMLAnchorElement = function(arg0) { return this.search.$call$1$ll(arg0); };
$.dynamicFunction('is$Element').HTMLAnchorElement = function() { return true; };
$.dynamicFunction('get$length').WebKitAnimationList = function() { return this.length; };
$.dynamicFunction('is$Element').HTMLAppletElement = function() { return true; };
$.dynamicFunction('search$1$ll').HTMLAreaElement = function(arg0) { return this.search.$call$1$ll(arg0); };
$.dynamicFunction('is$Element').HTMLAreaElement = function() { return true; };
$.dynamicFunction('get$value').Attr = function() { return this.value; };
$.dynamicFunction('set$value').Attr = function(v) { this.value = v; };
$.dynamicFunction('get$length').AudioBuffer = function() { return this.length; };
$.dynamicFunction('get$on').AudioContext = function() {
  return $._lib_AudioContextEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').HTMLAudioElement = function() { return true; };
$.dynamicFunction('get$value').AudioParam = function() { return this.value; };
$.dynamicFunction('set$value').AudioParam = function(v) { this.value = v; };
$.dynamicFunction('clear$0').HTMLBRElement = function() { return this.clear.$call$0(); };
$.dynamicFunction('is$Element').HTMLBRElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLBaseElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLBaseFontElement = function() { return true; };
$.dynamicFunction('$dom_addEventListener$3').BatteryManager = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').BatteryManager = function() {
  return $._lib_BatteryManagerEventsImpl$1(this);
 };
$.dynamicFunction('get$on').HTMLBodyElement = function() {
  return $._lib_BodyElementEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').HTMLBodyElement = function() { return true; };
$.dynamicFunction('get$value').HTMLButtonElement = function() { return this.value; };
$.dynamicFunction('set$value').HTMLButtonElement = function(v) { this.value = v; };
$.dynamicFunction('is$Element').HTMLButtonElement = function() { return true; };
$.dynamicFunction('toString$0').WebKitCSSMatrix = function() {
  return this.toString();
 };
$.dynamicFunction('get$length').CSSRuleList = function() { return this.length; };
$.dynamicFunction('get$filter').CSSStyleDeclaration = function() {
  return this.getPropertyValue$1('' + $.stringToString($._browserPrefix()) + 'filter');
 };
$.dynamicFunction('filter$1').CSSStyleDeclaration = function(arg0) { return this.get$filter().$call$1(arg0); };
$.dynamicFunction('get$clear').CSSStyleDeclaration = function() {
  return this.getPropertyValue$1('clear');
 };
$.dynamicFunction('clear$0').CSSStyleDeclaration = function() { return this.get$clear().$call$0(); };
$.dynamicFunction('getPropertyValue$1').CSSStyleDeclaration = function(propertyName) {
  return this.getPropertyValue(propertyName);
 };
$.dynamicFunction('get$length').CSSStyleDeclaration = function() { return this.length; };
$.dynamicFunction('get$length').CSSValueList = function() { return this.length; };
$.dynamicFunction('is$Element').HTMLCanvasElement = function() { return true; };
$.dynamicFunction('get$length').CharacterData = function() { return this.length; };
$.dynamicFunction('get$data').CharacterData = function() { return this.data; };
$.dynamicFunction('get$length').ClientRectList = function() { return this.length; };
$.dynamicFunction('get$data').CompositionEvent = function() { return this.data; };
_ConsoleImpl = (typeof console == 'undefined' ? {} : console);
_ConsoleImpl.log$1 = function(arg) {
  return this.log(arg);
 };
_ConsoleImpl.error$1 = function(arg) {
  return this.error(arg);
 };
_ConsoleImpl.get$error = function() { return new $.Closure33(this); };
$.dynamicFunction('is$Element').HTMLContentElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLDListElement = function() { return true; };
$.dynamicFunction('$dom_addEventListener$3').DOMApplicationCache = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$status').DOMApplicationCache = function() { return this.status; };
$.dynamicFunction('get$on').DOMApplicationCache = function() {
  return $._lib_DOMApplicationCacheEventsImpl$1(this);
 };
$.dynamicFunction('toString$0').DOMException = function() {
  return this.toString();
 };
$.dynamicFunction('get$message').DOMException = function() { return this.message; };
$.dynamicFunction('get$length').DOMMimeTypeArray = function() { return this.length; };
$.dynamicFunction('get$length').DOMPlugin = function() { return this.length; };
$.dynamicFunction('get$length').DOMPluginArray = function() { return this.length; };
$.dynamicFunction('toString$0').DOMSelection = function() {
  return this.toString();
 };
$.dynamicFunction('get$value').DOMSettableTokenList = function() { return this.value; };
$.dynamicFunction('set$value').DOMSettableTokenList = function(v) { this.value = v; };
$.dynamicFunction('contains$1').DOMStringList = function(string) {
  return this.contains(string);
 };
$.dynamicFunction('getRange$2').DOMStringList = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeLast$0').DOMStringList = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').DOMStringList = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').DOMStringList = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').DOMStringList = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('isEmpty$0').DOMStringList = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('filter$1').DOMStringList = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').DOMStringList = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addLast$1').DOMStringList = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').DOMStringList = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').DOMStringList = function() {
  var t0 = $._lib_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'String'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').DOMStringList = function(index, value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot assign element of immutable List.'));
 };
$.dynamicFunction('operator$index$1').DOMStringList = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').DOMStringList = function() { return this.length; };
$.dynamicFunction('is$List2').DOMStringList = function() { return true; };
$.dynamicFunction('is$Collection').DOMStringList = function() { return true; };
$.dynamicFunction('toString$0').DOMTokenList = function() {
  return this.toString();
 };
$.dynamicFunction('contains$1').DOMTokenList = function(token) {
  return this.contains(token);
 };
$.dynamicFunction('add$1').DOMTokenList = function(token) {
  return this.add(token);
 };
$.dynamicFunction('get$length').DOMTokenList = function() { return this.length; };
$.dynamicFunction('clear$0').DataTransferItemList = function() {
  return this.clear();
 };
$.dynamicFunction('add$2').DataTransferItemList = function(data_OR_file, type) {
  return this.add(data_OR_file,type);
 };
$.dynamicFunction('add$1').DataTransferItemList = function(data_OR_file) {
  return this.add(data_OR_file);
};
$.dynamicFunction('get$length').DataTransferItemList = function() { return this.length; };
$.dynamicFunction('get$on').DedicatedWorkerContext = function() {
  return $._lib_DedicatedWorkerContextEventsImpl$1(this);
 };
$.dynamicFunction('send$1').DeprecatedPeerConnection = function(text) {
  return this.send(text);
 };
$.dynamicFunction('close$0').DeprecatedPeerConnection = function() {
  return this.close();
 };
$.dynamicFunction('$dom_addEventListener$3').DeprecatedPeerConnection = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').DeprecatedPeerConnection = function() {
  return $._lib_DeprecatedPeerConnectionEventsImpl$1(this);
 };
$.dynamicFunction('open$2').HTMLDetailsElement = function(arg0, arg1) { return this.open.$call$2(arg0, arg1); };
$.dynamicFunction('open$3').HTMLDetailsElement = function(arg0, arg1, arg2) { return this.open.$call$3(arg0, arg1, arg2); };
$.dynamicFunction('is$Element').HTMLDetailsElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLDirectoryElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLDivElement = function() { return true; };
$.dynamicFunction('$dom_querySelector$1').HTMLDocument = function(selectors) {
  return this.querySelector(selectors);;
 };
$.dynamicFunction('query$1').HTMLDocument = function(selectors) {
  if ($.CTC3.hasMatch$1(selectors) === true) {
    return this.$dom_getElementById$1($.substring$1(selectors, 1));
  }
  return this.$dom_querySelector$1(selectors);
 };
$.dynamicFunction('$dom_getElementById$1').HTMLDocument = function(elementId) {
  return this.getElementById(elementId);
 };
$.dynamicFunction('$dom_createElement$1').HTMLDocument = function(tagName) {
  return this.createElement(tagName);
 };
$.dynamicFunction('get$body').HTMLDocument = function() { return this.body; };
$.dynamicFunction('get$on').HTMLDocument = function() {
  return $._lib_DocumentEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').HTMLDocument = function() { return true; };
$.dynamicFunction('query$1').DocumentFragment = function(selectors) {
  return this.querySelector(selectors);
 };
$.dynamicFunction('get$on').DocumentFragment = function() {
  return $._lib_ElementEventsImpl$1(this);
 };
$.dynamicFunction('click$0').DocumentFragment = function() {
 };
$.dynamicFunction('get$click').DocumentFragment = function() { return new $.Closure34(this); };
$.dynamicFunction('get$parent').DocumentFragment = function() {
  return;
 };
$.dynamicFunction('get$$$dom_lastElementChild').DocumentFragment = function() {
  return $.last(this.get$elements());
 };
$.dynamicFunction('get$$$dom_firstElementChild').DocumentFragment = function() {
  return this.get$elements().first$0();
 };
$.dynamicFunction('get$elements').DocumentFragment = function() {
  if ($.eqNullB(this._lib_elements)) {
    this._lib_elements = $.FilteredElementList$1(this);
  }
  return this._lib_elements;
 };
$.dynamicFunction('is$Element').DocumentFragment = function() { return true; };
$.dynamicFunction('query$1').Element = function(selectors) {
  return this.querySelector(selectors);
 };
$.dynamicFunction('click$0').Element = function() {
  return this.click();
 };
$.dynamicFunction('get$click').Element = function() { return new $.Closure35(this); };
$.dynamicFunction('get$$$dom_lastElementChild').Element = function() {
  return this.lastElementChild;;
 };
$.dynamicFunction('get$$$dom_firstElementChild').Element = function() {
  return this.firstElementChild;;
 };
$.dynamicFunction('get$$$dom_children').Element = function() {
  return this.children;;
 };
$.dynamicFunction('get$on').Element = function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $._lib_ElementEventsImpl$1(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
 };
$.dynamicFunction('get$elements').Element = function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$elements')) {
    return $._lib_ChildrenElementList$_wrap$1(this);
  } else {
    return Object.prototype.get$elements.call(this);
  }
 };
$.dynamicFunction('is$Element').Element = function() { return true; };
$.dynamicFunction('is$Element').HTMLEmbedElement = function() { return true; };
$.dynamicFunction('get$length').EntryArray = function() { return this.length; };
$.dynamicFunction('get$length').EntryArraySync = function() { return this.length; };
$.dynamicFunction('remove$0').EntrySync = function() {
  return this.remove();
 };
$.dynamicFunction('get$message').ErrorEvent = function() { return this.message; };
$.dynamicFunction('toString$0').EventException = function() {
  return this.toString();
 };
$.dynamicFunction('get$message').EventException = function() { return this.message; };
$.dynamicFunction('close$0').EventSource = function() {
  return this.close();
 };
$.dynamicFunction('$dom_addEventListener$3').EventSource = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').EventSource = function() {
  return $._lib_EventSourceEventsImpl$1(this);
 };
$.dynamicFunction('$dom_addEventListener$3').EventTarget = function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }
 };
$.dynamicFunction('get$on').EventTarget = function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $._lib_EventsImpl$1(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
 };
$.dynamicFunction('is$Element').HTMLFieldSetElement = function() { return true; };
$.dynamicFunction('toString$0').FileException = function() {
  return this.toString();
 };
$.dynamicFunction('get$message').FileException = function() { return this.message; };
$.dynamicFunction('getRange$2').FileList = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeLast$0').FileList = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').FileList = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').FileList = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').FileList = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('isEmpty$0').FileList = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('filter$1').FileList = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').FileList = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addLast$1').FileList = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').FileList = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').FileList = function() {
  var t0 = $._lib_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'File'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').FileList = function(index, value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot assign element of immutable List.'));
 };
$.dynamicFunction('operator$index$1').FileList = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').FileList = function() { return this.length; };
$.dynamicFunction('is$List2').FileList = function() { return true; };
$.dynamicFunction('is$Collection').FileList = function() { return true; };
$.dynamicFunction('$dom_addEventListener$3').FileReader = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$error').FileReader = function() { return this.error; };
$.dynamicFunction('get$on').FileReader = function() {
  return $._lib_FileReaderEventsImpl$1(this);
 };
$.dynamicFunction('$dom_addEventListener$3').FileWriter = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$length').FileWriter = function() { return this.length; };
$.dynamicFunction('get$error').FileWriter = function() { return this.error; };
$.dynamicFunction('get$on').FileWriter = function() {
  return $._lib_FileWriterEventsImpl$1(this);
 };
$.dynamicFunction('get$length').FileWriterSync = function() { return this.length; };
$.dynamicFunction('getRange$2').Float32Array = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeLast$0').Float32Array = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').Float32Array = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').Float32Array = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').Float32Array = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('isEmpty$0').Float32Array = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('filter$1').Float32Array = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').Float32Array = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addLast$1').Float32Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').Float32Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').Float32Array = function() {
  var t0 = $._lib_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'num'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').Float32Array = function(index, value) {
  this[index] = value;
 };
$.dynamicFunction('operator$index$1').Float32Array = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').Float32Array = function() { return this.length; };
$.dynamicFunction('is$List2').Float32Array = function() { return true; };
$.dynamicFunction('is$Collection').Float32Array = function() { return true; };
$.dynamicFunction('getRange$2').Float64Array = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeLast$0').Float64Array = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').Float64Array = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').Float64Array = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').Float64Array = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('isEmpty$0').Float64Array = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('filter$1').Float64Array = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').Float64Array = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addLast$1').Float64Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').Float64Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').Float64Array = function() {
  var t0 = $._lib_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'num'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').Float64Array = function(index, value) {
  this[index] = value;
 };
$.dynamicFunction('operator$index$1').Float64Array = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').Float64Array = function() { return this.length; };
$.dynamicFunction('is$List2').Float64Array = function() { return true; };
$.dynamicFunction('is$Collection').Float64Array = function() { return true; };
$.dynamicFunction('is$Element').HTMLFontElement = function() { return true; };
$.dynamicFunction('get$length').HTMLFormElement = function() { return this.length; };
$.dynamicFunction('is$Element').HTMLFormElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLFrameElement = function() { return true; };
$.dynamicFunction('get$on').HTMLFrameSetElement = function() {
  return $._lib_FrameSetElementEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').HTMLFrameSetElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLHRElement = function() { return true; };
$.dynamicFunction('get$length').HTMLAllCollection = function() { return this.length; };
$.dynamicFunction('getRange$2').HTMLCollection = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeLast$0').HTMLCollection = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').HTMLCollection = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').HTMLCollection = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').HTMLCollection = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('isEmpty$0').HTMLCollection = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('filter$1').HTMLCollection = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').HTMLCollection = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addLast$1').HTMLCollection = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').HTMLCollection = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').HTMLCollection = function() {
  var t0 = $._lib_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'Node'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').HTMLCollection = function(index, value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot assign element of immutable List.'));
 };
$.dynamicFunction('operator$index$1').HTMLCollection = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').HTMLCollection = function() { return this.length; };
$.dynamicFunction('is$List2').HTMLCollection = function() { return true; };
$.dynamicFunction('is$Collection').HTMLCollection = function() { return true; };
$.dynamicFunction('set$length').HTMLOptionsCollection = function(value) {
  this.length = value;;
 };
$.dynamicFunction('get$length').HTMLOptionsCollection = function() {
  return this.length;;
 };
$.dynamicFunction('is$List2').HTMLOptionsCollection = function() { return true; };
$.dynamicFunction('is$Collection').HTMLOptionsCollection = function() { return true; };
$.dynamicFunction('is$Element').HTMLHeadElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLHeadingElement = function() { return true; };
$.dynamicFunction('get$length').History = function() { return this.length; };
$.dynamicFunction('is$Element').HTMLHtmlElement = function() { return true; };
$.dynamicFunction('get$key').IDBCursor = function() { return this.key; };
$.dynamicFunction('get$value').IDBCursorWithValue = function() { return this.value; };
$.dynamicFunction('close$0').IDBDatabase = function() {
  return this.close();
 };
$.dynamicFunction('$dom_addEventListener$3').IDBDatabase = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').IDBDatabase = function() {
  return $._lib_IDBDatabaseEventsImpl$1(this);
 };
$.dynamicFunction('toString$0').IDBDatabaseException = function() {
  return this.toString();
 };
$.dynamicFunction('get$message').IDBDatabaseException = function() { return this.message; };
$.dynamicFunction('clear$0').IDBObjectStore = function() {
  return this.clear();
 };
$.dynamicFunction('add$2').IDBObjectStore = function(value, key) {
  return this.add(value,key);
 };
$.dynamicFunction('add$1').IDBObjectStore = function(value) {
  return this.add(value);
};
$.dynamicFunction('$dom_addEventListener$3').IDBRequest = function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }
 };
$.dynamicFunction('get$on').IDBRequest = function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $._lib_IDBRequestEventsImpl$1(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
 };
$.dynamicFunction('$dom_addEventListener$3').IDBTransaction = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').IDBTransaction = function() {
  return $._lib_IDBTransactionEventsImpl$1(this);
 };
$.dynamicFunction('$dom_addEventListener$3').IDBVersionChangeRequest = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').IDBVersionChangeRequest = function() {
  return $._lib_IDBVersionChangeRequestEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').HTMLIFrameElement = function() { return true; };
$.dynamicFunction('get$data').ImageData = function() { return this.data; };
$.dynamicFunction('complete$1').HTMLImageElement = function(arg0) { return this.complete.$call$1(arg0); };
$.dynamicFunction('is$Element').HTMLImageElement = function() { return true; };
$.dynamicFunction('get$value').HTMLInputElement = function() { return this.value; };
$.dynamicFunction('set$value').HTMLInputElement = function(v) { this.value = v; };
$.dynamicFunction('get$pattern').HTMLInputElement = function() { return this.pattern; };
$.dynamicFunction('get$on').HTMLInputElement = function() {
  return $._lib_InputElementEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').HTMLInputElement = function() { return true; };
$.dynamicFunction('getRange$2').Int16Array = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeLast$0').Int16Array = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').Int16Array = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').Int16Array = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').Int16Array = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('isEmpty$0').Int16Array = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('filter$1').Int16Array = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').Int16Array = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addLast$1').Int16Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').Int16Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').Int16Array = function() {
  var t0 = $._lib_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'int'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').Int16Array = function(index, value) {
  this[index] = value;
 };
$.dynamicFunction('operator$index$1').Int16Array = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').Int16Array = function() { return this.length; };
$.dynamicFunction('is$List2').Int16Array = function() { return true; };
$.dynamicFunction('is$Collection').Int16Array = function() { return true; };
$.dynamicFunction('getRange$2').Int32Array = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeLast$0').Int32Array = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').Int32Array = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').Int32Array = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').Int32Array = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('isEmpty$0').Int32Array = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('filter$1').Int32Array = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').Int32Array = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addLast$1').Int32Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').Int32Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').Int32Array = function() {
  var t0 = $._lib_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'int'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').Int32Array = function(index, value) {
  this[index] = value;
 };
$.dynamicFunction('operator$index$1').Int32Array = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').Int32Array = function() { return this.length; };
$.dynamicFunction('is$List2').Int32Array = function() { return true; };
$.dynamicFunction('is$Collection').Int32Array = function() { return true; };
$.dynamicFunction('getRange$2').Int8Array = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeLast$0').Int8Array = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').Int8Array = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').Int8Array = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').Int8Array = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('isEmpty$0').Int8Array = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('filter$1').Int8Array = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').Int8Array = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addLast$1').Int8Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').Int8Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').Int8Array = function() {
  var t0 = $._lib_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'int'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').Int8Array = function(index, value) {
  this[index] = value;
 };
$.dynamicFunction('operator$index$1').Int8Array = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').Int8Array = function() { return this.length; };
$.dynamicFunction('is$List2').Int8Array = function() { return true; };
$.dynamicFunction('is$Collection').Int8Array = function() { return true; };
$.dynamicFunction('$dom_addEventListener$3').JavaScriptAudioNode = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').JavaScriptAudioNode = function() {
  return $._lib_JavaScriptAudioNodeEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').HTMLKeygenElement = function() { return true; };
$.dynamicFunction('get$value').HTMLLIElement = function() { return this.value; };
$.dynamicFunction('set$value').HTMLLIElement = function(v) { this.value = v; };
$.dynamicFunction('is$Element').HTMLLIElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLLabelElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLLegendElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLLinkElement = function() { return true; };
$.dynamicFunction('toString$0').Location = function() {
  return this.toString();
 };
$.dynamicFunction('search$1$ll').Location = function(arg0) { return this.search.$call$1$ll(arg0); };
$.dynamicFunction('is$Element').HTMLMapElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLMarqueeElement = function() { return true; };
$.dynamicFunction('$dom_addEventListener$3').MediaController = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$error').HTMLMediaElement = function() { return this.error; };
$.dynamicFunction('get$on').HTMLMediaElement = function() {
  return $._lib_MediaElementEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').HTMLMediaElement = function() { return true; };
$.dynamicFunction('get$message').MediaKeyEvent = function() { return this.message; };
$.dynamicFunction('getRange$2').MediaList = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeLast$0').MediaList = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').MediaList = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').MediaList = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').MediaList = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('isEmpty$0').MediaList = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('filter$1').MediaList = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').MediaList = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addLast$1').MediaList = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').MediaList = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').MediaList = function() {
  var t0 = $._lib_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'String'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').MediaList = function(index, value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot assign element of immutable List.'));
 };
$.dynamicFunction('operator$index$1').MediaList = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').MediaList = function() { return this.length; };
$.dynamicFunction('is$List2').MediaList = function() { return true; };
$.dynamicFunction('is$Collection').MediaList = function() { return true; };
$.dynamicFunction('$dom_addEventListener$3').MediaStream = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').MediaStream = function() {
  return $._lib_MediaStreamEventsImpl$1(this);
 };
$.dynamicFunction('get$length').MediaStreamList = function() { return this.length; };
$.dynamicFunction('get$length').MediaStreamTrackList = function() { return this.length; };
$.dynamicFunction('is$Element').HTMLMenuElement = function() { return true; };
$.dynamicFunction('get$data').MessageEvent = function() { return this.data; };
$.dynamicFunction('close$0').MessagePort = function() {
  return this.close();
 };
$.dynamicFunction('$dom_addEventListener$3').MessagePort = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').MessagePort = function() {
  return $._lib_MessagePortEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').HTMLMetaElement = function() { return true; };
$.dynamicFunction('get$value').HTMLMeterElement = function() { return this.value; };
$.dynamicFunction('set$value').HTMLMeterElement = function(v) { this.value = v; };
$.dynamicFunction('is$Element').HTMLMeterElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLModElement = function() { return true; };
$.dynamicFunction('getRange$2').NamedNodeMap = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeLast$0').NamedNodeMap = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').NamedNodeMap = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').NamedNodeMap = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').NamedNodeMap = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('isEmpty$0').NamedNodeMap = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('filter$1').NamedNodeMap = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').NamedNodeMap = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addLast$1').NamedNodeMap = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').NamedNodeMap = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').NamedNodeMap = function() {
  var t0 = $._lib_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'Node'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').NamedNodeMap = function(index, value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot assign element of immutable List.'));
 };
$.dynamicFunction('operator$index$1').NamedNodeMap = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').NamedNodeMap = function() { return this.length; };
$.dynamicFunction('is$List2').NamedNodeMap = function() { return true; };
$.dynamicFunction('is$Collection').NamedNodeMap = function() { return true; };
$.dynamicFunction('get$userAgent').Navigator = function() { return this.userAgent; };
$.dynamicFunction('$dom_replaceChild$2').Node = function(newChild, oldChild) {
  return this.replaceChild(newChild,oldChild);
 };
$.dynamicFunction('$dom_removeChild$1').Node = function(oldChild) {
  return this.removeChild(oldChild);
 };
$.dynamicFunction('contains$1').Node = function(other) {
  return this.contains(other);
 };
$.dynamicFunction('$dom_appendChild$1').Node = function(newChild) {
  return this.appendChild(newChild);
 };
$.dynamicFunction('set$text').Node = function(value) {
  this.textContent = value;;
 };
$.dynamicFunction('get$parent').Node = function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$parent')) {
    return this.parentNode;;
  } else {
    return Object.prototype.get$parent.call(this);
  }
 };
$.dynamicFunction('get$$$dom_childNodes').Node = function() {
  return this.childNodes;;
 };
$.dynamicFunction('replaceWith$1').Node = function(otherNode) {
  try {
    var parent$ = this.get$parent();
    parent$.$dom_replaceChild$2(otherNode, this);
  }catch (t0) {
    $.unwrapException(t0);
  }
  return this;
 };
$.dynamicFunction('remove$0').Node = function() {
  if (!$.eqNullB(this.get$parent())) {
    this.get$parent().$dom_removeChild$1(this);
  }
  return this;
 };
$.dynamicFunction('get$nodes').Node = function() {
  return $._lib_ChildNodeListLazy$1(this);
 };
$.dynamicFunction('filter$1').NodeIterator = function(arg0) { return this.filter.$call$1(arg0); };
$.dynamicFunction('operator$index$1').NodeList = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').NodeList = function() { return this.length; };
$.dynamicFunction('getRange$2').NodeList = function(start, rangeLength) {
  return $._lib_NodeListWrapper$1($.getRange2(this, start, rangeLength, []));
 };
$.dynamicFunction('get$first').NodeList = function() {
  return this.operator$index$1(0);
 };
$.dynamicFunction('first$0').NodeList = function() { return this.get$first().$call$0(); };
$.dynamicFunction('last$0').NodeList = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').NodeList = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').NodeList = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('isEmpty$0').NodeList = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('filter$1').NodeList = function(f) {
  return $._lib_NodeListWrapper$1($.filter3(this, [], f));
 };
$.dynamicFunction('forEach$1').NodeList = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('operator$indexSet$2').NodeList = function(index, value) {
  this._lib_parent.$dom_replaceChild$2(value, this.operator$index$1(index));
 };
$.dynamicFunction('clear$0').NodeList = function() {
  this._lib_parent.set$text('');
 };
$.dynamicFunction('removeLast$0').NodeList = function() {
  var result = this.last$0();
  if (!$.eqNullB(result)) {
    this._lib_parent.$dom_removeChild$1(result);
  }
  return result;
 };
$.dynamicFunction('addLast$1').NodeList = function(value) {
  this._lib_parent.$dom_appendChild$1(value);
 };
$.dynamicFunction('add$1').NodeList = function(value) {
  this._lib_parent.$dom_appendChild$1(value);
 };
$.dynamicFunction('iterator$0').NodeList = function() {
  var t0 = $._lib_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'Node'}));
  return t0;
 };
$.dynamicFunction('is$List2').NodeList = function() { return true; };
$.dynamicFunction('is$Collection').NodeList = function() { return true; };
$.dynamicFunction('query$1').NodeSelector = function(selectors) {
  return this.querySelector(selectors);
 };
$.dynamicFunction('close$0').Notification = function() {
  return this.close();
 };
$.dynamicFunction('get$tag').Notification = function() { return this.tag; };
$.dynamicFunction('get$on').Notification = function() {
  return $._lib_NotificationEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').HTMLOListElement = function() { return true; };
$.dynamicFunction('get$data').HTMLObjectElement = function() { return this.data; };
$.dynamicFunction('is$Element').HTMLObjectElement = function() { return true; };
$.dynamicFunction('toString$0').OperationNotAllowedException = function() {
  return this.toString();
 };
$.dynamicFunction('get$message').OperationNotAllowedException = function() { return this.message; };
$.dynamicFunction('is$Element').HTMLOptGroupElement = function() { return true; };
$.dynamicFunction('get$value').HTMLOptionElement = function() { return this.value; };
$.dynamicFunction('set$value').HTMLOptionElement = function(v) { this.value = v; };
$.dynamicFunction('is$Element').HTMLOptionElement = function() { return true; };
$.dynamicFunction('get$value').HTMLOutputElement = function() { return this.value; };
$.dynamicFunction('set$value').HTMLOutputElement = function(v) { this.value = v; };
$.dynamicFunction('is$Element').HTMLOutputElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLParagraphElement = function() { return true; };
$.dynamicFunction('get$value').HTMLParamElement = function() { return this.value; };
$.dynamicFunction('set$value').HTMLParamElement = function(v) { this.value = v; };
$.dynamicFunction('is$Element').HTMLParamElement = function() { return true; };
$.dynamicFunction('close$0').PeerConnection00 = function() {
  return this.close();
 };
$.dynamicFunction('$dom_addEventListener$3').PeerConnection00 = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').PeerConnection00 = function() {
  return $._lib_PeerConnection00EventsImpl$1(this);
 };
$.dynamicFunction('get$message').PositionError = function() { return this.message; };
$.dynamicFunction('is$Element').HTMLPreElement = function() { return true; };
$.dynamicFunction('get$data').ProcessingInstruction = function() { return this.data; };
$.dynamicFunction('get$value').HTMLProgressElement = function() { return this.value; };
$.dynamicFunction('set$value').HTMLProgressElement = function(v) { this.value = v; };
$.dynamicFunction('is$Element').HTMLProgressElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLQuoteElement = function() { return true; };
$.dynamicFunction('toString$0').Range = function() {
  return this.toString();
 };
$.dynamicFunction('toString$0').RangeException = function() {
  return this.toString();
 };
$.dynamicFunction('get$message').RangeException = function() { return this.message; };
$.dynamicFunction('get$message').SQLError = function() { return this.message; };
$.dynamicFunction('get$message').SQLException = function() { return this.message; };
$.dynamicFunction('get$length').SQLResultSetRowList = function() { return this.length; };
$.dynamicFunction('is$Element').SVGAElement = function() { return true; };
$.dynamicFunction('is$Element').SVGAltGlyphDefElement = function() { return true; };
$.dynamicFunction('is$Element').SVGAltGlyphElement = function() { return true; };
$.dynamicFunction('is$Element').SVGAltGlyphItemElement = function() { return true; };
$.dynamicFunction('get$value').SVGAngle = function() { return this.value; };
$.dynamicFunction('set$value').SVGAngle = function(v) { this.value = v; };
$.dynamicFunction('is$Element').SVGAnimateColorElement = function() { return true; };
$.dynamicFunction('is$Element').SVGAnimateElement = function() { return true; };
$.dynamicFunction('is$Element').SVGAnimateMotionElement = function() { return true; };
$.dynamicFunction('is$Element').SVGAnimateTransformElement = function() { return true; };
$.dynamicFunction('is$Element').SVGAnimationElement = function() { return true; };
$.dynamicFunction('is$Element').SVGCircleElement = function() { return true; };
$.dynamicFunction('is$Element').SVGClipPathElement = function() { return true; };
$.dynamicFunction('is$Element').SVGComponentTransferFunctionElement = function() { return true; };
$.dynamicFunction('is$Element').SVGCursorElement = function() { return true; };
$.dynamicFunction('is$Element').SVGDefsElement = function() { return true; };
$.dynamicFunction('is$Element').SVGDescElement = function() { return true; };
$.dynamicFunction('is$Element').SVGDocument = function() { return true; };
$.dynamicFunction('get$elements').SVGElement = function() {
  return $.FilteredElementList$1(this);
 };
$.dynamicFunction('is$Element').SVGElement = function() { return true; };
$.dynamicFunction('get$on').SVGElementInstance = function() {
  return $._lib_SVGElementInstanceEventsImpl$1(this);
 };
$.dynamicFunction('get$length').SVGElementInstanceList = function() { return this.length; };
$.dynamicFunction('is$Element').SVGEllipseElement = function() { return true; };
$.dynamicFunction('toString$0').SVGException = function() {
  return this.toString();
 };
$.dynamicFunction('get$message').SVGException = function() { return this.message; };
$.dynamicFunction('is$Element').SVGFEBlendElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFEColorMatrixElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFEComponentTransferElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFECompositeElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFEConvolveMatrixElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFEDiffuseLightingElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFEDisplacementMapElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFEDistantLightElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFEDropShadowElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFEFloodElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFEFuncAElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFEFuncBElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFEFuncGElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFEFuncRElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFEGaussianBlurElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFEImageElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFEMergeElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFEMergeNodeElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFEMorphologyElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFEOffsetElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFEPointLightElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFESpecularLightingElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFESpotLightElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFETileElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFETurbulenceElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFilterElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFontElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFontFaceElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFontFaceFormatElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFontFaceNameElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFontFaceSrcElement = function() { return true; };
$.dynamicFunction('is$Element').SVGFontFaceUriElement = function() { return true; };
$.dynamicFunction('is$Element').SVGForeignObjectElement = function() { return true; };
$.dynamicFunction('is$Element').SVGGElement = function() { return true; };
$.dynamicFunction('is$Element').SVGGlyphElement = function() { return true; };
$.dynamicFunction('is$Element').SVGGlyphRefElement = function() { return true; };
$.dynamicFunction('is$Element').SVGGradientElement = function() { return true; };
$.dynamicFunction('is$Element').SVGHKernElement = function() { return true; };
$.dynamicFunction('is$Element').SVGImageElement = function() { return true; };
$.dynamicFunction('get$value').SVGLength = function() { return this.value; };
$.dynamicFunction('set$value').SVGLength = function(v) { this.value = v; };
$.dynamicFunction('clear$0').SVGLengthList = function() {
  return this.clear();
 };
$.dynamicFunction('is$Element').SVGLineElement = function() { return true; };
$.dynamicFunction('is$Element').SVGLinearGradientElement = function() { return true; };
$.dynamicFunction('is$Element').SVGMPathElement = function() { return true; };
$.dynamicFunction('is$Element').SVGMarkerElement = function() { return true; };
$.dynamicFunction('is$Element').SVGMaskElement = function() { return true; };
$.dynamicFunction('is$Element').SVGMetadataElement = function() { return true; };
$.dynamicFunction('is$Element').SVGMissingGlyphElement = function() { return true; };
$.dynamicFunction('get$value').SVGNumber = function() { return this.value; };
$.dynamicFunction('set$value').SVGNumber = function(v) { this.value = v; };
$.dynamicFunction('clear$0').SVGNumberList = function() {
  return this.clear();
 };
$.dynamicFunction('is$Element').SVGPathElement = function() { return true; };
$.dynamicFunction('clear$0').SVGPathSegList = function() {
  return this.clear();
 };
$.dynamicFunction('is$Element').SVGPatternElement = function() { return true; };
$.dynamicFunction('clear$0').SVGPointList = function() {
  return this.clear();
 };
$.dynamicFunction('is$Element').SVGPolygonElement = function() { return true; };
$.dynamicFunction('is$Element').SVGPolylineElement = function() { return true; };
$.dynamicFunction('is$Element').SVGRadialGradientElement = function() { return true; };
$.dynamicFunction('is$Element').SVGRectElement = function() { return true; };
$.dynamicFunction('is$Element').SVGSVGElement = function() { return true; };
$.dynamicFunction('is$Element').SVGScriptElement = function() { return true; };
$.dynamicFunction('is$Element').SVGSetElement = function() { return true; };
$.dynamicFunction('is$Element').SVGStopElement = function() { return true; };
$.dynamicFunction('clear$0').SVGStringList = function() {
  return this.clear();
 };
$.dynamicFunction('is$Element').SVGStyleElement = function() { return true; };
$.dynamicFunction('is$Element').SVGSwitchElement = function() { return true; };
$.dynamicFunction('is$Element').SVGSymbolElement = function() { return true; };
$.dynamicFunction('is$Element').SVGTRefElement = function() { return true; };
$.dynamicFunction('is$Element').SVGTSpanElement = function() { return true; };
$.dynamicFunction('is$Element').SVGTextContentElement = function() { return true; };
$.dynamicFunction('is$Element').SVGTextElement = function() { return true; };
$.dynamicFunction('is$Element').SVGTextPathElement = function() { return true; };
$.dynamicFunction('is$Element').SVGTextPositioningElement = function() { return true; };
$.dynamicFunction('is$Element').SVGTitleElement = function() { return true; };
$.dynamicFunction('clear$0').SVGTransformList = function() {
  return this.clear();
 };
$.dynamicFunction('is$Element').SVGUseElement = function() { return true; };
$.dynamicFunction('is$Element').SVGVKernElement = function() { return true; };
$.dynamicFunction('is$Element').SVGViewElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLScriptElement = function() { return true; };
$.dynamicFunction('add$2').HTMLSelectElement = function(element, before) {
  return this.add(element,before);
 };
$.dynamicFunction('get$value').HTMLSelectElement = function() { return this.value; };
$.dynamicFunction('set$value').HTMLSelectElement = function(v) { this.value = v; };
$.dynamicFunction('get$length').HTMLSelectElement = function() { return this.length; };
$.dynamicFunction('set$length').HTMLSelectElement = function(v) { this.length = v; };
$.dynamicFunction('is$Element').HTMLSelectElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLShadowElement = function() { return true; };
$.dynamicFunction('is$Element').ShadowRoot = function() { return true; };
$.dynamicFunction('get$on').SharedWorkerContext = function() {
  return $._lib_SharedWorkerContextEventsImpl$1(this);
 };
$.dynamicFunction('is$Element').HTMLSourceElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLSpanElement = function() { return true; };
$.dynamicFunction('get$length').SpeechGrammarList = function() { return this.length; };
$.dynamicFunction('get$length').SpeechInputResultList = function() { return this.length; };
$.dynamicFunction('$dom_addEventListener$3').SpeechRecognition = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').SpeechRecognition = function() {
  return $._lib_SpeechRecognitionEventsImpl$1(this);
 };
$.dynamicFunction('get$message').SpeechRecognitionError = function() { return this.message; };
$.dynamicFunction('get$error').SpeechRecognitionEvent = function() { return this.error; };
$.dynamicFunction('get$length').SpeechRecognitionResult = function() { return this.length; };
$.dynamicFunction('get$length').SpeechRecognitionResultList = function() { return this.length; };
$.dynamicFunction('$dom_setItem$2').Storage = function(key, data) {
  return this.setItem(key,data);
 };
$.dynamicFunction('$dom_key$1').Storage = function(index) {
  return this.key(index);
 };
$.dynamicFunction('$dom_getItem$1').Storage = function(key) {
  return this.getItem(key);
 };
$.dynamicFunction('$dom_clear$0').Storage = function() {
  return this.clear();
 };
$.dynamicFunction('get$$$dom_length').Storage = function() {
  return this.length;;
 };
$.dynamicFunction('isEmpty$0').Storage = function() {
  return $.eqNull(this.$dom_key$1(0));
 };
$.dynamicFunction('get$length').Storage = function() {
  return this.get$$$dom_length();
 };
$.dynamicFunction('forEach$1').Storage = function(f) {
  for (var i = 0; true; i = i + 1) {
    var key = this.$dom_key$1(i);
    if ($.eqNullB(key)) {
      return;
    }
    f.$call$2(key, this.operator$index$1(key));
  }
 };
$.dynamicFunction('clear$0').Storage = function() {
  return this.$dom_clear$0();
 };
$.dynamicFunction('operator$indexSet$2').Storage = function(key, value) {
  return this.$dom_setItem$2(key, value);
 };
$.dynamicFunction('operator$index$1').Storage = function(key) {
  return this.$dom_getItem$1(key);
 };
$.dynamicFunction('containsKey$1').Storage = function(key) {
  return !$.eqNullB(this.$dom_getItem$1(key));
 };
$.dynamicFunction('is$Map').Storage = function() { return true; };
$.dynamicFunction('get$key').StorageEvent = function() { return this.key; };
$.dynamicFunction('is$Element').HTMLStyleElement = function() { return true; };
$.dynamicFunction('getRange$2').StyleSheetList = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeLast$0').StyleSheetList = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').StyleSheetList = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').StyleSheetList = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').StyleSheetList = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('isEmpty$0').StyleSheetList = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('filter$1').StyleSheetList = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').StyleSheetList = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addLast$1').StyleSheetList = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').StyleSheetList = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').StyleSheetList = function() {
  var t0 = $._lib_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'StyleSheet'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').StyleSheetList = function(index, value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot assign element of immutable List.'));
 };
$.dynamicFunction('operator$index$1').StyleSheetList = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').StyleSheetList = function() { return this.length; };
$.dynamicFunction('is$List2').StyleSheetList = function() { return true; };
$.dynamicFunction('is$Collection').StyleSheetList = function() { return true; };
$.dynamicFunction('is$Element').HTMLTableCaptionElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLTableCellElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLTableColElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLTableElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLTableRowElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLTableSectionElement = function() { return true; };
$.dynamicFunction('get$value').HTMLTextAreaElement = function() { return this.value; };
$.dynamicFunction('set$value').HTMLTextAreaElement = function(v) { this.value = v; };
$.dynamicFunction('is$Element').HTMLTextAreaElement = function() { return true; };
$.dynamicFunction('get$data').TextEvent = function() { return this.data; };
$.dynamicFunction('$dom_addEventListener$3').TextTrack = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').TextTrack = function() {
  return $._lib_TextTrackEventsImpl$1(this);
 };
$.dynamicFunction('$dom_addEventListener$3').TextTrackCue = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('set$text').TextTrackCue = function(v) { this.text = v; };
$.dynamicFunction('get$on').TextTrackCue = function() {
  return $._lib_TextTrackCueEventsImpl$1(this);
 };
$.dynamicFunction('get$length').TextTrackCueList = function() { return this.length; };
$.dynamicFunction('$dom_addEventListener$3').TextTrackList = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$length').TextTrackList = function() { return this.length; };
$.dynamicFunction('get$on').TextTrackList = function() {
  return $._lib_TextTrackListEventsImpl$1(this);
 };
$.dynamicFunction('get$length').TimeRanges = function() { return this.length; };
$.dynamicFunction('is$Element').HTMLTitleElement = function() { return true; };
$.dynamicFunction('getRange$2').TouchList = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeLast$0').TouchList = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').TouchList = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').TouchList = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').TouchList = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('isEmpty$0').TouchList = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('filter$1').TouchList = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').TouchList = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addLast$1').TouchList = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').TouchList = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').TouchList = function() {
  var t0 = $._lib_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'Touch'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').TouchList = function(index, value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot assign element of immutable List.'));
 };
$.dynamicFunction('operator$index$1').TouchList = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').TouchList = function() { return this.length; };
$.dynamicFunction('is$List2').TouchList = function() { return true; };
$.dynamicFunction('is$Collection').TouchList = function() { return true; };
$.dynamicFunction('is$Element').HTMLTrackElement = function() { return true; };
$.dynamicFunction('filter$1').TreeWalker = function(arg0) { return this.filter.$call$1(arg0); };
$.dynamicFunction('is$Element').HTMLUListElement = function() { return true; };
$.dynamicFunction('getRange$2').Uint16Array = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeLast$0').Uint16Array = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').Uint16Array = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').Uint16Array = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').Uint16Array = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('isEmpty$0').Uint16Array = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('filter$1').Uint16Array = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').Uint16Array = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addLast$1').Uint16Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').Uint16Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').Uint16Array = function() {
  var t0 = $._lib_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'int'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').Uint16Array = function(index, value) {
  this[index] = value;
 };
$.dynamicFunction('operator$index$1').Uint16Array = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').Uint16Array = function() { return this.length; };
$.dynamicFunction('is$List2').Uint16Array = function() { return true; };
$.dynamicFunction('is$Collection').Uint16Array = function() { return true; };
$.dynamicFunction('getRange$2').Uint32Array = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeLast$0').Uint32Array = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').Uint32Array = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').Uint32Array = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').Uint32Array = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('isEmpty$0').Uint32Array = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('filter$1').Uint32Array = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').Uint32Array = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addLast$1').Uint32Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').Uint32Array = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').Uint32Array = function() {
  var t0 = $._lib_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'int'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').Uint32Array = function(index, value) {
  this[index] = value;
 };
$.dynamicFunction('operator$index$1').Uint32Array = function(index) {
  return this[index];;
 };
$.dynamicFunction('get$length').Uint32Array = function() { return this.length; };
$.dynamicFunction('is$List2').Uint32Array = function() { return true; };
$.dynamicFunction('is$Collection').Uint32Array = function() { return true; };
$.dynamicFunction('getRange$2').Uint8Array = function(start, rangeLength) {
  if (Object.getPrototypeOf(this).hasOwnProperty('getRange$2')) {
    return $.getRange2(this, start, rangeLength, []);
  } else {
    return Object.prototype.getRange$2.call(this, start, rangeLength);
  }
 };
$.dynamicFunction('removeLast$0').Uint8Array = function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('removeLast$0')) {
    throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
  } else {
    return Object.prototype.removeLast$0.call(this);
  }
 };
$.dynamicFunction('last$0').Uint8Array = function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('last$0')) {
    return this.operator$index$1($.sub($.get$length(this), 1));
  } else {
    return Object.prototype.last$0.call(this);
  }
 };
$.dynamicFunction('indexOf$2').Uint8Array = function(element, start) {
  if (Object.getPrototypeOf(this).hasOwnProperty('indexOf$2')) {
    return $.indexOf2(this, element, start, $.get$length(this));
  } else {
    return Object.prototype.indexOf$2.call(this, element, start);
  }
 };
$.dynamicFunction('indexOf$1').Uint8Array = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('isEmpty$0').Uint8Array = function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('isEmpty$0')) {
    return $.eq($.get$length(this), 0);
  } else {
    return Object.prototype.isEmpty$0.call(this);
  }
 };
$.dynamicFunction('filter$1').Uint8Array = function(f) {
  if (Object.getPrototypeOf(this).hasOwnProperty('filter$1')) {
    return $.filter3(this, [], f);
  } else {
    return Object.prototype.filter$1.call(this, f);
  }
 };
$.dynamicFunction('forEach$1').Uint8Array = function(f) {
  if (Object.getPrototypeOf(this).hasOwnProperty('forEach$1')) {
    return $.forEach3(this, f);
  } else {
    return Object.prototype.forEach$1.call(this, f);
  }
 };
$.dynamicFunction('addLast$1').Uint8Array = function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('addLast$1')) {
    throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
  } else {
    return Object.prototype.addLast$1.call(this, value);
  }
 };
$.dynamicFunction('add$1').Uint8Array = function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('add$1')) {
    throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
  } else {
    return Object.prototype.add$1.call(this, value);
  }
 };
$.dynamicFunction('iterator$0').Uint8Array = function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('iterator$0')) {
    var t0 = $._lib_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'int'}));
  return t0;
  } else {
    return Object.prototype.iterator$0.call(this);
  }
 };
$.dynamicFunction('operator$indexSet$2').Uint8Array = function(index, value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('operator$indexSet$2')) {
    this[index] = value;
  } else {
    return Object.prototype.operator$indexSet$2.call(this, index, value);
  }
 };
$.dynamicFunction('operator$index$1').Uint8Array = function(index) {
  if (Object.getPrototypeOf(this).hasOwnProperty('operator$index$1')) {
    return this[index];;
  } else {
    return Object.prototype.operator$index$1.call(this, index);
  }
 };
$.dynamicFunction('get$length').Uint8Array = function() { return this.length; };
$.dynamicFunction('is$List2').Uint8Array = function() { return true; };
$.dynamicFunction('is$Collection').Uint8Array = function() { return true; };
$.dynamicFunction('getRange$2').Uint8ClampedArray = function(start, rangeLength) {
  return $.getRange2(this, start, rangeLength, []);
 };
$.dynamicFunction('removeLast$0').Uint8ClampedArray = function() {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot removeLast on immutable List.'));
 };
$.dynamicFunction('last$0').Uint8ClampedArray = function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
 };
$.dynamicFunction('indexOf$2').Uint8ClampedArray = function(element, start) {
  return $.indexOf2(this, element, start, $.get$length(this));
 };
$.dynamicFunction('indexOf$1').Uint8ClampedArray = function(element) {
  return this.indexOf$2(element,0)
};
$.dynamicFunction('isEmpty$0').Uint8ClampedArray = function() {
  return $.eq($.get$length(this), 0);
 };
$.dynamicFunction('filter$1').Uint8ClampedArray = function(f) {
  return $.filter3(this, [], f);
 };
$.dynamicFunction('forEach$1').Uint8ClampedArray = function(f) {
  return $.forEach3(this, f);
 };
$.dynamicFunction('addLast$1').Uint8ClampedArray = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('add$1').Uint8ClampedArray = function(value) {
  throw $.captureStackTrace($.UnsupportedOperationException$1('Cannot add to immutable List.'));
 };
$.dynamicFunction('iterator$0').Uint8ClampedArray = function() {
  var t0 = $._lib_FixedSizeListIterator$1(this);
  $.setRuntimeTypeInfo(t0, ({T: 'int'}));
  return t0;
 };
$.dynamicFunction('operator$indexSet$2').Uint8ClampedArray = function(index, value) {
  this[index] = value;
 };
$.dynamicFunction('operator$index$1').Uint8ClampedArray = function(index) {
  return this[index];;
 };
$.dynamicFunction('is$List2').Uint8ClampedArray = function() { return true; };
$.dynamicFunction('is$Collection').Uint8ClampedArray = function() { return true; };
$.dynamicFunction('is$Element').HTMLUnknownElement = function() { return true; };
$.dynamicFunction('is$Element').HTMLVideoElement = function() { return true; };
$.dynamicFunction('send$1').WebSocket = function(data) {
  return this.send(data);
 };
$.dynamicFunction('close$2').WebSocket = function(code, reason) {
  return this.close(code,reason);
 };
$.dynamicFunction('close$0').WebSocket = function() {
  return this.close();
};
$.dynamicFunction('$dom_addEventListener$3').WebSocket = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').WebSocket = function() {
  return $._lib_WebSocketEventsImpl$1(this);
 };
$.dynamicFunction('open$3').DOMWindow = function(url, name, options) {
  return this.open(url,name,options);
 };
$.dynamicFunction('open$2').DOMWindow = function(url,name$) {
  return this.open(url,name$);
};
$.dynamicFunction('close$0').DOMWindow = function() {
  return this.close();
 };
$.dynamicFunction('$dom_addEventListener$3').DOMWindow = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$status').DOMWindow = function() { return this.status; };
$.dynamicFunction('get$navigator').DOMWindow = function() { return this.navigator; };
$.dynamicFunction('get$localStorage').DOMWindow = function() { return this.localStorage; };
$.dynamicFunction('get$length').DOMWindow = function() { return this.length; };
$.dynamicFunction('get$console').DOMWindow = function() { return this.console; };
$.dynamicFunction('get$closed').DOMWindow = function() { return this.closed; };
$.dynamicFunction('get$on').DOMWindow = function() {
  return $._lib_WindowEventsImpl$1(this);
 };
$.dynamicFunction('get$on').Worker = function() {
  return $._lib_WorkerEventsImpl$1(this);
 };
$.dynamicFunction('close$0').WorkerContext = function() {
  return this.close();
 };
$.dynamicFunction('$dom_addEventListener$3').WorkerContext = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$navigator').WorkerContext = function() { return this.navigator; };
$.dynamicFunction('get$on').WorkerContext = function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $._lib_WorkerContextEventsImpl$1(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
 };
$.dynamicFunction('toString$0').WorkerLocation = function() {
  return this.toString();
 };
$.dynamicFunction('search$1$ll').WorkerLocation = function(arg0) { return this.search.$call$1$ll(arg0); };
$.dynamicFunction('get$userAgent').WorkerNavigator = function() { return this.userAgent; };
$.dynamicFunction('setRequestHeader$2').XMLHttpRequest = function(header, value) {
  return this.setRequestHeader(header,value);
 };
$.dynamicFunction('send$1').XMLHttpRequest = function(data) {
  return this.send(data);
 };
$.dynamicFunction('open$5').XMLHttpRequest = function(method, url, async, user, password) {
  return this.open(method,url,async,user,password);
 };
$.dynamicFunction('open$2').XMLHttpRequest = function(method,url) {
  return this.open(method,url);
};
$.dynamicFunction('open$3').XMLHttpRequest = function(method,url,async) {
  return this.open(method,url,async);
};
$.dynamicFunction('getAllResponseHeaders$0').XMLHttpRequest = function() {
  return this.getAllResponseHeaders();
 };
$.dynamicFunction('$dom_addEventListener$3').XMLHttpRequest = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$status').XMLHttpRequest = function() { return this.status; };
$.dynamicFunction('get$responseText').XMLHttpRequest = function() { return this.responseText; };
$.dynamicFunction('get$on').XMLHttpRequest = function() {
  return $._lib_XMLHttpRequestEventsImpl$1(this);
 };
$.dynamicFunction('toString$0').XMLHttpRequestException = function() {
  return this.toString();
 };
$.dynamicFunction('get$message').XMLHttpRequestException = function() { return this.message; };
$.dynamicFunction('$dom_addEventListener$3').XMLHttpRequestUpload = function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener),useCapture);
 };
$.dynamicFunction('get$on').XMLHttpRequestUpload = function() {
  return $._lib_XMLHttpRequestUploadEventsImpl$1(this);
 };
$.dynamicFunction('toString$0').XPathException = function() {
  return this.toString();
 };
$.dynamicFunction('get$message').XPathException = function() { return this.message; };
// 286 dynamic classes.
// 301 classes
// 25 !leaf
(function(){
  var v0/*class(_SVGTextPositioningElementImpl)*/ = 'SVGTextPositioningElement|SVGTextElement|SVGTSpanElement|SVGTRefElement|SVGAltGlyphElement';
  var v1/*class(_SVGTextContentElementImpl)*/ = [v0/*class(_SVGTextPositioningElementImpl)*/,'SVGTextContentElement|SVGTextPathElement'].join('|');
  var v2/*class(_SVGGradientElementImpl)*/ = 'SVGGradientElement|SVGRadialGradientElement|SVGLinearGradientElement';
  var v3/*class(_SVGComponentTransferFunctionElementImpl)*/ = 'SVGComponentTransferFunctionElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncAElement';
  var v4/*class(_SVGAnimationElementImpl)*/ = 'SVGAnimationElement|SVGSetElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGAnimateElement|SVGAnimateColorElement';
  var v5/*class(_SVGElementImpl)*/ = [v1/*class(_SVGTextContentElementImpl)*/,v2/*class(_SVGGradientElementImpl)*/,v3/*class(_SVGComponentTransferFunctionElementImpl)*/,v4/*class(_SVGAnimationElementImpl)*/,'SVGElement|SVGViewElement|SVGVKernElement|SVGUseElement|SVGTitleElement|SVGSymbolElement|SVGSwitchElement|SVGStyleElement|SVGStopElement|SVGScriptElement|SVGSVGElement|SVGRectElement|SVGPolylineElement|SVGPolygonElement|SVGPatternElement|SVGPathElement|SVGMissingGlyphElement|SVGMetadataElement|SVGMaskElement|SVGMarkerElement|SVGMPathElement|SVGLineElement|SVGImageElement|SVGHKernElement|SVGGlyphRefElement|SVGGlyphElement|SVGGElement|SVGForeignObjectElement|SVGFontFaceUriElement|SVGFontFaceSrcElement|SVGFontFaceNameElement|SVGFontFaceFormatElement|SVGFontFaceElement|SVGFontElement|SVGFilterElement|SVGFETurbulenceElement|SVGFETileElement|SVGFESpotLightElement|SVGFESpecularLightingElement|SVGFEPointLightElement|SVGFEOffsetElement|SVGFEMorphologyElement|SVGFEMergeNodeElement|SVGFEMergeElement|SVGFEImageElement|SVGFEGaussianBlurElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDistantLightElement|SVGFEDisplacementMapElement|SVGFEDiffuseLightingElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEComponentTransferElement|SVGFEColorMatrixElement|SVGFEBlendElement|SVGEllipseElement|SVGDescElement|SVGDefsElement|SVGCursorElement|SVGClipPathElement|SVGCircleElement|SVGAltGlyphItemElement|SVGAltGlyphDefElement|SVGAElement'].join('|');
  var v6/*class(_MediaElementImpl)*/ = 'HTMLMediaElement|HTMLVideoElement|HTMLAudioElement';
  var v7/*class(_ElementImpl)*/ = [v5/*class(_SVGElementImpl)*/,v6/*class(_MediaElementImpl)*/,'Element|HTMLUnknownElement|HTMLUListElement|HTMLTrackElement|HTMLTitleElement|HTMLTextAreaElement|HTMLTableSectionElement|HTMLTableRowElement|HTMLTableElement|HTMLTableColElement|HTMLTableCellElement|HTMLTableCaptionElement|HTMLStyleElement|HTMLSpanElement|HTMLSourceElement|HTMLShadowElement|HTMLSelectElement|HTMLScriptElement|HTMLQuoteElement|HTMLProgressElement|HTMLPreElement|HTMLParamElement|HTMLParagraphElement|HTMLOutputElement|HTMLOptionElement|HTMLOptGroupElement|HTMLObjectElement|HTMLOListElement|HTMLModElement|HTMLMeterElement|HTMLMetaElement|HTMLMenuElement|HTMLMarqueeElement|HTMLMapElement|HTMLLinkElement|HTMLLegendElement|HTMLLabelElement|HTMLLIElement|HTMLKeygenElement|HTMLInputElement|HTMLImageElement|HTMLIFrameElement|HTMLHtmlElement|HTMLHeadingElement|HTMLHeadElement|HTMLHRElement|HTMLFrameSetElement|HTMLFrameElement|HTMLFormElement|HTMLFontElement|HTMLFieldSetElement|HTMLEmbedElement|HTMLDivElement|HTMLDirectoryElement|HTMLDetailsElement|HTMLDListElement|HTMLContentElement|HTMLCanvasElement|HTMLButtonElement|HTMLBodyElement|HTMLBaseFontElement|HTMLBaseElement|HTMLBRElement|HTMLAreaElement|HTMLAppletElement|HTMLAnchorElement|HTMLElement'].join('|');
  var v8/*class(_DocumentFragmentImpl)*/ = 'DocumentFragment|ShadowRoot';
  var v9/*class(_DocumentImpl)*/ = 'HTMLDocument|SVGDocument';
  var v10/*class(_CharacterDataImpl)*/ = 'CharacterData|Text|CDATASection|Comment';
  var v11/*class(_WorkerContextImpl)*/ = 'WorkerContext|SharedWorkerContext|DedicatedWorkerContext';
  var v12/*class(_NodeImpl)*/ = [v7/*class(_ElementImpl)*/,v8/*class(_DocumentFragmentImpl)*/,v9/*class(_DocumentImpl)*/,v10/*class(_CharacterDataImpl)*/,'Node|ProcessingInstruction|Notation|EntityReference|Entity|DocumentType|Attr'].join('|');
  var v13/*class(_MediaStreamImpl)*/ = 'MediaStream|LocalMediaStream';
  var v14/*class(_IDBRequestImpl)*/ = 'IDBRequest|IDBVersionChangeRequest';
  var v15/*class(_AbstractWorkerImpl)*/ = 'AbstractWorker|Worker|SharedWorker';
  var table = [
    // [dynamic-dispatch-tag, tags of classes implementing dynamic-dispatch-tag]
    ['SVGTextPositioningElement', v0/*class(_SVGTextPositioningElementImpl)*/],
    ['SVGTextContentElement', v1/*class(_SVGTextContentElementImpl)*/],
    ['AbstractWorker', v15/*class(_AbstractWorkerImpl)*/],
    ['Uint8Array', 'Uint8Array|Uint8ClampedArray'],
    ['AudioParam', 'AudioParam|AudioGain'],
    ['WorkerContext', v11/*class(_WorkerContextImpl)*/],
    ['CSSValueList', 'CSSValueList|WebKitCSSFilterValue|WebKitCSSTransformValue'],
    ['CharacterData', v10/*class(_CharacterDataImpl)*/],
    ['DOMTokenList', 'DOMTokenList|DOMSettableTokenList'],
    ['HTMLDocument', v9/*class(_DocumentImpl)*/],
    ['DocumentFragment', v8/*class(_DocumentFragmentImpl)*/],
    ['SVGGradientElement', v2/*class(_SVGGradientElementImpl)*/],
    ['SVGComponentTransferFunctionElement', v3/*class(_SVGComponentTransferFunctionElementImpl)*/],
    ['SVGAnimationElement', v4/*class(_SVGAnimationElementImpl)*/],
    ['SVGElement', v5/*class(_SVGElementImpl)*/],
    ['HTMLMediaElement', v6/*class(_MediaElementImpl)*/],
    ['Element', v7/*class(_ElementImpl)*/],
    ['EntrySync', 'EntrySync|FileEntrySync|DirectoryEntrySync'],
    ['Node', v12/*class(_NodeImpl)*/],
    ['MediaStream', v13/*class(_MediaStreamImpl)*/],
    ['IDBRequest', v14/*class(_IDBRequestImpl)*/],
    ['EventTarget', [v11/*class(_WorkerContextImpl)*/,v12/*class(_NodeImpl)*/,v13/*class(_MediaStreamImpl)*/,v14/*class(_IDBRequestImpl)*/,v15/*class(_AbstractWorkerImpl)*/,'EventTarget|XMLHttpRequestUpload|XMLHttpRequest|DOMWindow|WebSocket|TextTrackList|TextTrackCue|TextTrack|SpeechRecognition|PeerConnection00|Notification|MessagePort|MediaController|IDBTransaction|IDBDatabase|FileWriter|FileReader|EventSource|DeprecatedPeerConnection|DOMApplicationCache|BatteryManager|AudioContext'].join('|')],
    ['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection'],
    ['IDBCursor', 'IDBCursor|IDBCursorWithValue']];
$.dynamicSetMetadata(table);
})();

})();
if (typeof window != 'undefined' && typeof document != 'undefined' &&
    window.addEventListener && document.readyState == 'loading') {
  window.addEventListener('DOMContentLoaded', function(e) {
    $.main();
  });
} else {
  $.main();
}
function init() {
  Isolate.$isolateProperties = {};
Isolate.$defineClass = function(cls, superclass, fields, prototype) {
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "(function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      var len = field.length;
      var lastChar = field[len - 1];
      var needsGetter = false;
      var needsSetter = false;
      switch (lastChar) {
        case '?': needsGetter = true; break;
        case '=': needsGetter = true; // Fall-through.
        case '!': needsSetter = true;
      }
      if (needsGetter || needsSetter) field = field.substring(0, len - 1);
      str += field;
      body += "this." + field + " = " + field + ";\n";
      if (needsGetter) {
        var getterString = "return this." + field + ";";
        prototype["get$" + field] = new Function(getterString);
      }
      if (needsSetter) {
        var setterString = "this." + field + " = v;";
        prototype["set$" + field] = new Function("v", setterString);
      }
    }
    str += ") {" + body + "})";
    constructor = eval(str);
  }
  Isolate.$isolateProperties[cls] = constructor;
  constructor.prototype = prototype;
  if (superclass !== "") {
    Isolate.$pendingClasses[cls] = superclass;
  }
};
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function() {
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    if (finishedClasses[cls]) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (prototype.__proto__) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      var hasOwnProperty = Object.prototype.hasOwnProperty;
      for (var member in prototype) {
        if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}
